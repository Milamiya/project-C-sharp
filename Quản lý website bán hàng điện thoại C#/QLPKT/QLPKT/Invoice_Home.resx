<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>