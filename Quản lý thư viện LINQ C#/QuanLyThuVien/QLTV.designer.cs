#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyThuVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTV")]
	public partial class QLTVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbThe(tbThe instance);
    partial void UpdatetbThe(tbThe instance);
    partial void DeletetbThe(tbThe instance);
    partial void InserttbSach(tbSach instance);
    partial void UpdatetbSach(tbSach instance);
    partial void DeletetbSach(tbSach instance);
    partial void InserttbPhieuMuon(tbPhieuMuon instance);
    partial void UpdatetbPhieuMuon(tbPhieuMuon instance);
    partial void DeletetbPhieuMuon(tbPhieuMuon instance);
    partial void InserttbDG(tbDG instance);
    partial void UpdatetbDG(tbDG instance);
    partial void DeletetbDG(tbDG instance);
    partial void InserttbUser(tbUser instance);
    partial void UpdatetbUser(tbUser instance);
    partial void DeletetbUser(tbUser instance);
    partial void InserttbTG(tbTG instance);
    partial void UpdatetbTG(tbTG instance);
    partial void DeletetbTG(tbTG instance);
    partial void InserttbDauSach(tbDauSach instance);
    partial void UpdatetbDauSach(tbDauSach instance);
    partial void DeletetbDauSach(tbDauSach instance);
    partial void InserttbNXB(tbNXB instance);
    partial void UpdatetbNXB(tbNXB instance);
    partial void DeletetbNXB(tbNXB instance);
    #endregion
		
		public QLTVDataContext() : 
				base(global::QuanLyThuVien.Properties.Settings.Default.QLTVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbThe> tbThes
		{
			get
			{
				return this.GetTable<tbThe>();
			}
		}
		
		public System.Data.Linq.Table<tbSach> tbSaches
		{
			get
			{
				return this.GetTable<tbSach>();
			}
		}
		
		public System.Data.Linq.Table<tbPhieuMuon> tbPhieuMuons
		{
			get
			{
				return this.GetTable<tbPhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<tbDG> tbDGs
		{
			get
			{
				return this.GetTable<tbDG>();
			}
		}
		
		public System.Data.Linq.Table<tbUser> tbUsers
		{
			get
			{
				return this.GetTable<tbUser>();
			}
		}
		
		public System.Data.Linq.Table<tbTG> tbTGs
		{
			get
			{
				return this.GetTable<tbTG>();
			}
		}
		
		public System.Data.Linq.Table<tbDauSach> tbDauSaches
		{
			get
			{
				return this.GetTable<tbDauSach>();
			}
		}
		
		public System.Data.Linq.Table<tbNXB> tbNXBs
		{
			get
			{
				return this.GetTable<tbNXB>();
			}
		}
		
		[Function(Name="dbo.uspThemNXb")]
		public int uspThemNXb([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaNXB", DbType="NChar(10)")] string maNXB, [Parameter(Name="TenNXB", DbType="NVarChar(50)")] string tenNXB, [Parameter(Name="DiaChi", DbType="NVarChar(50)")] string diaChi, [Parameter(Name="SDT", DbType="NChar(20)")] string sDT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maNXB, tenNXB, diaChi, sDT);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDTacGia")]
		public int CRUDTacGia([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaTG", DbType="NChar(10)")] string maTG, [Parameter(Name="TenTG", DbType="NVarChar(50)")] string tenTG, [Parameter(Name="DiaChi", DbType="NVarChar(50)")] string diaChi, [Parameter(Name="SDT", DbType="NChar(20)")] string sDT, [Parameter(Name="Email", DbType="NChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maTG, tenTG, diaChi, sDT, email);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDUser")]
		public int CRUDUser([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="TenDN", DbType="NChar(50)")] string tenDN, [Parameter(DbType="NChar(10)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, tenDN, pass);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDDauSach")]
		public int CRUDDauSach([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaDauSach", DbType="NChar(10)")] string maDauSach, [Parameter(Name="TenSach", DbType="NVarChar(50)")] string tenSach, [Parameter(Name="MaNXB", DbType="NChar(10)")] string maNXB, [Parameter(Name="MaTG", DbType="NChar(10)")] string maTG, [Parameter(Name="NamXuatBan", DbType="NChar(20)")] string namXuatBan, [Parameter(Name="ChuyenNganh", DbType="NVarChar(50)")] string chuyenNganh, [Parameter(Name="SoLuong", DbType="Int")] System.Nullable<int> soLuong, [Parameter(Name="GhiChu", DbType="NVarChar(50)")] string ghiChu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maDauSach, tenSach, maNXB, maTG, namXuatBan, chuyenNganh, soLuong, ghiChu);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.uspGetMaNXB")]
		public ISingleResult<uspGetMaNXBResult> uspGetMaNXB([Parameter(Name="TenNXB", DbType="NVarChar(50)")] string tenNXB, [Parameter(Name="MaNXB", DbType="NChar(10)")] ref string maNXB)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenNXB, maNXB);
			maNXB = ((string)(result.GetParameterValue(1)));
			return ((ISingleResult<uspGetMaNXBResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDPhieuMuon")]
		public int CRUDPhieuMuon([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaSach", DbType="NChar(100)")] string maSach, [Parameter(Name="MaThe", DbType="NChar(10)")] string maThe, [Parameter(Name="NgayMuon", DbType="NChar(20)")] string ngayMuon, [Parameter(Name="NgayTra", DbType="NChar(20)")] string ngayTra)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maSach, maThe, ngayMuon, ngayTra);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDThe")]
		public int CRUDThe([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaThe", DbType="NChar(10)")] string maThe, [Parameter(Name="MaDG", DbType="NChar(10)")] string maDG, [Parameter(Name="NgayCap", DbType="NChar(20)")] string ngayCap, [Parameter(Name="Han", DbType="NChar(20)")] string han)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maThe, maDG, ngayCap, han);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.CRUDDocGia")]
		public int CRUDDocGia([Parameter(Name="Kieu", DbType="Char(1)")] System.Nullable<char> kieu, [Parameter(Name="MaDG", DbType="NChar(10)")] string maDG, [Parameter(Name="TenDG", DbType="NVarChar(50)")] string tenDG, [Parameter(Name="ChucVu", DbType="NVarChar(50)")] string chucVu, [Parameter(Name="Lop", DbType="NChar(10)")] string lop, [Parameter(Name="Khoa", DbType="NVarChar(50)")] string khoa, [Parameter(Name="NgaySinh", DbType="NChar(20)")] string ngaySinh, [Parameter(Name="GioiTinh", DbType="NVarChar(50)")] string gioiTinh, [Parameter(Name="GhiChu", DbType="NVarChar(50)")] string ghiChu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kieu, maDG, tenDG, chucVu, lop, khoa, ngaySinh, gioiTinh, ghiChu);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.tbThe")]
	public partial class tbThe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private string _MaDG;
		
		private string _NgayCap;
		
		private string _Han;
		
		private EntitySet<tbPhieuMuon> _tbPhieuMuons;
		
		private EntityRef<tbDG> _tbDG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaDGChanging(string value);
    partial void OnMaDGChanged();
    partial void OnNgayCapChanging(string value);
    partial void OnNgayCapChanged();
    partial void OnHanChanging(string value);
    partial void OnHanChanged();
    #endregion
		
		public tbThe()
		{
			this._tbPhieuMuons = new EntitySet<tbPhieuMuon>(new Action<tbPhieuMuon>(this.attach_tbPhieuMuons), new Action<tbPhieuMuon>(this.detach_tbPhieuMuons));
			this._tbDG = default(EntityRef<tbDG>);
			OnCreated();
		}
		
		[Column(Storage="_MaThe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[Column(Storage="_MaDG", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					if (this._tbDG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[Column(Storage="_NgayCap", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this.OnNgayCapChanging(value);
					this.SendPropertyChanging();
					this._NgayCap = value;
					this.SendPropertyChanged("NgayCap");
					this.OnNgayCapChanged();
				}
			}
		}
		
		[Column(Storage="_Han", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Han
		{
			get
			{
				return this._Han;
			}
			set
			{
				if ((this._Han != value))
				{
					this.OnHanChanging(value);
					this.SendPropertyChanging();
					this._Han = value;
					this.SendPropertyChanged("Han");
					this.OnHanChanged();
				}
			}
		}
		
		[Association(Name="tbThe_tbPhieuMuon", Storage="_tbPhieuMuons", OtherKey="MaThe")]
		public EntitySet<tbPhieuMuon> tbPhieuMuons
		{
			get
			{
				return this._tbPhieuMuons;
			}
			set
			{
				this._tbPhieuMuons.Assign(value);
			}
		}
		
		[Association(Name="tbDG_tbThe", Storage="_tbDG", ThisKey="MaDG", IsForeignKey=true)]
		public tbDG tbDG
		{
			get
			{
				return this._tbDG.Entity;
			}
			set
			{
				tbDG previousValue = this._tbDG.Entity;
				if (((previousValue != value) 
							|| (this._tbDG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDG.Entity = null;
						previousValue.tbThes.Remove(this);
					}
					this._tbDG.Entity = value;
					if ((value != null))
					{
						value.tbThes.Add(this);
						this._MaDG = value.MaDG;
					}
					else
					{
						this._MaDG = default(string);
					}
					this.SendPropertyChanged("tbDG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbPhieuMuons(tbPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.tbThe = this;
		}
		
		private void detach_tbPhieuMuons(tbPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.tbThe = null;
		}
	}
	
	[Table(Name="dbo.tbSach")]
	public partial class tbSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private string _MaDauSach;
		
		private EntitySet<tbPhieuMuon> _tbPhieuMuons;
		
		private EntityRef<tbDauSach> _tbDauSach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnMaDauSachChanging(string value);
    partial void OnMaDauSachChanged();
    #endregion
		
		public tbSach()
		{
			this._tbPhieuMuons = new EntitySet<tbPhieuMuon>(new Action<tbPhieuMuon>(this.attach_tbPhieuMuons), new Action<tbPhieuMuon>(this.detach_tbPhieuMuons));
			this._tbDauSach = default(EntityRef<tbDauSach>);
			OnCreated();
		}
		
		[Column(Storage="_MaSach", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[Column(Storage="_MaDauSach", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaDauSach
		{
			get
			{
				return this._MaDauSach;
			}
			set
			{
				if ((this._MaDauSach != value))
				{
					if (this._tbDauSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDauSachChanging(value);
					this.SendPropertyChanging();
					this._MaDauSach = value;
					this.SendPropertyChanged("MaDauSach");
					this.OnMaDauSachChanged();
				}
			}
		}
		
		[Association(Name="tbSach_tbPhieuMuon", Storage="_tbPhieuMuons", OtherKey="MaSach")]
		public EntitySet<tbPhieuMuon> tbPhieuMuons
		{
			get
			{
				return this._tbPhieuMuons;
			}
			set
			{
				this._tbPhieuMuons.Assign(value);
			}
		}
		
		[Association(Name="tbDauSach_tbSach", Storage="_tbDauSach", ThisKey="MaDauSach", IsForeignKey=true)]
		public tbDauSach tbDauSach
		{
			get
			{
				return this._tbDauSach.Entity;
			}
			set
			{
				tbDauSach previousValue = this._tbDauSach.Entity;
				if (((previousValue != value) 
							|| (this._tbDauSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbDauSach.Entity = null;
						previousValue.tbSaches.Remove(this);
					}
					this._tbDauSach.Entity = value;
					if ((value != null))
					{
						value.tbSaches.Add(this);
						this._MaDauSach = value.MaDauSach;
					}
					else
					{
						this._MaDauSach = default(string);
					}
					this.SendPropertyChanged("tbDauSach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbPhieuMuons(tbPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.tbSach = this;
		}
		
		private void detach_tbPhieuMuons(tbPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.tbSach = null;
		}
	}
	
	[Table(Name="dbo.tbPhieuMuon")]
	public partial class tbPhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSach;
		
		private string _MaThe;
		
		private string _NgayMuon;
		
		private string _NgayTra;
		
		private EntityRef<tbSach> _tbSach;
		
		private EntityRef<tbThe> _tbThe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(string value);
    partial void OnMaSachChanged();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnNgayMuonChanging(string value);
    partial void OnNgayMuonChanged();
    partial void OnNgayTraChanging(string value);
    partial void OnNgayTraChanged();
    #endregion
		
		public tbPhieuMuon()
		{
			this._tbSach = default(EntityRef<tbSach>);
			this._tbThe = default(EntityRef<tbThe>);
			OnCreated();
		}
		
		[Column(Storage="_MaSach", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._tbSach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[Column(Storage="_MaThe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._tbThe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[Column(Storage="_NgayMuon", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[Column(Storage="_NgayTra", DbType="NChar(20)")]
		public string NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[Association(Name="tbSach_tbPhieuMuon", Storage="_tbSach", ThisKey="MaSach", IsForeignKey=true)]
		public tbSach tbSach
		{
			get
			{
				return this._tbSach.Entity;
			}
			set
			{
				tbSach previousValue = this._tbSach.Entity;
				if (((previousValue != value) 
							|| (this._tbSach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbSach.Entity = null;
						previousValue.tbPhieuMuons.Remove(this);
					}
					this._tbSach.Entity = value;
					if ((value != null))
					{
						value.tbPhieuMuons.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(string);
					}
					this.SendPropertyChanged("tbSach");
				}
			}
		}
		
		[Association(Name="tbThe_tbPhieuMuon", Storage="_tbThe", ThisKey="MaThe", IsForeignKey=true)]
		public tbThe tbThe
		{
			get
			{
				return this._tbThe.Entity;
			}
			set
			{
				tbThe previousValue = this._tbThe.Entity;
				if (((previousValue != value) 
							|| (this._tbThe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbThe.Entity = null;
						previousValue.tbPhieuMuons.Remove(this);
					}
					this._tbThe.Entity = value;
					if ((value != null))
					{
						value.tbPhieuMuons.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("tbThe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbDG")]
	public partial class tbDG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDG;
		
		private string _TenDG;
		
		private string _ChucVu;
		
		private string _Lop;
		
		private string _Khoa;
		
		private string _NgaySinh;
		
		private string _GioiTinh;
		
		private string _GhiChu;
		
		private EntitySet<tbThe> _tbThes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDGChanging(string value);
    partial void OnMaDGChanged();
    partial void OnTenDGChanging(string value);
    partial void OnTenDGChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnKhoaChanging(string value);
    partial void OnKhoaChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public tbDG()
		{
			this._tbThes = new EntitySet<tbThe>(new Action<tbThe>(this.attach_tbThes), new Action<tbThe>(this.detach_tbThes));
			OnCreated();
		}
		
		[Column(Storage="_MaDG", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDG
		{
			get
			{
				return this._MaDG;
			}
			set
			{
				if ((this._MaDG != value))
				{
					this.OnMaDGChanging(value);
					this.SendPropertyChanging();
					this._MaDG = value;
					this.SendPropertyChanged("MaDG");
					this.OnMaDGChanged();
				}
			}
		}
		
		[Column(Storage="_TenDG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDG
		{
			get
			{
				return this._TenDG;
			}
			set
			{
				if ((this._TenDG != value))
				{
					this.OnTenDGChanging(value);
					this.SendPropertyChanging();
					this._TenDG = value;
					this.SendPropertyChanged("TenDG");
					this.OnTenDGChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[Column(Storage="_Lop", DbType="NChar(10)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[Column(Storage="_Khoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Khoa
		{
			get
			{
				return this._Khoa;
			}
			set
			{
				if ((this._Khoa != value))
				{
					this.OnKhoaChanging(value);
					this.SendPropertyChanging();
					this._Khoa = value;
					this.SendPropertyChanged("Khoa");
					this.OnKhoaChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="tbDG_tbThe", Storage="_tbThes", OtherKey="MaDG")]
		public EntitySet<tbThe> tbThes
		{
			get
			{
				return this._tbThes;
			}
			set
			{
				this._tbThes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbThes(tbThe entity)
		{
			this.SendPropertyChanging();
			entity.tbDG = this;
		}
		
		private void detach_tbThes(tbThe entity)
		{
			this.SendPropertyChanging();
			entity.tbDG = null;
		}
	}
	
	[Table(Name="dbo.tbUser")]
	public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private string _pass;
		
		private System.Nullable<int> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnQuyenChanging(System.Nullable<int> value);
    partial void OnQuyenChanged();
    #endregion
		
		public tbUser()
		{
			OnCreated();
		}
		
		[Column(Storage="_TenDN", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[Column(Storage="_pass", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[Column(Storage="_Quyen", DbType="Int")]
		public System.Nullable<int> Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbTG")]
	public partial class tbTG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTG;
		
		private string _TenTG;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _Email;
		
		private EntitySet<tbDauSach> _tbDauSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTGChanging(string value);
    partial void OnMaTGChanged();
    partial void OnTenTGChanging(string value);
    partial void OnTenTGChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public tbTG()
		{
			this._tbDauSaches = new EntitySet<tbDauSach>(new Action<tbDauSach>(this.attach_tbDauSaches), new Action<tbDauSach>(this.detach_tbDauSaches));
			OnCreated();
		}
		
		[Column(Storage="_MaTG", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTG
		{
			get
			{
				return this._MaTG;
			}
			set
			{
				if ((this._MaTG != value))
				{
					this.OnMaTGChanging(value);
					this.SendPropertyChanging();
					this._MaTG = value;
					this.SendPropertyChanged("MaTG");
					this.OnMaTGChanged();
				}
			}
		}
		
		[Column(Storage="_TenTG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTG
		{
			get
			{
				return this._TenTG;
			}
			set
			{
				if ((this._TenTG != value))
				{
					this.OnTenTGChanging(value);
					this.SendPropertyChanging();
					this._TenTG = value;
					this.SendPropertyChanged("TenTG");
					this.OnTenTGChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_SDT", DbType="NChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Association(Name="tbTG_tbDauSach", Storage="_tbDauSaches", OtherKey="MaTG")]
		public EntitySet<tbDauSach> tbDauSaches
		{
			get
			{
				return this._tbDauSaches;
			}
			set
			{
				this._tbDauSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDauSaches(tbDauSach entity)
		{
			this.SendPropertyChanging();
			entity.tbTG = this;
		}
		
		private void detach_tbDauSaches(tbDauSach entity)
		{
			this.SendPropertyChanging();
			entity.tbTG = null;
		}
	}
	
	[Table(Name="dbo.tbDauSach")]
	public partial class tbDauSach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDauSach;
		
		private string _TenSach;
		
		private string _MaNXB;
		
		private string _MaTG;
		
		private string _NamXuatBan;
		
		private string _ChuyenNganh;
		
		private int _SoLuong;
		
		private string _GhiChu;
		
		private EntitySet<tbSach> _tbSaches;
		
		private EntityRef<tbTG> _tbTG;
		
		private EntityRef<tbNXB> _tbNXB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDauSachChanging(string value);
    partial void OnMaDauSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnMaNXBChanging(string value);
    partial void OnMaNXBChanged();
    partial void OnMaTGChanging(string value);
    partial void OnMaTGChanged();
    partial void OnNamXuatBanChanging(string value);
    partial void OnNamXuatBanChanged();
    partial void OnChuyenNganhChanging(string value);
    partial void OnChuyenNganhChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public tbDauSach()
		{
			this._tbSaches = new EntitySet<tbSach>(new Action<tbSach>(this.attach_tbSaches), new Action<tbSach>(this.detach_tbSaches));
			this._tbTG = default(EntityRef<tbTG>);
			this._tbNXB = default(EntityRef<tbNXB>);
			OnCreated();
		}
		
		[Column(Storage="_MaDauSach", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDauSach
		{
			get
			{
				return this._MaDauSach;
			}
			set
			{
				if ((this._MaDauSach != value))
				{
					this.OnMaDauSachChanging(value);
					this.SendPropertyChanging();
					this._MaDauSach = value;
					this.SendPropertyChanged("MaDauSach");
					this.OnMaDauSachChanged();
				}
			}
		}
		
		[Column(Storage="_TenSach", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[Column(Storage="_MaNXB", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					if (this._tbNXB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[Column(Storage="_MaTG", DbType="NChar(10)")]
		public string MaTG
		{
			get
			{
				return this._MaTG;
			}
			set
			{
				if ((this._MaTG != value))
				{
					if (this._tbTG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTGChanging(value);
					this.SendPropertyChanging();
					this._MaTG = value;
					this.SendPropertyChanged("MaTG");
					this.OnMaTGChanged();
				}
			}
		}
		
		[Column(Storage="_NamXuatBan", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NamXuatBan
		{
			get
			{
				return this._NamXuatBan;
			}
			set
			{
				if ((this._NamXuatBan != value))
				{
					this.OnNamXuatBanChanging(value);
					this.SendPropertyChanging();
					this._NamXuatBan = value;
					this.SendPropertyChanged("NamXuatBan");
					this.OnNamXuatBanChanged();
				}
			}
		}
		
		[Column(Storage="_ChuyenNganh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChuyenNganh
		{
			get
			{
				return this._ChuyenNganh;
			}
			set
			{
				if ((this._ChuyenNganh != value))
				{
					this.OnChuyenNganhChanging(value);
					this.SendPropertyChanging();
					this._ChuyenNganh = value;
					this.SendPropertyChanged("ChuyenNganh");
					this.OnChuyenNganhChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[Association(Name="tbDauSach_tbSach", Storage="_tbSaches", OtherKey="MaDauSach")]
		public EntitySet<tbSach> tbSaches
		{
			get
			{
				return this._tbSaches;
			}
			set
			{
				this._tbSaches.Assign(value);
			}
		}
		
		[Association(Name="tbTG_tbDauSach", Storage="_tbTG", ThisKey="MaTG", IsForeignKey=true)]
		public tbTG tbTG
		{
			get
			{
				return this._tbTG.Entity;
			}
			set
			{
				tbTG previousValue = this._tbTG.Entity;
				if (((previousValue != value) 
							|| (this._tbTG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTG.Entity = null;
						previousValue.tbDauSaches.Remove(this);
					}
					this._tbTG.Entity = value;
					if ((value != null))
					{
						value.tbDauSaches.Add(this);
						this._MaTG = value.MaTG;
					}
					else
					{
						this._MaTG = default(string);
					}
					this.SendPropertyChanged("tbTG");
				}
			}
		}
		
		[Association(Name="tbNXB_tbDauSach", Storage="_tbNXB", ThisKey="MaNXB", IsForeignKey=true)]
		public tbNXB tbNXB
		{
			get
			{
				return this._tbNXB.Entity;
			}
			set
			{
				tbNXB previousValue = this._tbNXB.Entity;
				if (((previousValue != value) 
							|| (this._tbNXB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbNXB.Entity = null;
						previousValue.tbDauSaches.Remove(this);
					}
					this._tbNXB.Entity = value;
					if ((value != null))
					{
						value.tbDauSaches.Add(this);
						this._MaNXB = value.MaNXB;
					}
					else
					{
						this._MaNXB = default(string);
					}
					this.SendPropertyChanged("tbNXB");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbSaches(tbSach entity)
		{
			this.SendPropertyChanging();
			entity.tbDauSach = this;
		}
		
		private void detach_tbSaches(tbSach entity)
		{
			this.SendPropertyChanging();
			entity.tbDauSach = null;
		}
	}
	
	[Table(Name="dbo.tbNXB")]
	public partial class tbNXB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNXB;
		
		private string _TenNXB;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<tbDauSach> _tbDauSaches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXBChanging(string value);
    partial void OnMaNXBChanged();
    partial void OnTenNXBChanging(string value);
    partial void OnTenNXBChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public tbNXB()
		{
			this._tbDauSaches = new EntitySet<tbDauSach>(new Action<tbDauSach>(this.attach_tbDauSaches), new Action<tbDauSach>(this.detach_tbDauSaches));
			OnCreated();
		}
		
		[Column(Storage="_MaNXB", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[Column(Storage="_TenNXB", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this.OnTenNXBChanging(value);
					this.SendPropertyChanging();
					this._TenNXB = value;
					this.SendPropertyChanged("TenNXB");
					this.OnTenNXBChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[Column(Storage="_SDT", DbType="NChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[Association(Name="tbNXB_tbDauSach", Storage="_tbDauSaches", OtherKey="MaNXB")]
		public EntitySet<tbDauSach> tbDauSaches
		{
			get
			{
				return this._tbDauSaches;
			}
			set
			{
				this._tbDauSaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbDauSaches(tbDauSach entity)
		{
			this.SendPropertyChanging();
			entity.tbNXB = this;
		}
		
		private void detach_tbDauSaches(tbDauSach entity)
		{
			this.SendPropertyChanging();
			entity.tbNXB = null;
		}
	}
	
	public partial class uspGetMaNXBResult
	{
		
		private string _Column1;
		
		public uspGetMaNXBResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="NChar(10)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
