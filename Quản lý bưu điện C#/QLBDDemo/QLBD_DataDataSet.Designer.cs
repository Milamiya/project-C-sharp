//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QLBDDemo {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("QLBD_DataDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class QLBD_DataDataSet : System.Data.DataSet {
        
        private BAOCAODataTable tableBAOCAO;
        
        private BIKHOADataTable tableBIKHOA;
        
        private BUUGUIDataTable tableBUUGUI;
        
        private CUOCGOIDataTable tableCUOCGOI;
        
        private DANGHOATDONGDataTable tableDANGHOATDONG;
        
        private DICHVUDataTable tableDICHVU;
        
        private DICHVUTHEMDataTable tableDICHVUTHEM;
        
        private KHACHHANGDataTable tableKHACHHANG;
        
        private NGUOIGUIDataTable tableNGUOIGUI;
        
        private NGUOINHANDataTable tableNGUOINHAN;
        
        private TAMNGUNGDataTable tableTAMNGUNG;
        
        private System.Data.DataRelation relationFK_BAOCAO_DICHVU;
        
        private System.Data.DataRelation relationFK_BIKHOA_KHACHHANG;
        
        private System.Data.DataRelation relationFK_BUUGUI_DICHVU;
        
        private System.Data.DataRelation relationFK_BUUGUI_DICHVUTHEM;
        
        private System.Data.DataRelation relationFK_BUUGUI_NGUOIGUI;
        
        private System.Data.DataRelation relationFK_BUUGUI_NGUOINHAN;
        
        private System.Data.DataRelation relationFK_CUOCGOI_DICHVU;
        
        private System.Data.DataRelation relationFK_TAMNGUNG_KHACHHANG;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QLBD_DataDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected QLBD_DataDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["BAOCAO"] != null)) {
                    base.Tables.Add(new BAOCAODataTable(ds.Tables["BAOCAO"]));
                }
                if ((ds.Tables["BIKHOA"] != null)) {
                    base.Tables.Add(new BIKHOADataTable(ds.Tables["BIKHOA"]));
                }
                if ((ds.Tables["BUUGUI"] != null)) {
                    base.Tables.Add(new BUUGUIDataTable(ds.Tables["BUUGUI"]));
                }
                if ((ds.Tables["CUOCGOI"] != null)) {
                    base.Tables.Add(new CUOCGOIDataTable(ds.Tables["CUOCGOI"]));
                }
                if ((ds.Tables["DANGHOATDONG"] != null)) {
                    base.Tables.Add(new DANGHOATDONGDataTable(ds.Tables["DANGHOATDONG"]));
                }
                if ((ds.Tables["DICHVU"] != null)) {
                    base.Tables.Add(new DICHVUDataTable(ds.Tables["DICHVU"]));
                }
                if ((ds.Tables["DICHVUTHEM"] != null)) {
                    base.Tables.Add(new DICHVUTHEMDataTable(ds.Tables["DICHVUTHEM"]));
                }
                if ((ds.Tables["KHACHHANG"] != null)) {
                    base.Tables.Add(new KHACHHANGDataTable(ds.Tables["KHACHHANG"]));
                }
                if ((ds.Tables["NGUOIGUI"] != null)) {
                    base.Tables.Add(new NGUOIGUIDataTable(ds.Tables["NGUOIGUI"]));
                }
                if ((ds.Tables["NGUOINHAN"] != null)) {
                    base.Tables.Add(new NGUOINHANDataTable(ds.Tables["NGUOINHAN"]));
                }
                if ((ds.Tables["TAMNGUNG"] != null)) {
                    base.Tables.Add(new TAMNGUNGDataTable(ds.Tables["TAMNGUNG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BAOCAODataTable BAOCAO {
            get {
                return this.tableBAOCAO;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BIKHOADataTable BIKHOA {
            get {
                return this.tableBIKHOA;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BUUGUIDataTable BUUGUI {
            get {
                return this.tableBUUGUI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUOCGOIDataTable CUOCGOI {
            get {
                return this.tableCUOCGOI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DANGHOATDONGDataTable DANGHOATDONG {
            get {
                return this.tableDANGHOATDONG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DICHVUDataTable DICHVU {
            get {
                return this.tableDICHVU;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DICHVUTHEMDataTable DICHVUTHEM {
            get {
                return this.tableDICHVUTHEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACHHANGDataTable KHACHHANG {
            get {
                return this.tableKHACHHANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NGUOIGUIDataTable NGUOIGUI {
            get {
                return this.tableNGUOIGUI;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NGUOINHANDataTable NGUOINHAN {
            get {
                return this.tableNGUOINHAN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAMNGUNGDataTable TAMNGUNG {
            get {
                return this.tableTAMNGUNG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            QLBD_DataDataSet cln = ((QLBD_DataDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BAOCAO"] != null)) {
                    base.Tables.Add(new BAOCAODataTable(ds.Tables["BAOCAO"]));
                }
                if ((ds.Tables["BIKHOA"] != null)) {
                    base.Tables.Add(new BIKHOADataTable(ds.Tables["BIKHOA"]));
                }
                if ((ds.Tables["BUUGUI"] != null)) {
                    base.Tables.Add(new BUUGUIDataTable(ds.Tables["BUUGUI"]));
                }
                if ((ds.Tables["CUOCGOI"] != null)) {
                    base.Tables.Add(new CUOCGOIDataTable(ds.Tables["CUOCGOI"]));
                }
                if ((ds.Tables["DANGHOATDONG"] != null)) {
                    base.Tables.Add(new DANGHOATDONGDataTable(ds.Tables["DANGHOATDONG"]));
                }
                if ((ds.Tables["DICHVU"] != null)) {
                    base.Tables.Add(new DICHVUDataTable(ds.Tables["DICHVU"]));
                }
                if ((ds.Tables["DICHVUTHEM"] != null)) {
                    base.Tables.Add(new DICHVUTHEMDataTable(ds.Tables["DICHVUTHEM"]));
                }
                if ((ds.Tables["KHACHHANG"] != null)) {
                    base.Tables.Add(new KHACHHANGDataTable(ds.Tables["KHACHHANG"]));
                }
                if ((ds.Tables["NGUOIGUI"] != null)) {
                    base.Tables.Add(new NGUOIGUIDataTable(ds.Tables["NGUOIGUI"]));
                }
                if ((ds.Tables["NGUOINHAN"] != null)) {
                    base.Tables.Add(new NGUOINHANDataTable(ds.Tables["NGUOINHAN"]));
                }
                if ((ds.Tables["TAMNGUNG"] != null)) {
                    base.Tables.Add(new TAMNGUNGDataTable(ds.Tables["TAMNGUNG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBAOCAO = ((BAOCAODataTable)(base.Tables["BAOCAO"]));
            if ((initTable == true)) {
                if ((this.tableBAOCAO != null)) {
                    this.tableBAOCAO.InitVars();
                }
            }
            this.tableBIKHOA = ((BIKHOADataTable)(base.Tables["BIKHOA"]));
            if ((initTable == true)) {
                if ((this.tableBIKHOA != null)) {
                    this.tableBIKHOA.InitVars();
                }
            }
            this.tableBUUGUI = ((BUUGUIDataTable)(base.Tables["BUUGUI"]));
            if ((initTable == true)) {
                if ((this.tableBUUGUI != null)) {
                    this.tableBUUGUI.InitVars();
                }
            }
            this.tableCUOCGOI = ((CUOCGOIDataTable)(base.Tables["CUOCGOI"]));
            if ((initTable == true)) {
                if ((this.tableCUOCGOI != null)) {
                    this.tableCUOCGOI.InitVars();
                }
            }
            this.tableDANGHOATDONG = ((DANGHOATDONGDataTable)(base.Tables["DANGHOATDONG"]));
            if ((initTable == true)) {
                if ((this.tableDANGHOATDONG != null)) {
                    this.tableDANGHOATDONG.InitVars();
                }
            }
            this.tableDICHVU = ((DICHVUDataTable)(base.Tables["DICHVU"]));
            if ((initTable == true)) {
                if ((this.tableDICHVU != null)) {
                    this.tableDICHVU.InitVars();
                }
            }
            this.tableDICHVUTHEM = ((DICHVUTHEMDataTable)(base.Tables["DICHVUTHEM"]));
            if ((initTable == true)) {
                if ((this.tableDICHVUTHEM != null)) {
                    this.tableDICHVUTHEM.InitVars();
                }
            }
            this.tableKHACHHANG = ((KHACHHANGDataTable)(base.Tables["KHACHHANG"]));
            if ((initTable == true)) {
                if ((this.tableKHACHHANG != null)) {
                    this.tableKHACHHANG.InitVars();
                }
            }
            this.tableNGUOIGUI = ((NGUOIGUIDataTable)(base.Tables["NGUOIGUI"]));
            if ((initTable == true)) {
                if ((this.tableNGUOIGUI != null)) {
                    this.tableNGUOIGUI.InitVars();
                }
            }
            this.tableNGUOINHAN = ((NGUOINHANDataTable)(base.Tables["NGUOINHAN"]));
            if ((initTable == true)) {
                if ((this.tableNGUOINHAN != null)) {
                    this.tableNGUOINHAN.InitVars();
                }
            }
            this.tableTAMNGUNG = ((TAMNGUNGDataTable)(base.Tables["TAMNGUNG"]));
            if ((initTable == true)) {
                if ((this.tableTAMNGUNG != null)) {
                    this.tableTAMNGUNG.InitVars();
                }
            }
            this.relationFK_BAOCAO_DICHVU = this.Relations["FK_BAOCAO_DICHVU"];
            this.relationFK_BIKHOA_KHACHHANG = this.Relations["FK_BIKHOA_KHACHHANG"];
            this.relationFK_BUUGUI_DICHVU = this.Relations["FK_BUUGUI_DICHVU"];
            this.relationFK_BUUGUI_DICHVUTHEM = this.Relations["FK_BUUGUI_DICHVUTHEM"];
            this.relationFK_BUUGUI_NGUOIGUI = this.Relations["FK_BUUGUI_NGUOIGUI"];
            this.relationFK_BUUGUI_NGUOINHAN = this.Relations["FK_BUUGUI_NGUOINHAN"];
            this.relationFK_CUOCGOI_DICHVU = this.Relations["FK_CUOCGOI_DICHVU"];
            this.relationFK_TAMNGUNG_KHACHHANG = this.Relations["FK_TAMNGUNG_KHACHHANG"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "QLBD_DataDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/QLBD_DataDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBAOCAO = new BAOCAODataTable();
            base.Tables.Add(this.tableBAOCAO);
            this.tableBIKHOA = new BIKHOADataTable();
            base.Tables.Add(this.tableBIKHOA);
            this.tableBUUGUI = new BUUGUIDataTable();
            base.Tables.Add(this.tableBUUGUI);
            this.tableCUOCGOI = new CUOCGOIDataTable();
            base.Tables.Add(this.tableCUOCGOI);
            this.tableDANGHOATDONG = new DANGHOATDONGDataTable();
            base.Tables.Add(this.tableDANGHOATDONG);
            this.tableDICHVU = new DICHVUDataTable();
            base.Tables.Add(this.tableDICHVU);
            this.tableDICHVUTHEM = new DICHVUTHEMDataTable();
            base.Tables.Add(this.tableDICHVUTHEM);
            this.tableKHACHHANG = new KHACHHANGDataTable();
            base.Tables.Add(this.tableKHACHHANG);
            this.tableNGUOIGUI = new NGUOIGUIDataTable();
            base.Tables.Add(this.tableNGUOIGUI);
            this.tableNGUOINHAN = new NGUOINHANDataTable();
            base.Tables.Add(this.tableNGUOINHAN);
            this.tableTAMNGUNG = new TAMNGUNGDataTable();
            base.Tables.Add(this.tableTAMNGUNG);
            this.relationFK_BAOCAO_DICHVU = new System.Data.DataRelation("FK_BAOCAO_DICHVU", new System.Data.DataColumn[] {
                        this.tableDICHVU.MADVColumn}, new System.Data.DataColumn[] {
                        this.tableBAOCAO.MADVColumn}, false);
            this.Relations.Add(this.relationFK_BAOCAO_DICHVU);
            this.relationFK_BIKHOA_KHACHHANG = new System.Data.DataRelation("FK_BIKHOA_KHACHHANG", new System.Data.DataColumn[] {
                        this.tableKHACHHANG.TELColumn}, new System.Data.DataColumn[] {
                        this.tableBIKHOA.TELColumn}, false);
            this.Relations.Add(this.relationFK_BIKHOA_KHACHHANG);
            this.relationFK_BUUGUI_DICHVU = new System.Data.DataRelation("FK_BUUGUI_DICHVU", new System.Data.DataColumn[] {
                        this.tableDICHVU.MADVColumn}, new System.Data.DataColumn[] {
                        this.tableBUUGUI.MADVColumn}, false);
            this.Relations.Add(this.relationFK_BUUGUI_DICHVU);
            this.relationFK_BUUGUI_DICHVUTHEM = new System.Data.DataRelation("FK_BUUGUI_DICHVUTHEM", new System.Data.DataColumn[] {
                        this.tableDICHVUTHEM.MA_DVTHEMColumn}, new System.Data.DataColumn[] {
                        this.tableBUUGUI.MA_DVTHEMColumn}, false);
            this.Relations.Add(this.relationFK_BUUGUI_DICHVUTHEM);
            this.relationFK_BUUGUI_NGUOIGUI = new System.Data.DataRelation("FK_BUUGUI_NGUOIGUI", new System.Data.DataColumn[] {
                        this.tableNGUOIGUI.MANGUOIGUIColumn}, new System.Data.DataColumn[] {
                        this.tableBUUGUI.MANGUOIGUIColumn}, false);
            this.Relations.Add(this.relationFK_BUUGUI_NGUOIGUI);
            this.relationFK_BUUGUI_NGUOINHAN = new System.Data.DataRelation("FK_BUUGUI_NGUOINHAN", new System.Data.DataColumn[] {
                        this.tableNGUOINHAN.MANGUOINHANColumn}, new System.Data.DataColumn[] {
                        this.tableBUUGUI.MANGUOINHANColumn}, false);
            this.Relations.Add(this.relationFK_BUUGUI_NGUOINHAN);
            this.relationFK_CUOCGOI_DICHVU = new System.Data.DataRelation("FK_CUOCGOI_DICHVU", new System.Data.DataColumn[] {
                        this.tableDICHVU.MADVColumn}, new System.Data.DataColumn[] {
                        this.tableCUOCGOI.MADVColumn}, false);
            this.Relations.Add(this.relationFK_CUOCGOI_DICHVU);
            this.relationFK_TAMNGUNG_KHACHHANG = new System.Data.DataRelation("FK_TAMNGUNG_KHACHHANG", new System.Data.DataColumn[] {
                        this.tableKHACHHANG.TELColumn}, new System.Data.DataColumn[] {
                        this.tableTAMNGUNG.TELColumn}, false);
            this.Relations.Add(this.relationFK_TAMNGUNG_KHACHHANG);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBAOCAO() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBIKHOA() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBUUGUI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCUOCGOI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDANGHOATDONG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDICHVU() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDICHVUTHEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACHHANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNGUOIGUI() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNGUOINHAN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAMNGUNG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            QLBD_DataDataSet ds = new QLBD_DataDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void BAOCAORowChangeEventHandler(object sender, BAOCAORowChangeEvent e);
        
        public delegate void BIKHOARowChangeEventHandler(object sender, BIKHOARowChangeEvent e);
        
        public delegate void BUUGUIRowChangeEventHandler(object sender, BUUGUIRowChangeEvent e);
        
        public delegate void CUOCGOIRowChangeEventHandler(object sender, CUOCGOIRowChangeEvent e);
        
        public delegate void DANGHOATDONGRowChangeEventHandler(object sender, DANGHOATDONGRowChangeEvent e);
        
        public delegate void DICHVURowChangeEventHandler(object sender, DICHVURowChangeEvent e);
        
        public delegate void DICHVUTHEMRowChangeEventHandler(object sender, DICHVUTHEMRowChangeEvent e);
        
        public delegate void KHACHHANGRowChangeEventHandler(object sender, KHACHHANGRowChangeEvent e);
        
        public delegate void NGUOIGUIRowChangeEventHandler(object sender, NGUOIGUIRowChangeEvent e);
        
        public delegate void NGUOINHANRowChangeEventHandler(object sender, NGUOINHANRowChangeEvent e);
        
        public delegate void TAMNGUNGRowChangeEventHandler(object sender, TAMNGUNGRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BAOCAODataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMADV;
            
            private System.Data.DataColumn columnSOLUONG;
            
            private System.Data.DataColumn columnDONVITINH1;
            
            private System.Data.DataColumn columnSANLUONG;
            
            private System.Data.DataColumn columnDONVITINH2;
            
            private System.Data.DataColumn columnTONGCUOCTHU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAODataTable() {
                this.TableName = "BAOCAO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BAOCAODataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BAOCAODataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MADVColumn {
                get {
                    return this.columnMADV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOLUONGColumn {
                get {
                    return this.columnSOLUONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DONVITINH1Column {
                get {
                    return this.columnDONVITINH1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SANLUONGColumn {
                get {
                    return this.columnSANLUONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DONVITINH2Column {
                get {
                    return this.columnDONVITINH2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TONGCUOCTHUColumn {
                get {
                    return this.columnTONGCUOCTHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow this[int index] {
                get {
                    return ((BAOCAORow)(this.Rows[index]));
                }
            }
            
            public event BAOCAORowChangeEventHandler BAOCAORowChanging;
            
            public event BAOCAORowChangeEventHandler BAOCAORowChanged;
            
            public event BAOCAORowChangeEventHandler BAOCAORowDeleting;
            
            public event BAOCAORowChangeEventHandler BAOCAORowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBAOCAORow(BAOCAORow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow AddBAOCAORow(DICHVURow parentDICHVURowByFK_BAOCAO_DICHVU, int SOLUONG, string DONVITINH1, int SANLUONG, string DONVITINH2, decimal TONGCUOCTHU) {
                BAOCAORow rowBAOCAORow = ((BAOCAORow)(this.NewRow()));
                rowBAOCAORow.ItemArray = new object[] {
                        parentDICHVURowByFK_BAOCAO_DICHVU[0],
                        SOLUONG,
                        DONVITINH1,
                        SANLUONG,
                        DONVITINH2,
                        TONGCUOCTHU};
                this.Rows.Add(rowBAOCAORow);
                return rowBAOCAORow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow FindByMADV(string MADV) {
                return ((BAOCAORow)(this.Rows.Find(new object[] {
                            MADV})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BAOCAODataTable cln = ((BAOCAODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BAOCAODataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADV = base.Columns["MADV"];
                this.columnSOLUONG = base.Columns["SOLUONG"];
                this.columnDONVITINH1 = base.Columns["DONVITINH1"];
                this.columnSANLUONG = base.Columns["SANLUONG"];
                this.columnDONVITINH2 = base.Columns["DONVITINH2"];
                this.columnTONGCUOCTHU = base.Columns["TONGCUOCTHU"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADV = new System.Data.DataColumn("MADV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADV);
                this.columnSOLUONG = new System.Data.DataColumn("SOLUONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUONG);
                this.columnDONVITINH1 = new System.Data.DataColumn("DONVITINH1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVITINH1);
                this.columnSANLUONG = new System.Data.DataColumn("SANLUONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANLUONG);
                this.columnDONVITINH2 = new System.Data.DataColumn("DONVITINH2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVITINH2);
                this.columnTONGCUOCTHU = new System.Data.DataColumn("TONGCUOCTHU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGCUOCTHU);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMADV}, true));
                this.columnMADV.AllowDBNull = false;
                this.columnMADV.Unique = true;
                this.columnMADV.MaxLength = 4;
                this.columnDONVITINH1.MaxLength = 10;
                this.columnDONVITINH2.MaxLength = 6;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow NewBAOCAORow() {
                return ((BAOCAORow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BAOCAORow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BAOCAORow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BAOCAORowChanged != null)) {
                    this.BAOCAORowChanged(this, new BAOCAORowChangeEvent(((BAOCAORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BAOCAORowChanging != null)) {
                    this.BAOCAORowChanging(this, new BAOCAORowChangeEvent(((BAOCAORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BAOCAORowDeleted != null)) {
                    this.BAOCAORowDeleted(this, new BAOCAORowChangeEvent(((BAOCAORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BAOCAORowDeleting != null)) {
                    this.BAOCAORowDeleting(this, new BAOCAORowChangeEvent(((BAOCAORow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBAOCAORow(BAOCAORow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BAOCAODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BIKHOADataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTEL;
            
            private System.Data.DataColumn columnTHANGNO;
            
            private System.Data.DataColumn columnTIENDICHVU;
            
            private System.Data.DataColumn columnTIENTHUE_VAT;
            
            private System.Data.DataColumn columnTONGCUOCTHU;
            
            private System.Data.DataColumn columnPHIPHAT;
            
            private System.Data.DataColumn columnTONGCONG;
            
            private System.Data.DataColumn columnTRANGTHAI;
            
            private System.Data.DataColumn columnNGAYNOP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOADataTable() {
                this.TableName = "BIKHOA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BIKHOADataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BIKHOADataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THANGNOColumn {
                get {
                    return this.columnTHANGNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIENDICHVUColumn {
                get {
                    return this.columnTIENDICHVU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIENTHUE_VATColumn {
                get {
                    return this.columnTIENTHUE_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TONGCUOCTHUColumn {
                get {
                    return this.columnTONGCUOCTHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PHIPHATColumn {
                get {
                    return this.columnPHIPHAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TONGCONGColumn {
                get {
                    return this.columnTONGCONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANGTHAIColumn {
                get {
                    return this.columnTRANGTHAI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NGAYNOPColumn {
                get {
                    return this.columnNGAYNOP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow this[int index] {
                get {
                    return ((BIKHOARow)(this.Rows[index]));
                }
            }
            
            public event BIKHOARowChangeEventHandler BIKHOARowChanging;
            
            public event BIKHOARowChangeEventHandler BIKHOARowChanged;
            
            public event BIKHOARowChangeEventHandler BIKHOARowDeleting;
            
            public event BIKHOARowChangeEventHandler BIKHOARowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBIKHOARow(BIKHOARow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow AddBIKHOARow(KHACHHANGRow parentKHACHHANGRowByFK_BIKHOA_KHACHHANG, string THANGNO, decimal TIENDICHVU, decimal TIENTHUE_VAT, decimal TONGCUOCTHU, decimal PHIPHAT, decimal TONGCONG, string TRANGTHAI, string NGAYNOP) {
                BIKHOARow rowBIKHOARow = ((BIKHOARow)(this.NewRow()));
                rowBIKHOARow.ItemArray = new object[] {
                        parentKHACHHANGRowByFK_BIKHOA_KHACHHANG[0],
                        THANGNO,
                        TIENDICHVU,
                        TIENTHUE_VAT,
                        TONGCUOCTHU,
                        PHIPHAT,
                        TONGCONG,
                        TRANGTHAI,
                        NGAYNOP};
                this.Rows.Add(rowBIKHOARow);
                return rowBIKHOARow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow FindByTELTHANGNO(string TEL, string THANGNO) {
                return ((BIKHOARow)(this.Rows.Find(new object[] {
                            TEL,
                            THANGNO})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BIKHOADataTable cln = ((BIKHOADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BIKHOADataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEL = base.Columns["TEL"];
                this.columnTHANGNO = base.Columns["THANGNO"];
                this.columnTIENDICHVU = base.Columns["TIENDICHVU"];
                this.columnTIENTHUE_VAT = base.Columns["TIENTHUE_VAT"];
                this.columnTONGCUOCTHU = base.Columns["TONGCUOCTHU"];
                this.columnPHIPHAT = base.Columns["PHIPHAT"];
                this.columnTONGCONG = base.Columns["TONGCONG"];
                this.columnTRANGTHAI = base.Columns["TRANGTHAI"];
                this.columnNGAYNOP = base.Columns["NGAYNOP"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnTHANGNO = new System.Data.DataColumn("THANGNO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANGNO);
                this.columnTIENDICHVU = new System.Data.DataColumn("TIENDICHVU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENDICHVU);
                this.columnTIENTHUE_VAT = new System.Data.DataColumn("TIENTHUE_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENTHUE_VAT);
                this.columnTONGCUOCTHU = new System.Data.DataColumn("TONGCUOCTHU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGCUOCTHU);
                this.columnPHIPHAT = new System.Data.DataColumn("PHIPHAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHIPHAT);
                this.columnTONGCONG = new System.Data.DataColumn("TONGCONG", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGCONG);
                this.columnTRANGTHAI = new System.Data.DataColumn("TRANGTHAI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANGTHAI);
                this.columnNGAYNOP = new System.Data.DataColumn("NGAYNOP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYNOP);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTEL,
                                this.columnTHANGNO}, true));
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 20;
                this.columnTHANGNO.AllowDBNull = false;
                this.columnTHANGNO.MaxLength = 7;
                this.columnTONGCUOCTHU.AllowDBNull = false;
                this.columnTRANGTHAI.MaxLength = 20;
                this.columnNGAYNOP.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow NewBIKHOARow() {
                return ((BIKHOARow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BIKHOARow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BIKHOARow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BIKHOARowChanged != null)) {
                    this.BIKHOARowChanged(this, new BIKHOARowChangeEvent(((BIKHOARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BIKHOARowChanging != null)) {
                    this.BIKHOARowChanging(this, new BIKHOARowChangeEvent(((BIKHOARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BIKHOARowDeleted != null)) {
                    this.BIKHOARowDeleted(this, new BIKHOARowChangeEvent(((BIKHOARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BIKHOARowDeleting != null)) {
                    this.BIKHOARowDeleting(this, new BIKHOARowChangeEvent(((BIKHOARow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBIKHOARow(BIKHOARow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BIKHOADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BUUGUIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMABUUGUI;
            
            private System.Data.DataColumn columnMADV;
            
            private System.Data.DataColumn columnSANLUONG;
            
            private System.Data.DataColumn columnDONVITINH;
            
            private System.Data.DataColumn columnCUOC;
            
            private System.Data.DataColumn columnMA_DVTHEM;
            
            private System.Data.DataColumn columnMANGUOIGUI;
            
            private System.Data.DataColumn columnMANGUOINHAN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIDataTable() {
                this.TableName = "BUUGUI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BUUGUIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BUUGUIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MABUUGUIColumn {
                get {
                    return this.columnMABUUGUI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MADVColumn {
                get {
                    return this.columnMADV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SANLUONGColumn {
                get {
                    return this.columnSANLUONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DONVITINHColumn {
                get {
                    return this.columnDONVITINH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUOCColumn {
                get {
                    return this.columnCUOC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MA_DVTHEMColumn {
                get {
                    return this.columnMA_DVTHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MANGUOIGUIColumn {
                get {
                    return this.columnMANGUOIGUI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MANGUOINHANColumn {
                get {
                    return this.columnMANGUOINHAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow this[int index] {
                get {
                    return ((BUUGUIRow)(this.Rows[index]));
                }
            }
            
            public event BUUGUIRowChangeEventHandler BUUGUIRowChanging;
            
            public event BUUGUIRowChangeEventHandler BUUGUIRowChanged;
            
            public event BUUGUIRowChangeEventHandler BUUGUIRowDeleting;
            
            public event BUUGUIRowChangeEventHandler BUUGUIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBUUGUIRow(BUUGUIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow AddBUUGUIRow(string MABUUGUI, DICHVURow parentDICHVURowByFK_BUUGUI_DICHVU, int SANLUONG, string DONVITINH, decimal CUOC, DICHVUTHEMRow parentDICHVUTHEMRowByFK_BUUGUI_DICHVUTHEM, NGUOIGUIRow parentNGUOIGUIRowByFK_BUUGUI_NGUOIGUI, NGUOINHANRow parentNGUOINHANRowByFK_BUUGUI_NGUOINHAN) {
                BUUGUIRow rowBUUGUIRow = ((BUUGUIRow)(this.NewRow()));
                rowBUUGUIRow.ItemArray = new object[] {
                        MABUUGUI,
                        parentDICHVURowByFK_BUUGUI_DICHVU[0],
                        SANLUONG,
                        DONVITINH,
                        CUOC,
                        parentDICHVUTHEMRowByFK_BUUGUI_DICHVUTHEM[0],
                        parentNGUOIGUIRowByFK_BUUGUI_NGUOIGUI[0],
                        parentNGUOINHANRowByFK_BUUGUI_NGUOINHAN[0]};
                this.Rows.Add(rowBUUGUIRow);
                return rowBUUGUIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow FindByMABUUGUI(string MABUUGUI) {
                return ((BUUGUIRow)(this.Rows.Find(new object[] {
                            MABUUGUI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                BUUGUIDataTable cln = ((BUUGUIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new BUUGUIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMABUUGUI = base.Columns["MABUUGUI"];
                this.columnMADV = base.Columns["MADV"];
                this.columnSANLUONG = base.Columns["SANLUONG"];
                this.columnDONVITINH = base.Columns["DONVITINH"];
                this.columnCUOC = base.Columns["CUOC"];
                this.columnMA_DVTHEM = base.Columns["MA_DVTHEM"];
                this.columnMANGUOIGUI = base.Columns["MANGUOIGUI"];
                this.columnMANGUOINHAN = base.Columns["MANGUOINHAN"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMABUUGUI = new System.Data.DataColumn("MABUUGUI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMABUUGUI);
                this.columnMADV = new System.Data.DataColumn("MADV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADV);
                this.columnSANLUONG = new System.Data.DataColumn("SANLUONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANLUONG);
                this.columnDONVITINH = new System.Data.DataColumn("DONVITINH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDONVITINH);
                this.columnCUOC = new System.Data.DataColumn("CUOC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUOC);
                this.columnMA_DVTHEM = new System.Data.DataColumn("MA_DVTHEM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_DVTHEM);
                this.columnMANGUOIGUI = new System.Data.DataColumn("MANGUOIGUI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGUOIGUI);
                this.columnMANGUOINHAN = new System.Data.DataColumn("MANGUOINHAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGUOINHAN);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMABUUGUI}, true));
                this.columnMABUUGUI.AllowDBNull = false;
                this.columnMABUUGUI.Unique = true;
                this.columnMABUUGUI.MaxLength = 6;
                this.columnMADV.MaxLength = 4;
                this.columnDONVITINH.MaxLength = 4;
                this.columnMA_DVTHEM.MaxLength = 4;
                this.columnMANGUOIGUI.MaxLength = 6;
                this.columnMANGUOINHAN.MaxLength = 6;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow NewBUUGUIRow() {
                return ((BUUGUIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new BUUGUIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(BUUGUIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BUUGUIRowChanged != null)) {
                    this.BUUGUIRowChanged(this, new BUUGUIRowChangeEvent(((BUUGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BUUGUIRowChanging != null)) {
                    this.BUUGUIRowChanging(this, new BUUGUIRowChangeEvent(((BUUGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BUUGUIRowDeleted != null)) {
                    this.BUUGUIRowDeleted(this, new BUUGUIRowChangeEvent(((BUUGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BUUGUIRowDeleting != null)) {
                    this.BUUGUIRowDeleting(this, new BUUGUIRowChangeEvent(((BUUGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBUUGUIRow(BUUGUIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BUUGUIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUOCGOIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMACUOCGOI;
            
            private System.Data.DataColumn columnMADV;
            
            private System.Data.DataColumn columnSOMAYGOI;
            
            private System.Data.DataColumn columnTHOIGIAN_BATDAU;
            
            private System.Data.DataColumn columnTHOIGIAN_KETTHUC;
            
            private System.Data.DataColumn columnSANLUONG;
            
            private System.Data.DataColumn columnCUOCTHU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIDataTable() {
                this.TableName = "CUOCGOI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUOCGOIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CUOCGOIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MACUOCGOIColumn {
                get {
                    return this.columnMACUOCGOI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MADVColumn {
                get {
                    return this.columnMADV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SOMAYGOIColumn {
                get {
                    return this.columnSOMAYGOI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THOIGIAN_BATDAUColumn {
                get {
                    return this.columnTHOIGIAN_BATDAU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THOIGIAN_KETTHUCColumn {
                get {
                    return this.columnTHOIGIAN_KETTHUC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SANLUONGColumn {
                get {
                    return this.columnSANLUONG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUOCTHUColumn {
                get {
                    return this.columnCUOCTHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow this[int index] {
                get {
                    return ((CUOCGOIRow)(this.Rows[index]));
                }
            }
            
            public event CUOCGOIRowChangeEventHandler CUOCGOIRowChanging;
            
            public event CUOCGOIRowChangeEventHandler CUOCGOIRowChanged;
            
            public event CUOCGOIRowChangeEventHandler CUOCGOIRowDeleting;
            
            public event CUOCGOIRowChangeEventHandler CUOCGOIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCUOCGOIRow(CUOCGOIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow AddCUOCGOIRow(string MACUOCGOI, DICHVURow parentDICHVURowByFK_CUOCGOI_DICHVU, string SOMAYGOI, string THOIGIAN_BATDAU, string THOIGIAN_KETTHUC, int SANLUONG, decimal CUOCTHU) {
                CUOCGOIRow rowCUOCGOIRow = ((CUOCGOIRow)(this.NewRow()));
                rowCUOCGOIRow.ItemArray = new object[] {
                        MACUOCGOI,
                        parentDICHVURowByFK_CUOCGOI_DICHVU[0],
                        SOMAYGOI,
                        THOIGIAN_BATDAU,
                        THOIGIAN_KETTHUC,
                        SANLUONG,
                        CUOCTHU};
                this.Rows.Add(rowCUOCGOIRow);
                return rowCUOCGOIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow FindByMACUOCGOI(string MACUOCGOI) {
                return ((CUOCGOIRow)(this.Rows.Find(new object[] {
                            MACUOCGOI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CUOCGOIDataTable cln = ((CUOCGOIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CUOCGOIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMACUOCGOI = base.Columns["MACUOCGOI"];
                this.columnMADV = base.Columns["MADV"];
                this.columnSOMAYGOI = base.Columns["SOMAYGOI"];
                this.columnTHOIGIAN_BATDAU = base.Columns["THOIGIAN_BATDAU"];
                this.columnTHOIGIAN_KETTHUC = base.Columns["THOIGIAN_KETTHUC"];
                this.columnSANLUONG = base.Columns["SANLUONG"];
                this.columnCUOCTHU = base.Columns["CUOCTHU"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMACUOCGOI = new System.Data.DataColumn("MACUOCGOI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACUOCGOI);
                this.columnMADV = new System.Data.DataColumn("MADV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADV);
                this.columnSOMAYGOI = new System.Data.DataColumn("SOMAYGOI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOMAYGOI);
                this.columnTHOIGIAN_BATDAU = new System.Data.DataColumn("THOIGIAN_BATDAU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHOIGIAN_BATDAU);
                this.columnTHOIGIAN_KETTHUC = new System.Data.DataColumn("THOIGIAN_KETTHUC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHOIGIAN_KETTHUC);
                this.columnSANLUONG = new System.Data.DataColumn("SANLUONG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANLUONG);
                this.columnCUOCTHU = new System.Data.DataColumn("CUOCTHU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUOCTHU);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMACUOCGOI}, true));
                this.columnMACUOCGOI.AllowDBNull = false;
                this.columnMACUOCGOI.Unique = true;
                this.columnMACUOCGOI.MaxLength = 9;
                this.columnMADV.MaxLength = 4;
                this.columnSOMAYGOI.MaxLength = 20;
                this.columnTHOIGIAN_BATDAU.MaxLength = 20;
                this.columnTHOIGIAN_KETTHUC.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow NewCUOCGOIRow() {
                return ((CUOCGOIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CUOCGOIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CUOCGOIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUOCGOIRowChanged != null)) {
                    this.CUOCGOIRowChanged(this, new CUOCGOIRowChangeEvent(((CUOCGOIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUOCGOIRowChanging != null)) {
                    this.CUOCGOIRowChanging(this, new CUOCGOIRowChangeEvent(((CUOCGOIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUOCGOIRowDeleted != null)) {
                    this.CUOCGOIRowDeleted(this, new CUOCGOIRowChangeEvent(((CUOCGOIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUOCGOIRowDeleting != null)) {
                    this.CUOCGOIRowDeleting(this, new CUOCGOIRowChangeEvent(((CUOCGOIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCUOCGOIRow(CUOCGOIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUOCGOIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DANGHOATDONGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTEL;
            
            private System.Data.DataColumn columnCUOCTHANG;
            
            private System.Data.DataColumn columnTIENDICHVU;
            
            private System.Data.DataColumn columnTIENTHUE_VAT;
            
            private System.Data.DataColumn columnTONGCUOCTHU;
            
            private System.Data.DataColumn columnNGAYNOP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGDataTable() {
                this.TableName = "DANGHOATDONG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DANGHOATDONGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DANGHOATDONGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUOCTHANGColumn {
                get {
                    return this.columnCUOCTHANG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIENDICHVUColumn {
                get {
                    return this.columnTIENDICHVU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TIENTHUE_VATColumn {
                get {
                    return this.columnTIENTHUE_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TONGCUOCTHUColumn {
                get {
                    return this.columnTONGCUOCTHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NGAYNOPColumn {
                get {
                    return this.columnNGAYNOP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRow this[int index] {
                get {
                    return ((DANGHOATDONGRow)(this.Rows[index]));
                }
            }
            
            public event DANGHOATDONGRowChangeEventHandler DANGHOATDONGRowChanging;
            
            public event DANGHOATDONGRowChangeEventHandler DANGHOATDONGRowChanged;
            
            public event DANGHOATDONGRowChangeEventHandler DANGHOATDONGRowDeleting;
            
            public event DANGHOATDONGRowChangeEventHandler DANGHOATDONGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDANGHOATDONGRow(DANGHOATDONGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRow AddDANGHOATDONGRow(string TEL, string CUOCTHANG, decimal TIENDICHVU, decimal TIENTHUE_VAT, decimal TONGCUOCTHU, string NGAYNOP) {
                DANGHOATDONGRow rowDANGHOATDONGRow = ((DANGHOATDONGRow)(this.NewRow()));
                rowDANGHOATDONGRow.ItemArray = new object[] {
                        TEL,
                        CUOCTHANG,
                        TIENDICHVU,
                        TIENTHUE_VAT,
                        TONGCUOCTHU,
                        NGAYNOP};
                this.Rows.Add(rowDANGHOATDONGRow);
                return rowDANGHOATDONGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRow FindByTELCUOCTHANG(string TEL, string CUOCTHANG) {
                return ((DANGHOATDONGRow)(this.Rows.Find(new object[] {
                            TEL,
                            CUOCTHANG})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DANGHOATDONGDataTable cln = ((DANGHOATDONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DANGHOATDONGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEL = base.Columns["TEL"];
                this.columnCUOCTHANG = base.Columns["CUOCTHANG"];
                this.columnTIENDICHVU = base.Columns["TIENDICHVU"];
                this.columnTIENTHUE_VAT = base.Columns["TIENTHUE_VAT"];
                this.columnTONGCUOCTHU = base.Columns["TONGCUOCTHU"];
                this.columnNGAYNOP = base.Columns["NGAYNOP"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnCUOCTHANG = new System.Data.DataColumn("CUOCTHANG", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUOCTHANG);
                this.columnTIENDICHVU = new System.Data.DataColumn("TIENDICHVU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENDICHVU);
                this.columnTIENTHUE_VAT = new System.Data.DataColumn("TIENTHUE_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIENTHUE_VAT);
                this.columnTONGCUOCTHU = new System.Data.DataColumn("TONGCUOCTHU", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTONGCUOCTHU);
                this.columnNGAYNOP = new System.Data.DataColumn("NGAYNOP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYNOP);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTEL,
                                this.columnCUOCTHANG}, true));
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 20;
                this.columnCUOCTHANG.AllowDBNull = false;
                this.columnCUOCTHANG.MaxLength = 7;
                this.columnTIENDICHVU.AllowDBNull = false;
                this.columnNGAYNOP.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRow NewDANGHOATDONGRow() {
                return ((DANGHOATDONGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DANGHOATDONGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DANGHOATDONGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DANGHOATDONGRowChanged != null)) {
                    this.DANGHOATDONGRowChanged(this, new DANGHOATDONGRowChangeEvent(((DANGHOATDONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DANGHOATDONGRowChanging != null)) {
                    this.DANGHOATDONGRowChanging(this, new DANGHOATDONGRowChangeEvent(((DANGHOATDONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DANGHOATDONGRowDeleted != null)) {
                    this.DANGHOATDONGRowDeleted(this, new DANGHOATDONGRowChangeEvent(((DANGHOATDONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DANGHOATDONGRowDeleting != null)) {
                    this.DANGHOATDONGRowDeleting(this, new DANGHOATDONGRowChangeEvent(((DANGHOATDONGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDANGHOATDONGRow(DANGHOATDONGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DANGHOATDONGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DICHVUDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMADV;
            
            private System.Data.DataColumn columnLOAIDV;
            
            private System.Data.DataColumn columnCUOCDV;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUDataTable() {
                this.TableName = "DICHVU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICHVUDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DICHVUDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MADVColumn {
                get {
                    return this.columnMADV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOAIDVColumn {
                get {
                    return this.columnLOAIDV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUOCDVColumn {
                get {
                    return this.columnCUOCDV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow this[int index] {
                get {
                    return ((DICHVURow)(this.Rows[index]));
                }
            }
            
            public event DICHVURowChangeEventHandler DICHVURowChanging;
            
            public event DICHVURowChangeEventHandler DICHVURowChanged;
            
            public event DICHVURowChangeEventHandler DICHVURowDeleting;
            
            public event DICHVURowChangeEventHandler DICHVURowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDICHVURow(DICHVURow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow AddDICHVURow(string MADV, string LOAIDV, float CUOCDV) {
                DICHVURow rowDICHVURow = ((DICHVURow)(this.NewRow()));
                rowDICHVURow.ItemArray = new object[] {
                        MADV,
                        LOAIDV,
                        CUOCDV};
                this.Rows.Add(rowDICHVURow);
                return rowDICHVURow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow FindByMADV(string MADV) {
                return ((DICHVURow)(this.Rows.Find(new object[] {
                            MADV})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DICHVUDataTable cln = ((DICHVUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DICHVUDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMADV = base.Columns["MADV"];
                this.columnLOAIDV = base.Columns["LOAIDV"];
                this.columnCUOCDV = base.Columns["CUOCDV"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMADV = new System.Data.DataColumn("MADV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMADV);
                this.columnLOAIDV = new System.Data.DataColumn("LOAIDV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAIDV);
                this.columnCUOCDV = new System.Data.DataColumn("CUOCDV", typeof(float), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUOCDV);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMADV}, true));
                this.columnMADV.AllowDBNull = false;
                this.columnMADV.Unique = true;
                this.columnMADV.MaxLength = 4;
                this.columnLOAIDV.MaxLength = 25;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow NewDICHVURow() {
                return ((DICHVURow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DICHVURow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DICHVURow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DICHVURowChanged != null)) {
                    this.DICHVURowChanged(this, new DICHVURowChangeEvent(((DICHVURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DICHVURowChanging != null)) {
                    this.DICHVURowChanging(this, new DICHVURowChangeEvent(((DICHVURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DICHVURowDeleted != null)) {
                    this.DICHVURowDeleted(this, new DICHVURowChangeEvent(((DICHVURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DICHVURowDeleting != null)) {
                    this.DICHVURowDeleting(this, new DICHVURowChangeEvent(((DICHVURow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDICHVURow(DICHVURow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DICHVUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DICHVUTHEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMA_DVTHEM;
            
            private System.Data.DataColumn columnLOAI_DVTHEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMDataTable() {
                this.TableName = "DICHVUTHEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICHVUTHEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DICHVUTHEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MA_DVTHEMColumn {
                get {
                    return this.columnMA_DVTHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOAI_DVTHEMColumn {
                get {
                    return this.columnLOAI_DVTHEM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow this[int index] {
                get {
                    return ((DICHVUTHEMRow)(this.Rows[index]));
                }
            }
            
            public event DICHVUTHEMRowChangeEventHandler DICHVUTHEMRowChanging;
            
            public event DICHVUTHEMRowChangeEventHandler DICHVUTHEMRowChanged;
            
            public event DICHVUTHEMRowChangeEventHandler DICHVUTHEMRowDeleting;
            
            public event DICHVUTHEMRowChangeEventHandler DICHVUTHEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDICHVUTHEMRow(DICHVUTHEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow AddDICHVUTHEMRow(string MA_DVTHEM, string LOAI_DVTHEM) {
                DICHVUTHEMRow rowDICHVUTHEMRow = ((DICHVUTHEMRow)(this.NewRow()));
                rowDICHVUTHEMRow.ItemArray = new object[] {
                        MA_DVTHEM,
                        LOAI_DVTHEM};
                this.Rows.Add(rowDICHVUTHEMRow);
                return rowDICHVUTHEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow FindByMA_DVTHEM(string MA_DVTHEM) {
                return ((DICHVUTHEMRow)(this.Rows.Find(new object[] {
                            MA_DVTHEM})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DICHVUTHEMDataTable cln = ((DICHVUTHEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DICHVUTHEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMA_DVTHEM = base.Columns["MA_DVTHEM"];
                this.columnLOAI_DVTHEM = base.Columns["LOAI_DVTHEM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMA_DVTHEM = new System.Data.DataColumn("MA_DVTHEM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_DVTHEM);
                this.columnLOAI_DVTHEM = new System.Data.DataColumn("LOAI_DVTHEM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAI_DVTHEM);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMA_DVTHEM}, true));
                this.columnMA_DVTHEM.AllowDBNull = false;
                this.columnMA_DVTHEM.Unique = true;
                this.columnMA_DVTHEM.MaxLength = 4;
                this.columnLOAI_DVTHEM.MaxLength = 25;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow NewDICHVUTHEMRow() {
                return ((DICHVUTHEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DICHVUTHEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DICHVUTHEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DICHVUTHEMRowChanged != null)) {
                    this.DICHVUTHEMRowChanged(this, new DICHVUTHEMRowChangeEvent(((DICHVUTHEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DICHVUTHEMRowChanging != null)) {
                    this.DICHVUTHEMRowChanging(this, new DICHVUTHEMRowChangeEvent(((DICHVUTHEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DICHVUTHEMRowDeleted != null)) {
                    this.DICHVUTHEMRowDeleted(this, new DICHVUTHEMRowChangeEvent(((DICHVUTHEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DICHVUTHEMRowDeleting != null)) {
                    this.DICHVUTHEMRowDeleting(this, new DICHVUTHEMRowChangeEvent(((DICHVUTHEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDICHVUTHEMRow(DICHVUTHEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DICHVUTHEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACHHANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTEL;
            
            private System.Data.DataColumn columnHOTEN;
            
            private System.Data.DataColumn columnDIACHI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGDataTable() {
                this.TableName = "KHACHHANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACHHANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACHHANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HOTENColumn {
                get {
                    return this.columnHOTEN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow this[int index] {
                get {
                    return ((KHACHHANGRow)(this.Rows[index]));
                }
            }
            
            public event KHACHHANGRowChangeEventHandler KHACHHANGRowChanging;
            
            public event KHACHHANGRowChangeEventHandler KHACHHANGRowChanged;
            
            public event KHACHHANGRowChangeEventHandler KHACHHANGRowDeleting;
            
            public event KHACHHANGRowChangeEventHandler KHACHHANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACHHANGRow(KHACHHANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow AddKHACHHANGRow(string TEL, string HOTEN, string DIACHI) {
                KHACHHANGRow rowKHACHHANGRow = ((KHACHHANGRow)(this.NewRow()));
                rowKHACHHANGRow.ItemArray = new object[] {
                        TEL,
                        HOTEN,
                        DIACHI};
                this.Rows.Add(rowKHACHHANGRow);
                return rowKHACHHANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow FindByTEL(string TEL) {
                return ((KHACHHANGRow)(this.Rows.Find(new object[] {
                            TEL})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KHACHHANGDataTable cln = ((KHACHHANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KHACHHANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEL = base.Columns["TEL"];
                this.columnHOTEN = base.Columns["HOTEN"];
                this.columnDIACHI = base.Columns["DIACHI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnHOTEN = new System.Data.DataColumn("HOTEN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOTEN);
                this.columnDIACHI = new System.Data.DataColumn("DIACHI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIACHI);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTEL}, true));
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.Unique = true;
                this.columnTEL.MaxLength = 20;
                this.columnHOTEN.MaxLength = 20;
                this.columnDIACHI.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow NewKHACHHANGRow() {
                return ((KHACHHANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KHACHHANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KHACHHANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACHHANGRowChanged != null)) {
                    this.KHACHHANGRowChanged(this, new KHACHHANGRowChangeEvent(((KHACHHANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACHHANGRowChanging != null)) {
                    this.KHACHHANGRowChanging(this, new KHACHHANGRowChangeEvent(((KHACHHANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACHHANGRowDeleted != null)) {
                    this.KHACHHANGRowDeleted(this, new KHACHHANGRowChangeEvent(((KHACHHANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACHHANGRowDeleting != null)) {
                    this.KHACHHANGRowDeleting(this, new KHACHHANGRowChangeEvent(((KHACHHANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACHHANGRow(KHACHHANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACHHANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NGUOIGUIDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMANGUOIGUI;
            
            private System.Data.DataColumn columnHOTEN_NG;
            
            private System.Data.DataColumn columnDIACHI;
            
            private System.Data.DataColumn columnTEL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIDataTable() {
                this.TableName = "NGUOIGUI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOIGUIDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NGUOIGUIDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MANGUOIGUIColumn {
                get {
                    return this.columnMANGUOIGUI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HOTEN_NGColumn {
                get {
                    return this.columnHOTEN_NG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow this[int index] {
                get {
                    return ((NGUOIGUIRow)(this.Rows[index]));
                }
            }
            
            public event NGUOIGUIRowChangeEventHandler NGUOIGUIRowChanging;
            
            public event NGUOIGUIRowChangeEventHandler NGUOIGUIRowChanged;
            
            public event NGUOIGUIRowChangeEventHandler NGUOIGUIRowDeleting;
            
            public event NGUOIGUIRowChangeEventHandler NGUOIGUIRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNGUOIGUIRow(NGUOIGUIRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow AddNGUOIGUIRow(string MANGUOIGUI, string HOTEN_NG, string DIACHI, string TEL) {
                NGUOIGUIRow rowNGUOIGUIRow = ((NGUOIGUIRow)(this.NewRow()));
                rowNGUOIGUIRow.ItemArray = new object[] {
                        MANGUOIGUI,
                        HOTEN_NG,
                        DIACHI,
                        TEL};
                this.Rows.Add(rowNGUOIGUIRow);
                return rowNGUOIGUIRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow FindByMANGUOIGUI(string MANGUOIGUI) {
                return ((NGUOIGUIRow)(this.Rows.Find(new object[] {
                            MANGUOIGUI})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NGUOIGUIDataTable cln = ((NGUOIGUIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NGUOIGUIDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMANGUOIGUI = base.Columns["MANGUOIGUI"];
                this.columnHOTEN_NG = base.Columns["HOTEN_NG"];
                this.columnDIACHI = base.Columns["DIACHI"];
                this.columnTEL = base.Columns["TEL"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMANGUOIGUI = new System.Data.DataColumn("MANGUOIGUI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGUOIGUI);
                this.columnHOTEN_NG = new System.Data.DataColumn("HOTEN_NG", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOTEN_NG);
                this.columnDIACHI = new System.Data.DataColumn("DIACHI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIACHI);
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMANGUOIGUI}, true));
                this.columnMANGUOIGUI.AllowDBNull = false;
                this.columnMANGUOIGUI.Unique = true;
                this.columnMANGUOIGUI.MaxLength = 6;
                this.columnHOTEN_NG.MaxLength = 25;
                this.columnDIACHI.MaxLength = 50;
                this.columnTEL.MaxLength = 11;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow NewNGUOIGUIRow() {
                return ((NGUOIGUIRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NGUOIGUIRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NGUOIGUIRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NGUOIGUIRowChanged != null)) {
                    this.NGUOIGUIRowChanged(this, new NGUOIGUIRowChangeEvent(((NGUOIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NGUOIGUIRowChanging != null)) {
                    this.NGUOIGUIRowChanging(this, new NGUOIGUIRowChangeEvent(((NGUOIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NGUOIGUIRowDeleted != null)) {
                    this.NGUOIGUIRowDeleted(this, new NGUOIGUIRowChangeEvent(((NGUOIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NGUOIGUIRowDeleting != null)) {
                    this.NGUOIGUIRowDeleting(this, new NGUOIGUIRowChangeEvent(((NGUOIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNGUOIGUIRow(NGUOIGUIRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NGUOIGUIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NGUOINHANDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMANGUOINHAN;
            
            private System.Data.DataColumn columnHOTEN_NN;
            
            private System.Data.DataColumn columnDIACHI;
            
            private System.Data.DataColumn columnTEL;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANDataTable() {
                this.TableName = "NGUOINHAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOINHANDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NGUOINHANDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MANGUOINHANColumn {
                get {
                    return this.columnMANGUOINHAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HOTEN_NNColumn {
                get {
                    return this.columnHOTEN_NN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow this[int index] {
                get {
                    return ((NGUOINHANRow)(this.Rows[index]));
                }
            }
            
            public event NGUOINHANRowChangeEventHandler NGUOINHANRowChanging;
            
            public event NGUOINHANRowChangeEventHandler NGUOINHANRowChanged;
            
            public event NGUOINHANRowChangeEventHandler NGUOINHANRowDeleting;
            
            public event NGUOINHANRowChangeEventHandler NGUOINHANRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNGUOINHANRow(NGUOINHANRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow AddNGUOINHANRow(string MANGUOINHAN, string HOTEN_NN, string DIACHI, string TEL) {
                NGUOINHANRow rowNGUOINHANRow = ((NGUOINHANRow)(this.NewRow()));
                rowNGUOINHANRow.ItemArray = new object[] {
                        MANGUOINHAN,
                        HOTEN_NN,
                        DIACHI,
                        TEL};
                this.Rows.Add(rowNGUOINHANRow);
                return rowNGUOINHANRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow FindByMANGUOINHAN(string MANGUOINHAN) {
                return ((NGUOINHANRow)(this.Rows.Find(new object[] {
                            MANGUOINHAN})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NGUOINHANDataTable cln = ((NGUOINHANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NGUOINHANDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMANGUOINHAN = base.Columns["MANGUOINHAN"];
                this.columnHOTEN_NN = base.Columns["HOTEN_NN"];
                this.columnDIACHI = base.Columns["DIACHI"];
                this.columnTEL = base.Columns["TEL"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMANGUOINHAN = new System.Data.DataColumn("MANGUOINHAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGUOINHAN);
                this.columnHOTEN_NN = new System.Data.DataColumn("HOTEN_NN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOTEN_NN);
                this.columnDIACHI = new System.Data.DataColumn("DIACHI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIACHI);
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMANGUOINHAN}, true));
                this.columnMANGUOINHAN.AllowDBNull = false;
                this.columnMANGUOINHAN.Unique = true;
                this.columnMANGUOINHAN.MaxLength = 6;
                this.columnHOTEN_NN.MaxLength = 25;
                this.columnDIACHI.MaxLength = 50;
                this.columnTEL.MaxLength = 11;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow NewNGUOINHANRow() {
                return ((NGUOINHANRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NGUOINHANRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NGUOINHANRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NGUOINHANRowChanged != null)) {
                    this.NGUOINHANRowChanged(this, new NGUOINHANRowChangeEvent(((NGUOINHANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NGUOINHANRowChanging != null)) {
                    this.NGUOINHANRowChanging(this, new NGUOINHANRowChangeEvent(((NGUOINHANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NGUOINHANRowDeleted != null)) {
                    this.NGUOINHANRowDeleted(this, new NGUOINHANRowChangeEvent(((NGUOINHANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NGUOINHANRowDeleting != null)) {
                    this.NGUOINHANRowDeleting(this, new NGUOINHANRowChangeEvent(((NGUOINHANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNGUOINHANRow(NGUOINHANRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NGUOINHANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAMNGUNGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTEL;
            
            private System.Data.DataColumn columnTHANGNGUNGSD;
            
            private System.Data.DataColumn columnPHIKHOIPHUC;
            
            private System.Data.DataColumn columnTRANGTHAI;
            
            private System.Data.DataColumn columnNGAYNOP;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGDataTable() {
                this.TableName = "TAMNGUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMNGUNGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAMNGUNGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn THANGNGUNGSDColumn {
                get {
                    return this.columnTHANGNGUNGSD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PHIKHOIPHUCColumn {
                get {
                    return this.columnPHIKHOIPHUC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRANGTHAIColumn {
                get {
                    return this.columnTRANGTHAI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NGAYNOPColumn {
                get {
                    return this.columnNGAYNOP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow this[int index] {
                get {
                    return ((TAMNGUNGRow)(this.Rows[index]));
                }
            }
            
            public event TAMNGUNGRowChangeEventHandler TAMNGUNGRowChanging;
            
            public event TAMNGUNGRowChangeEventHandler TAMNGUNGRowChanged;
            
            public event TAMNGUNGRowChangeEventHandler TAMNGUNGRowDeleting;
            
            public event TAMNGUNGRowChangeEventHandler TAMNGUNGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAMNGUNGRow(TAMNGUNGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow AddTAMNGUNGRow(KHACHHANGRow parentKHACHHANGRowByFK_TAMNGUNG_KHACHHANG, string THANGNGUNGSD, decimal PHIKHOIPHUC, string TRANGTHAI, string NGAYNOP) {
                TAMNGUNGRow rowTAMNGUNGRow = ((TAMNGUNGRow)(this.NewRow()));
                rowTAMNGUNGRow.ItemArray = new object[] {
                        parentKHACHHANGRowByFK_TAMNGUNG_KHACHHANG[0],
                        THANGNGUNGSD,
                        PHIKHOIPHUC,
                        TRANGTHAI,
                        NGAYNOP};
                this.Rows.Add(rowTAMNGUNGRow);
                return rowTAMNGUNGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow FindByTELTHANGNGUNGSD(string TEL, string THANGNGUNGSD) {
                return ((TAMNGUNGRow)(this.Rows.Find(new object[] {
                            TEL,
                            THANGNGUNGSD})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TAMNGUNGDataTable cln = ((TAMNGUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TAMNGUNGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTEL = base.Columns["TEL"];
                this.columnTHANGNGUNGSD = base.Columns["THANGNGUNGSD"];
                this.columnPHIKHOIPHUC = base.Columns["PHIKHOIPHUC"];
                this.columnTRANGTHAI = base.Columns["TRANGTHAI"];
                this.columnNGAYNOP = base.Columns["NGAYNOP"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTEL = new System.Data.DataColumn("TEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnTHANGNGUNGSD = new System.Data.DataColumn("THANGNGUNGSD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTHANGNGUNGSD);
                this.columnPHIKHOIPHUC = new System.Data.DataColumn("PHIKHOIPHUC", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHIKHOIPHUC);
                this.columnTRANGTHAI = new System.Data.DataColumn("TRANGTHAI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANGTHAI);
                this.columnNGAYNOP = new System.Data.DataColumn("NGAYNOP", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNGAYNOP);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnTEL,
                                this.columnTHANGNGUNGSD}, true));
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 20;
                this.columnTHANGNGUNGSD.AllowDBNull = false;
                this.columnTHANGNGUNGSD.MaxLength = 7;
                this.columnTRANGTHAI.MaxLength = 20;
                this.columnNGAYNOP.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow NewTAMNGUNGRow() {
                return ((TAMNGUNGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TAMNGUNGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TAMNGUNGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAMNGUNGRowChanged != null)) {
                    this.TAMNGUNGRowChanged(this, new TAMNGUNGRowChangeEvent(((TAMNGUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAMNGUNGRowChanging != null)) {
                    this.TAMNGUNGRowChanging(this, new TAMNGUNGRowChangeEvent(((TAMNGUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAMNGUNGRowDeleted != null)) {
                    this.TAMNGUNGRowDeleted(this, new TAMNGUNGRowChangeEvent(((TAMNGUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAMNGUNGRowDeleting != null)) {
                    this.TAMNGUNGRowDeleting(this, new TAMNGUNGRowChangeEvent(((TAMNGUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAMNGUNGRow(TAMNGUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                QLBD_DataDataSet ds = new QLBD_DataDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAMNGUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BAOCAORow : System.Data.DataRow {
            
            private BAOCAODataTable tableBAOCAO;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BAOCAORow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBAOCAO = ((BAOCAODataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADV {
                get {
                    return ((string)(this[this.tableBAOCAO.MADVColumn]));
                }
                set {
                    this[this.tableBAOCAO.MADVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SOLUONG {
                get {
                    try {
                        return ((int)(this[this.tableBAOCAO.SOLUONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOLUONG\' in table \'BAOCAO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAOCAO.SOLUONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVITINH1 {
                get {
                    try {
                        return ((string)(this[this.tableBAOCAO.DONVITINH1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DONVITINH1\' in table \'BAOCAO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAOCAO.DONVITINH1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SANLUONG {
                get {
                    try {
                        return ((int)(this[this.tableBAOCAO.SANLUONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SANLUONG\' in table \'BAOCAO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAOCAO.SANLUONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVITINH2 {
                get {
                    try {
                        return ((string)(this[this.tableBAOCAO.DONVITINH2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DONVITINH2\' in table \'BAOCAO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAOCAO.DONVITINH2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGCUOCTHU {
                get {
                    try {
                        return ((decimal)(this[this.tableBAOCAO.TONGCUOCTHUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TONGCUOCTHU\' in table \'BAOCAO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBAOCAO.TONGCUOCTHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow DICHVURow {
                get {
                    return ((DICHVURow)(this.GetParentRow(this.Table.ParentRelations["FK_BAOCAO_DICHVU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BAOCAO_DICHVU"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLUONGNull() {
                return this.IsNull(this.tableBAOCAO.SOLUONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLUONGNull() {
                this[this.tableBAOCAO.SOLUONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVITINH1Null() {
                return this.IsNull(this.tableBAOCAO.DONVITINH1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVITINH1Null() {
                this[this.tableBAOCAO.DONVITINH1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSANLUONGNull() {
                return this.IsNull(this.tableBAOCAO.SANLUONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSANLUONGNull() {
                this[this.tableBAOCAO.SANLUONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVITINH2Null() {
                return this.IsNull(this.tableBAOCAO.DONVITINH2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVITINH2Null() {
                this[this.tableBAOCAO.DONVITINH2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGCUOCTHUNull() {
                return this.IsNull(this.tableBAOCAO.TONGCUOCTHUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGCUOCTHUNull() {
                this[this.tableBAOCAO.TONGCUOCTHUColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BIKHOARow : System.Data.DataRow {
            
            private BIKHOADataTable tableBIKHOA;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BIKHOARow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBIKHOA = ((BIKHOADataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    return ((string)(this[this.tableBIKHOA.TELColumn]));
                }
                set {
                    this[this.tableBIKHOA.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THANGNO {
                get {
                    return ((string)(this[this.tableBIKHOA.THANGNOColumn]));
                }
                set {
                    this[this.tableBIKHOA.THANGNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENDICHVU {
                get {
                    try {
                        return ((decimal)(this[this.tableBIKHOA.TIENDICHVUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TIENDICHVU\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.TIENDICHVUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENTHUE_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableBIKHOA.TIENTHUE_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TIENTHUE_VAT\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.TIENTHUE_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGCUOCTHU {
                get {
                    return ((decimal)(this[this.tableBIKHOA.TONGCUOCTHUColumn]));
                }
                set {
                    this[this.tableBIKHOA.TONGCUOCTHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHIPHAT {
                get {
                    try {
                        return ((decimal)(this[this.tableBIKHOA.PHIPHATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PHIPHAT\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.PHIPHATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGCONG {
                get {
                    try {
                        return ((decimal)(this[this.tableBIKHOA.TONGCONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TONGCONG\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.TONGCONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANGTHAI {
                get {
                    try {
                        return ((string)(this[this.tableBIKHOA.TRANGTHAIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANGTHAI\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.TRANGTHAIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYNOP {
                get {
                    try {
                        return ((string)(this[this.tableBIKHOA.NGAYNOPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NGAYNOP\' in table \'BIKHOA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBIKHOA.NGAYNOPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow KHACHHANGRow {
                get {
                    return ((KHACHHANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_BIKHOA_KHACHHANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BIKHOA_KHACHHANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENDICHVUNull() {
                return this.IsNull(this.tableBIKHOA.TIENDICHVUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENDICHVUNull() {
                this[this.tableBIKHOA.TIENDICHVUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENTHUE_VATNull() {
                return this.IsNull(this.tableBIKHOA.TIENTHUE_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENTHUE_VATNull() {
                this[this.tableBIKHOA.TIENTHUE_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHIPHATNull() {
                return this.IsNull(this.tableBIKHOA.PHIPHATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHIPHATNull() {
                this[this.tableBIKHOA.PHIPHATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGCONGNull() {
                return this.IsNull(this.tableBIKHOA.TONGCONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGCONGNull() {
                this[this.tableBIKHOA.TONGCONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANGTHAINull() {
                return this.IsNull(this.tableBIKHOA.TRANGTHAIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANGTHAINull() {
                this[this.tableBIKHOA.TRANGTHAIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYNOPNull() {
                return this.IsNull(this.tableBIKHOA.NGAYNOPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYNOPNull() {
                this[this.tableBIKHOA.NGAYNOPColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BUUGUIRow : System.Data.DataRow {
            
            private BUUGUIDataTable tableBUUGUI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BUUGUIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBUUGUI = ((BUUGUIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MABUUGUI {
                get {
                    return ((string)(this[this.tableBUUGUI.MABUUGUIColumn]));
                }
                set {
                    this[this.tableBUUGUI.MABUUGUIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADV {
                get {
                    try {
                        return ((string)(this[this.tableBUUGUI.MADVColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MADV\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.MADVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SANLUONG {
                get {
                    try {
                        return ((int)(this[this.tableBUUGUI.SANLUONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SANLUONG\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.SANLUONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DONVITINH {
                get {
                    try {
                        return ((string)(this[this.tableBUUGUI.DONVITINHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DONVITINH\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.DONVITINHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CUOC {
                get {
                    try {
                        return ((decimal)(this[this.tableBUUGUI.CUOCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUOC\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.CUOCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MA_DVTHEM {
                get {
                    try {
                        return ((string)(this[this.tableBUUGUI.MA_DVTHEMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MA_DVTHEM\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.MA_DVTHEMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANGUOIGUI {
                get {
                    try {
                        return ((string)(this[this.tableBUUGUI.MANGUOIGUIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MANGUOIGUI\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.MANGUOIGUIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANGUOINHAN {
                get {
                    try {
                        return ((string)(this[this.tableBUUGUI.MANGUOINHANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MANGUOINHAN\' in table \'BUUGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBUUGUI.MANGUOINHANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow DICHVURow {
                get {
                    return ((DICHVURow)(this.GetParentRow(this.Table.ParentRelations["FK_BUUGUI_DICHVU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BUUGUI_DICHVU"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow DICHVUTHEMRow {
                get {
                    return ((DICHVUTHEMRow)(this.GetParentRow(this.Table.ParentRelations["FK_BUUGUI_DICHVUTHEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BUUGUI_DICHVUTHEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow NGUOIGUIRow {
                get {
                    return ((NGUOIGUIRow)(this.GetParentRow(this.Table.ParentRelations["FK_BUUGUI_NGUOIGUI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BUUGUI_NGUOIGUI"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow NGUOINHANRow {
                get {
                    return ((NGUOINHANRow)(this.GetParentRow(this.Table.ParentRelations["FK_BUUGUI_NGUOINHAN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BUUGUI_NGUOINHAN"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADVNull() {
                return this.IsNull(this.tableBUUGUI.MADVColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADVNull() {
                this[this.tableBUUGUI.MADVColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSANLUONGNull() {
                return this.IsNull(this.tableBUUGUI.SANLUONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSANLUONGNull() {
                this[this.tableBUUGUI.SANLUONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDONVITINHNull() {
                return this.IsNull(this.tableBUUGUI.DONVITINHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDONVITINHNull() {
                this[this.tableBUUGUI.DONVITINHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUOCNull() {
                return this.IsNull(this.tableBUUGUI.CUOCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUOCNull() {
                this[this.tableBUUGUI.CUOCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMA_DVTHEMNull() {
                return this.IsNull(this.tableBUUGUI.MA_DVTHEMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMA_DVTHEMNull() {
                this[this.tableBUUGUI.MA_DVTHEMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANGUOIGUINull() {
                return this.IsNull(this.tableBUUGUI.MANGUOIGUIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANGUOIGUINull() {
                this[this.tableBUUGUI.MANGUOIGUIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANGUOINHANNull() {
                return this.IsNull(this.tableBUUGUI.MANGUOINHANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANGUOINHANNull() {
                this[this.tableBUUGUI.MANGUOINHANColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CUOCGOIRow : System.Data.DataRow {
            
            private CUOCGOIDataTable tableCUOCGOI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUOCGOIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUOCGOI = ((CUOCGOIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MACUOCGOI {
                get {
                    return ((string)(this[this.tableCUOCGOI.MACUOCGOIColumn]));
                }
                set {
                    this[this.tableCUOCGOI.MACUOCGOIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADV {
                get {
                    try {
                        return ((string)(this[this.tableCUOCGOI.MADVColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MADV\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.MADVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOMAYGOI {
                get {
                    try {
                        return ((string)(this[this.tableCUOCGOI.SOMAYGOIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SOMAYGOI\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.SOMAYGOIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THOIGIAN_BATDAU {
                get {
                    try {
                        return ((string)(this[this.tableCUOCGOI.THOIGIAN_BATDAUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'THOIGIAN_BATDAU\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.THOIGIAN_BATDAUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THOIGIAN_KETTHUC {
                get {
                    try {
                        return ((string)(this[this.tableCUOCGOI.THOIGIAN_KETTHUCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'THOIGIAN_KETTHUC\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.THOIGIAN_KETTHUCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SANLUONG {
                get {
                    try {
                        return ((int)(this[this.tableCUOCGOI.SANLUONGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SANLUONG\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.SANLUONGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CUOCTHU {
                get {
                    try {
                        return ((decimal)(this[this.tableCUOCGOI.CUOCTHUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUOCTHU\' in table \'CUOCGOI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUOCGOI.CUOCTHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow DICHVURow {
                get {
                    return ((DICHVURow)(this.GetParentRow(this.Table.ParentRelations["FK_CUOCGOI_DICHVU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CUOCGOI_DICHVU"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMADVNull() {
                return this.IsNull(this.tableCUOCGOI.MADVColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMADVNull() {
                this[this.tableCUOCGOI.MADVColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOMAYGOINull() {
                return this.IsNull(this.tableCUOCGOI.SOMAYGOIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOMAYGOINull() {
                this[this.tableCUOCGOI.SOMAYGOIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHOIGIAN_BATDAUNull() {
                return this.IsNull(this.tableCUOCGOI.THOIGIAN_BATDAUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHOIGIAN_BATDAUNull() {
                this[this.tableCUOCGOI.THOIGIAN_BATDAUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTHOIGIAN_KETTHUCNull() {
                return this.IsNull(this.tableCUOCGOI.THOIGIAN_KETTHUCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTHOIGIAN_KETTHUCNull() {
                this[this.tableCUOCGOI.THOIGIAN_KETTHUCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSANLUONGNull() {
                return this.IsNull(this.tableCUOCGOI.SANLUONGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSANLUONGNull() {
                this[this.tableCUOCGOI.SANLUONGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUOCTHUNull() {
                return this.IsNull(this.tableCUOCGOI.CUOCTHUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUOCTHUNull() {
                this[this.tableCUOCGOI.CUOCTHUColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DANGHOATDONGRow : System.Data.DataRow {
            
            private DANGHOATDONGDataTable tableDANGHOATDONG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DANGHOATDONGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDANGHOATDONG = ((DANGHOATDONGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    return ((string)(this[this.tableDANGHOATDONG.TELColumn]));
                }
                set {
                    this[this.tableDANGHOATDONG.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUOCTHANG {
                get {
                    return ((string)(this[this.tableDANGHOATDONG.CUOCTHANGColumn]));
                }
                set {
                    this[this.tableDANGHOATDONG.CUOCTHANGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENDICHVU {
                get {
                    return ((decimal)(this[this.tableDANGHOATDONG.TIENDICHVUColumn]));
                }
                set {
                    this[this.tableDANGHOATDONG.TIENDICHVUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIENTHUE_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableDANGHOATDONG.TIENTHUE_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TIENTHUE_VAT\' in table \'DANGHOATDONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDANGHOATDONG.TIENTHUE_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TONGCUOCTHU {
                get {
                    try {
                        return ((decimal)(this[this.tableDANGHOATDONG.TONGCUOCTHUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TONGCUOCTHU\' in table \'DANGHOATDONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDANGHOATDONG.TONGCUOCTHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYNOP {
                get {
                    try {
                        return ((string)(this[this.tableDANGHOATDONG.NGAYNOPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NGAYNOP\' in table \'DANGHOATDONG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDANGHOATDONG.NGAYNOPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIENTHUE_VATNull() {
                return this.IsNull(this.tableDANGHOATDONG.TIENTHUE_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIENTHUE_VATNull() {
                this[this.tableDANGHOATDONG.TIENTHUE_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTONGCUOCTHUNull() {
                return this.IsNull(this.tableDANGHOATDONG.TONGCUOCTHUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTONGCUOCTHUNull() {
                this[this.tableDANGHOATDONG.TONGCUOCTHUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYNOPNull() {
                return this.IsNull(this.tableDANGHOATDONG.NGAYNOPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYNOPNull() {
                this[this.tableDANGHOATDONG.NGAYNOPColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DICHVURow : System.Data.DataRow {
            
            private DICHVUDataTable tableDICHVU;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICHVURow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDICHVU = ((DICHVUDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MADV {
                get {
                    return ((string)(this[this.tableDICHVU.MADVColumn]));
                }
                set {
                    this[this.tableDICHVU.MADVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOAIDV {
                get {
                    try {
                        return ((string)(this[this.tableDICHVU.LOAIDVColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOAIDV\' in table \'DICHVU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDICHVU.LOAIDVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CUOCDV {
                get {
                    try {
                        return ((float)(this[this.tableDICHVU.CUOCDVColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUOCDV\' in table \'DICHVU\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDICHVU.CUOCDVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOAIDVNull() {
                return this.IsNull(this.tableDICHVU.LOAIDVColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOAIDVNull() {
                this[this.tableDICHVU.LOAIDVColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUOCDVNull() {
                return this.IsNull(this.tableDICHVU.CUOCDVColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUOCDVNull() {
                this[this.tableDICHVU.CUOCDVColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow[] GetBAOCAORows() {
                return ((BAOCAORow[])(base.GetChildRows(this.Table.ChildRelations["FK_BAOCAO_DICHVU"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow[] GetBUUGUIRows() {
                return ((BUUGUIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BUUGUI_DICHVU"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow[] GetCUOCGOIRows() {
                return ((CUOCGOIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CUOCGOI_DICHVU"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DICHVUTHEMRow : System.Data.DataRow {
            
            private DICHVUTHEMDataTable tableDICHVUTHEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DICHVUTHEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDICHVUTHEM = ((DICHVUTHEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MA_DVTHEM {
                get {
                    return ((string)(this[this.tableDICHVUTHEM.MA_DVTHEMColumn]));
                }
                set {
                    this[this.tableDICHVUTHEM.MA_DVTHEMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOAI_DVTHEM {
                get {
                    try {
                        return ((string)(this[this.tableDICHVUTHEM.LOAI_DVTHEMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOAI_DVTHEM\' in table \'DICHVUTHEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDICHVUTHEM.LOAI_DVTHEMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOAI_DVTHEMNull() {
                return this.IsNull(this.tableDICHVUTHEM.LOAI_DVTHEMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOAI_DVTHEMNull() {
                this[this.tableDICHVUTHEM.LOAI_DVTHEMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow[] GetBUUGUIRows() {
                return ((BUUGUIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BUUGUI_DICHVUTHEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACHHANGRow : System.Data.DataRow {
            
            private KHACHHANGDataTable tableKHACHHANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACHHANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACHHANG = ((KHACHHANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    return ((string)(this[this.tableKHACHHANG.TELColumn]));
                }
                set {
                    this[this.tableKHACHHANG.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOTEN {
                get {
                    try {
                        return ((string)(this[this.tableKHACHHANG.HOTENColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOTEN\' in table \'KHACHHANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACHHANG.HOTENColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableKHACHHANG.DIACHIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIACHI\' in table \'KHACHHANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACHHANG.DIACHIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOTENNull() {
                return this.IsNull(this.tableKHACHHANG.HOTENColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOTENNull() {
                this[this.tableKHACHHANG.HOTENColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIACHINull() {
                return this.IsNull(this.tableKHACHHANG.DIACHIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIACHINull() {
                this[this.tableKHACHHANG.DIACHIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow[] GetBIKHOARows() {
                return ((BIKHOARow[])(base.GetChildRows(this.Table.ChildRelations["FK_BIKHOA_KHACHHANG"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow[] GetTAMNGUNGRows() {
                return ((TAMNGUNGRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TAMNGUNG_KHACHHANG"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NGUOIGUIRow : System.Data.DataRow {
            
            private NGUOIGUIDataTable tableNGUOIGUI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOIGUIRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNGUOIGUI = ((NGUOIGUIDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANGUOIGUI {
                get {
                    return ((string)(this[this.tableNGUOIGUI.MANGUOIGUIColumn]));
                }
                set {
                    this[this.tableNGUOIGUI.MANGUOIGUIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOTEN_NG {
                get {
                    try {
                        return ((string)(this[this.tableNGUOIGUI.HOTEN_NGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOTEN_NG\' in table \'NGUOIGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOIGUI.HOTEN_NGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableNGUOIGUI.DIACHIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIACHI\' in table \'NGUOIGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOIGUI.DIACHIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tableNGUOIGUI.TELColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TEL\' in table \'NGUOIGUI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOIGUI.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOTEN_NGNull() {
                return this.IsNull(this.tableNGUOIGUI.HOTEN_NGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOTEN_NGNull() {
                this[this.tableNGUOIGUI.HOTEN_NGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIACHINull() {
                return this.IsNull(this.tableNGUOIGUI.DIACHIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIACHINull() {
                this[this.tableNGUOIGUI.DIACHIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELNull() {
                return this.IsNull(this.tableNGUOIGUI.TELColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELNull() {
                this[this.tableNGUOIGUI.TELColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow[] GetBUUGUIRows() {
                return ((BUUGUIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BUUGUI_NGUOIGUI"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NGUOINHANRow : System.Data.DataRow {
            
            private NGUOINHANDataTable tableNGUOINHAN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGUOINHANRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNGUOINHAN = ((NGUOINHANDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANGUOINHAN {
                get {
                    return ((string)(this[this.tableNGUOINHAN.MANGUOINHANColumn]));
                }
                set {
                    this[this.tableNGUOINHAN.MANGUOINHANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HOTEN_NN {
                get {
                    try {
                        return ((string)(this[this.tableNGUOINHAN.HOTEN_NNColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HOTEN_NN\' in table \'NGUOINHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOINHAN.HOTEN_NNColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableNGUOINHAN.DIACHIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIACHI\' in table \'NGUOINHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOINHAN.DIACHIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tableNGUOINHAN.TELColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TEL\' in table \'NGUOINHAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGUOINHAN.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOTEN_NNNull() {
                return this.IsNull(this.tableNGUOINHAN.HOTEN_NNColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOTEN_NNNull() {
                this[this.tableNGUOINHAN.HOTEN_NNColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIACHINull() {
                return this.IsNull(this.tableNGUOINHAN.DIACHIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIACHINull() {
                this[this.tableNGUOINHAN.DIACHIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTELNull() {
                return this.IsNull(this.tableNGUOINHAN.TELColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTELNull() {
                this[this.tableNGUOINHAN.TELColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow[] GetBUUGUIRows() {
                return ((BUUGUIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BUUGUI_NGUOINHAN"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAMNGUNGRow : System.Data.DataRow {
            
            private TAMNGUNGDataTable tableTAMNGUNG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMNGUNGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAMNGUNG = ((TAMNGUNGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL {
                get {
                    return ((string)(this[this.tableTAMNGUNG.TELColumn]));
                }
                set {
                    this[this.tableTAMNGUNG.TELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string THANGNGUNGSD {
                get {
                    return ((string)(this[this.tableTAMNGUNG.THANGNGUNGSDColumn]));
                }
                set {
                    this[this.tableTAMNGUNG.THANGNGUNGSDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PHIKHOIPHUC {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMNGUNG.PHIKHOIPHUCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PHIKHOIPHUC\' in table \'TAMNGUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMNGUNG.PHIKHOIPHUCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANGTHAI {
                get {
                    try {
                        return ((string)(this[this.tableTAMNGUNG.TRANGTHAIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRANGTHAI\' in table \'TAMNGUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMNGUNG.TRANGTHAIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NGAYNOP {
                get {
                    try {
                        return ((string)(this[this.tableTAMNGUNG.NGAYNOPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NGAYNOP\' in table \'TAMNGUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMNGUNG.NGAYNOPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow KHACHHANGRow {
                get {
                    return ((KHACHHANGRow)(this.GetParentRow(this.Table.ParentRelations["FK_TAMNGUNG_KHACHHANG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TAMNGUNG_KHACHHANG"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHIKHOIPHUCNull() {
                return this.IsNull(this.tableTAMNGUNG.PHIKHOIPHUCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHIKHOIPHUCNull() {
                this[this.tableTAMNGUNG.PHIKHOIPHUCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANGTHAINull() {
                return this.IsNull(this.tableTAMNGUNG.TRANGTHAIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANGTHAINull() {
                this[this.tableTAMNGUNG.TRANGTHAIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNGAYNOPNull() {
                return this.IsNull(this.tableTAMNGUNG.NGAYNOPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNGAYNOPNull() {
                this[this.tableTAMNGUNG.NGAYNOPColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BAOCAORowChangeEvent : System.EventArgs {
            
            private BAOCAORow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORowChangeEvent(BAOCAORow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BAOCAORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BIKHOARowChangeEvent : System.EventArgs {
            
            private BIKHOARow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARowChangeEvent(BIKHOARow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BIKHOARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BUUGUIRowChangeEvent : System.EventArgs {
            
            private BUUGUIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRowChangeEvent(BUUGUIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BUUGUIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CUOCGOIRowChangeEvent : System.EventArgs {
            
            private CUOCGOIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRowChangeEvent(CUOCGOIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUOCGOIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DANGHOATDONGRowChangeEvent : System.EventArgs {
            
            private DANGHOATDONGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRowChangeEvent(DANGHOATDONGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DANGHOATDONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DICHVURowChangeEvent : System.EventArgs {
            
            private DICHVURow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURowChangeEvent(DICHVURow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DICHVUTHEMRowChangeEvent : System.EventArgs {
            
            private DICHVUTHEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRowChangeEvent(DICHVUTHEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DICHVUTHEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACHHANGRowChangeEvent : System.EventArgs {
            
            private KHACHHANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRowChangeEvent(KHACHHANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACHHANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NGUOIGUIRowChangeEvent : System.EventArgs {
            
            private NGUOIGUIRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRowChangeEvent(NGUOIGUIRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOIGUIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NGUOINHANRowChangeEvent : System.EventArgs {
            
            private NGUOINHANRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRowChangeEvent(NGUOINHANRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGUOINHANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAMNGUNGRowChangeEvent : System.EventArgs {
            
            private TAMNGUNGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRowChangeEvent(TAMNGUNGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMNGUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QLBDDemo.QLBD_DataDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BAOCAOTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BAOCAOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BAOCAO";
            tableMapping.ColumnMappings.Add("MADV", "MADV");
            tableMapping.ColumnMappings.Add("SOLUONG", "SOLUONG");
            tableMapping.ColumnMappings.Add("DONVITINH1", "DONVITINH1");
            tableMapping.ColumnMappings.Add("SANLUONG", "SANLUONG");
            tableMapping.ColumnMappings.Add("DONVITINH2", "DONVITINH2");
            tableMapping.ColumnMappings.Add("TONGCUOCTHU", "TONGCUOCTHU");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BAOCAO] WHERE (([MADV] = @Original_MADV) AND ((@IsNull_SOLUONG = 1 AND [SOLUONG] IS NULL) OR ([SOLUONG] = @Original_SOLUONG)) AND ((@IsNull_DONVITINH1 = 1 AND [DONVITINH1] IS NULL) OR ([DONVITINH1] = @Original_DONVITINH1)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_DONVITINH2 = 1 AND [DONVITINH2] IS NULL) OR ([DONVITINH2] = @Original_DONVITINH2)) AND ((@IsNull_TONGCUOCTHU = 1 AND [TONGCUOCTHU] IS NULL) OR ([TONGCUOCTHU] = @Original_TONGCUOCTHU)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH1", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BAOCAO] ([MADV], [SOLUONG], [DONVITINH1], [SANLUONG], [DONVITINH2], [TONGCUOCTHU]) VALUES (@MADV, @SOLUONG, @DONVITINH1, @SANLUONG, @DONVITINH2, @TONGCUOCTHU);
SELECT MADV, SOLUONG, DONVITINH1, SANLUONG, DONVITINH2, TONGCUOCTHU FROM BAOCAO WHERE (MADV = @MADV)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH1", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BAOCAO] SET [MADV] = @MADV, [SOLUONG] = @SOLUONG, [DONVITINH1] = @DONVITINH1, [SANLUONG] = @SANLUONG, [DONVITINH2] = @DONVITINH2, [TONGCUOCTHU] = @TONGCUOCTHU WHERE (([MADV] = @Original_MADV) AND ((@IsNull_SOLUONG = 1 AND [SOLUONG] IS NULL) OR ([SOLUONG] = @Original_SOLUONG)) AND ((@IsNull_DONVITINH1 = 1 AND [DONVITINH1] IS NULL) OR ([DONVITINH1] = @Original_DONVITINH1)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_DONVITINH2 = 1 AND [DONVITINH2] IS NULL) OR ([DONVITINH2] = @Original_DONVITINH2)) AND ((@IsNull_TONGCUOCTHU = 1 AND [TONGCUOCTHU] IS NULL) OR ([TONGCUOCTHU] = @Original_TONGCUOCTHU)));
SELECT MADV, SOLUONG, DONVITINH1, SANLUONG, DONVITINH2, TONGCUOCTHU FROM BAOCAO WHERE (MADV = @MADV)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH1", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH1", System.Data.SqlDbType.Char, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH2", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MADV, SOLUONG, DONVITINH1, SANLUONG, DONVITINH2, TONGCUOCTHU FROM dbo.BAOC" +
                "AO";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.BAOCAODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.BAOCAODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.BAOCAODataTable dataTable = new QLBD_DataDataSet.BAOCAODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.BAOCAODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BAOCAO");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MADV, System.Nullable<int> Original_SOLUONG, string Original_DONVITINH1, System.Nullable<int> Original_SANLUONG, string Original_DONVITINH2, System.Nullable<decimal> Original_TONGCUOCTHU) {
            if ((Original_MADV == null)) {
                throw new System.ArgumentNullException("Original_MADV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MADV));
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH1 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DONVITINH1));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH2 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DONVITINH2));
            }
            if ((Original_TONGCUOCTHU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MADV, System.Nullable<int> SOLUONG, string DONVITINH1, System.Nullable<int> SANLUONG, string DONVITINH2, System.Nullable<decimal> TONGCUOCTHU) {
            if ((MADV == null)) {
                throw new System.ArgumentNullException("MADV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MADV));
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DONVITINH1 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DONVITINH1));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DONVITINH2 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DONVITINH2));
            }
            if ((TONGCUOCTHU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MADV, System.Nullable<int> SOLUONG, string DONVITINH1, System.Nullable<int> SANLUONG, string DONVITINH2, System.Nullable<decimal> TONGCUOCTHU, string Original_MADV, System.Nullable<int> Original_SOLUONG, string Original_DONVITINH1, System.Nullable<int> Original_SANLUONG, string Original_DONVITINH2, System.Nullable<decimal> Original_TONGCUOCTHU) {
            if ((MADV == null)) {
                throw new System.ArgumentNullException("MADV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MADV));
            }
            if ((SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((DONVITINH1 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DONVITINH1));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((DONVITINH2 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DONVITINH2));
            }
            if ((TONGCUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_MADV == null)) {
                throw new System.ArgumentNullException("Original_MADV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MADV));
            }
            if ((Original_SOLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_SOLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH1 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_DONVITINH1));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH2 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DONVITINH2));
            }
            if ((Original_TONGCUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BIKHOATableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BIKHOATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BIKHOA";
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("THANGNO", "THANGNO");
            tableMapping.ColumnMappings.Add("TIENDICHVU", "TIENDICHVU");
            tableMapping.ColumnMappings.Add("TIENTHUE_VAT", "TIENTHUE_VAT");
            tableMapping.ColumnMappings.Add("TONGCUOCTHU", "TONGCUOCTHU");
            tableMapping.ColumnMappings.Add("PHIPHAT", "PHIPHAT");
            tableMapping.ColumnMappings.Add("TONGCONG", "TONGCONG");
            tableMapping.ColumnMappings.Add("TRANGTHAI", "TRANGTHAI");
            tableMapping.ColumnMappings.Add("NGAYNOP", "NGAYNOP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BIKHOA] WHERE (([TEL] = @Original_TEL) AND ([THANGNO] = @Original_THANGNO) AND ((@IsNull_TIENDICHVU = 1 AND [TIENDICHVU] IS NULL) OR ([TIENDICHVU] = @Original_TIENDICHVU)) AND ((@IsNull_TIENTHUE_VAT = 1 AND [TIENTHUE_VAT] IS NULL) OR ([TIENTHUE_VAT] = @Original_TIENTHUE_VAT)) AND ([TONGCUOCTHU] = @Original_TONGCUOCTHU) AND ((@IsNull_PHIPHAT = 1 AND [PHIPHAT] IS NULL) OR ([PHIPHAT] = @Original_PHIPHAT)) AND ((@IsNull_TONGCONG = 1 AND [TONGCONG] IS NULL) OR ([TONGCONG] = @Original_TONGCONG)) AND ((@IsNull_TRANGTHAI = 1 AND [TRANGTHAI] IS NULL) OR ([TRANGTHAI] = @Original_TRANGTHAI)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THANGNO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENDICHVU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENTHUE_VAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PHIPHAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PHIPHAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCONG", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANGTHAI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BIKHOA] ([TEL], [THANGNO], [TIENDICHVU], [TIENTHUE_VAT], [TONGCUOCTHU], [PHIPHAT], [TONGCONG], [TRANGTHAI], [NGAYNOP]) VALUES (@TEL, @THANGNO, @TIENDICHVU, @TIENTHUE_VAT, @TONGCUOCTHU, @PHIPHAT, @TONGCONG, @TRANGTHAI, @NGAYNOP);
SELECT TEL, THANGNO, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, PHIPHAT, TONGCONG, TRANGTHAI, NGAYNOP FROM BIKHOA WHERE (TEL = @TEL) AND (THANGNO = @THANGNO)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THANGNO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PHIPHAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCONG", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BIKHOA] SET [TEL] = @TEL, [THANGNO] = @THANGNO, [TIENDICHVU] = @TIENDICHVU, [TIENTHUE_VAT] = @TIENTHUE_VAT, [TONGCUOCTHU] = @TONGCUOCTHU, [PHIPHAT] = @PHIPHAT, [TONGCONG] = @TONGCONG, [TRANGTHAI] = @TRANGTHAI, [NGAYNOP] = @NGAYNOP WHERE (([TEL] = @Original_TEL) AND ([THANGNO] = @Original_THANGNO) AND ((@IsNull_TIENDICHVU = 1 AND [TIENDICHVU] IS NULL) OR ([TIENDICHVU] = @Original_TIENDICHVU)) AND ((@IsNull_TIENTHUE_VAT = 1 AND [TIENTHUE_VAT] IS NULL) OR ([TIENTHUE_VAT] = @Original_TIENTHUE_VAT)) AND ([TONGCUOCTHU] = @Original_TONGCUOCTHU) AND ((@IsNull_PHIPHAT = 1 AND [PHIPHAT] IS NULL) OR ([PHIPHAT] = @Original_PHIPHAT)) AND ((@IsNull_TONGCONG = 1 AND [TONGCONG] IS NULL) OR ([TONGCONG] = @Original_TONGCONG)) AND ((@IsNull_TRANGTHAI = 1 AND [TRANGTHAI] IS NULL) OR ([TRANGTHAI] = @Original_TRANGTHAI)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)));
SELECT TEL, THANGNO, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, PHIPHAT, TONGCONG, TRANGTHAI, NGAYNOP FROM BIKHOA WHERE (TEL = @TEL) AND (THANGNO = @THANGNO)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THANGNO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNO", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PHIPHAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCONG", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THANGNO", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNO", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENDICHVU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENTHUE_VAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PHIPHAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PHIPHAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIPHAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCONG", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANGTHAI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TEL, THANGNO, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, PHIPHAT, TONGCONG, TR" +
                "ANGTHAI, NGAYNOP FROM dbo.BIKHOA";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.BIKHOADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.BIKHOADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.BIKHOADataTable dataTable = new QLBD_DataDataSet.BIKHOADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.BIKHOADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BIKHOA");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TEL, string Original_THANGNO, System.Nullable<decimal> Original_TIENDICHVU, System.Nullable<decimal> Original_TIENTHUE_VAT, decimal Original_TONGCUOCTHU, System.Nullable<decimal> Original_PHIPHAT, System.Nullable<decimal> Original_TONGCONG, string Original_TRANGTHAI, string Original_NGAYNOP) {
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TEL));
            }
            if ((Original_THANGNO == null)) {
                throw new System.ArgumentNullException("Original_THANGNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_THANGNO));
            }
            if ((Original_TIENDICHVU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_TIENDICHVU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_TONGCUOCTHU));
            if ((Original_PHIPHAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_PHIPHAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_TONGCONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_TONGCONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_TRANGTHAI == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_TRANGTHAI));
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEL, string THANGNO, System.Nullable<decimal> TIENDICHVU, System.Nullable<decimal> TIENTHUE_VAT, decimal TONGCUOCTHU, System.Nullable<decimal> PHIPHAT, System.Nullable<decimal> TONGCONG, string TRANGTHAI, string NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((THANGNO == null)) {
                throw new System.ArgumentNullException("THANGNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(THANGNO));
            }
            if ((TIENDICHVU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(TIENDICHVU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TONGCUOCTHU));
            if ((PHIPHAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PHIPHAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TONGCONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TONGCONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((TRANGTHAI == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TRANGTHAI));
            }
            if ((NGAYNOP == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TEL, 
                    string THANGNO, 
                    System.Nullable<decimal> TIENDICHVU, 
                    System.Nullable<decimal> TIENTHUE_VAT, 
                    decimal TONGCUOCTHU, 
                    System.Nullable<decimal> PHIPHAT, 
                    System.Nullable<decimal> TONGCONG, 
                    string TRANGTHAI, 
                    string NGAYNOP, 
                    string Original_TEL, 
                    string Original_THANGNO, 
                    System.Nullable<decimal> Original_TIENDICHVU, 
                    System.Nullable<decimal> Original_TIENTHUE_VAT, 
                    decimal Original_TONGCUOCTHU, 
                    System.Nullable<decimal> Original_PHIPHAT, 
                    System.Nullable<decimal> Original_TONGCONG, 
                    string Original_TRANGTHAI, 
                    string Original_NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((THANGNO == null)) {
                throw new System.ArgumentNullException("THANGNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(THANGNO));
            }
            if ((TIENDICHVU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(TIENDICHVU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TONGCUOCTHU));
            if ((PHIPHAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PHIPHAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((TONGCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(TONGCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((TRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(TRANGTHAI));
            }
            if ((NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NGAYNOP));
            }
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TEL));
            }
            if ((Original_THANGNO == null)) {
                throw new System.ArgumentNullException("Original_THANGNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_THANGNO));
            }
            if ((Original_TIENDICHVU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_TIENDICHVU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_TONGCUOCTHU));
            if ((Original_PHIPHAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_PHIPHAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_TONGCONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_TONGCONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_TRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_TRANGTHAI));
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BUUGUITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BUUGUITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BUUGUI";
            tableMapping.ColumnMappings.Add("MABUUGUI", "MABUUGUI");
            tableMapping.ColumnMappings.Add("MADV", "MADV");
            tableMapping.ColumnMappings.Add("SANLUONG", "SANLUONG");
            tableMapping.ColumnMappings.Add("DONVITINH", "DONVITINH");
            tableMapping.ColumnMappings.Add("CUOC", "CUOC");
            tableMapping.ColumnMappings.Add("MA_DVTHEM", "MA_DVTHEM");
            tableMapping.ColumnMappings.Add("MANGUOIGUI", "MANGUOIGUI");
            tableMapping.ColumnMappings.Add("MANGUOINHAN", "MANGUOINHAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BUUGUI] WHERE (([MABUUGUI] = @Original_MABUUGUI) AND ((@IsNull_MADV = 1 AND [MADV] IS NULL) OR ([MADV] = @Original_MADV)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_DONVITINH = 1 AND [DONVITINH] IS NULL) OR ([DONVITINH] = @Original_DONVITINH)) AND ((@IsNull_CUOC = 1 AND [CUOC] IS NULL) OR ([CUOC] = @Original_CUOC)) AND ((@IsNull_MA_DVTHEM = 1 AND [MA_DVTHEM] IS NULL) OR ([MA_DVTHEM] = @Original_MA_DVTHEM)) AND ((@IsNull_MANGUOIGUI = 1 AND [MANGUOIGUI] IS NULL) OR ([MANGUOIGUI] = @Original_MANGUOIGUI)) AND ((@IsNull_MANGUOINHAN = 1 AND [MANGUOINHAN] IS NULL) OR ([MANGUOINHAN] = @Original_MANGUOINHAN)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MABUUGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MABUUGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MADV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MA_DVTHEM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MANGUOIGUI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MANGUOINHAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BUUGUI] ([MABUUGUI], [MADV], [SANLUONG], [DONVITINH], [CUOC], [MA_DVTHEM], [MANGUOIGUI], [MANGUOINHAN]) VALUES (@MABUUGUI, @MADV, @SANLUONG, @DONVITINH, @CUOC, @MA_DVTHEM, @MANGUOIGUI, @MANGUOINHAN);
SELECT MABUUGUI, MADV, SANLUONG, DONVITINH, CUOC, MA_DVTHEM, MANGUOIGUI, MANGUOINHAN FROM BUUGUI WHERE (MABUUGUI = @MABUUGUI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MABUUGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MABUUGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BUUGUI] SET [MABUUGUI] = @MABUUGUI, [MADV] = @MADV, [SANLUONG] = @SANLUONG, [DONVITINH] = @DONVITINH, [CUOC] = @CUOC, [MA_DVTHEM] = @MA_DVTHEM, [MANGUOIGUI] = @MANGUOIGUI, [MANGUOINHAN] = @MANGUOINHAN WHERE (([MABUUGUI] = @Original_MABUUGUI) AND ((@IsNull_MADV = 1 AND [MADV] IS NULL) OR ([MADV] = @Original_MADV)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_DONVITINH = 1 AND [DONVITINH] IS NULL) OR ([DONVITINH] = @Original_DONVITINH)) AND ((@IsNull_CUOC = 1 AND [CUOC] IS NULL) OR ([CUOC] = @Original_CUOC)) AND ((@IsNull_MA_DVTHEM = 1 AND [MA_DVTHEM] IS NULL) OR ([MA_DVTHEM] = @Original_MA_DVTHEM)) AND ((@IsNull_MANGUOIGUI = 1 AND [MANGUOIGUI] IS NULL) OR ([MANGUOIGUI] = @Original_MANGUOIGUI)) AND ((@IsNull_MANGUOINHAN = 1 AND [MANGUOINHAN] IS NULL) OR ([MANGUOINHAN] = @Original_MANGUOINHAN)));
SELECT MABUUGUI, MADV, SANLUONG, DONVITINH, CUOC, MA_DVTHEM, MANGUOIGUI, MANGUOINHAN FROM BUUGUI WHERE (MABUUGUI = @MABUUGUI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MABUUGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MABUUGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DONVITINH", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MABUUGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MABUUGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MADV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DONVITINH", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DONVITINH", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DONVITINH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MA_DVTHEM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MANGUOIGUI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MANGUOINHAN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MABUUGUI, MADV, SANLUONG, DONVITINH, CUOC, MA_DVTHEM, MANGUOIGUI, MANGUOIN" +
                "HAN FROM dbo.BUUGUI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.BUUGUIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.BUUGUIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.BUUGUIDataTable dataTable = new QLBD_DataDataSet.BUUGUIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.BUUGUIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BUUGUI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MABUUGUI, string Original_MADV, System.Nullable<int> Original_SANLUONG, string Original_DONVITINH, System.Nullable<decimal> Original_CUOC, string Original_MA_DVTHEM, string Original_MANGUOIGUI, string Original_MANGUOINHAN) {
            if ((Original_MABUUGUI == null)) {
                throw new System.ArgumentNullException("Original_MABUUGUI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MABUUGUI));
            }
            if ((Original_MADV == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MADV));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_CUOC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_CUOC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_MA_DVTHEM == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_MA_DVTHEM));
            }
            if ((Original_MANGUOIGUI == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_MANGUOIGUI));
            }
            if ((Original_MANGUOINHAN == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MANGUOINHAN));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MABUUGUI, string MADV, System.Nullable<int> SANLUONG, string DONVITINH, System.Nullable<decimal> CUOC, string MA_DVTHEM, string MANGUOIGUI, string MANGUOINHAN) {
            if ((MABUUGUI == null)) {
                throw new System.ArgumentNullException("MABUUGUI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MABUUGUI));
            }
            if ((MADV == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MADV));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DONVITINH == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DONVITINH));
            }
            if ((CUOC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(CUOC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MA_DVTHEM == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MA_DVTHEM));
            }
            if ((MANGUOIGUI == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MANGUOIGUI));
            }
            if ((MANGUOINHAN == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MANGUOINHAN));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MABUUGUI, 
                    string MADV, 
                    System.Nullable<int> SANLUONG, 
                    string DONVITINH, 
                    System.Nullable<decimal> CUOC, 
                    string MA_DVTHEM, 
                    string MANGUOIGUI, 
                    string MANGUOINHAN, 
                    string Original_MABUUGUI, 
                    string Original_MADV, 
                    System.Nullable<int> Original_SANLUONG, 
                    string Original_DONVITINH, 
                    System.Nullable<decimal> Original_CUOC, 
                    string Original_MA_DVTHEM, 
                    string Original_MANGUOIGUI, 
                    string Original_MANGUOINHAN) {
            if ((MABUUGUI == null)) {
                throw new System.ArgumentNullException("MABUUGUI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MABUUGUI));
            }
            if ((MADV == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MADV));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DONVITINH));
            }
            if ((CUOC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(CUOC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((MA_DVTHEM == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MA_DVTHEM));
            }
            if ((MANGUOIGUI == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MANGUOIGUI));
            }
            if ((MANGUOINHAN == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MANGUOINHAN));
            }
            if ((Original_MABUUGUI == null)) {
                throw new System.ArgumentNullException("Original_MABUUGUI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MABUUGUI));
            }
            if ((Original_MADV == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MADV));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_DONVITINH == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DONVITINH));
            }
            if ((Original_CUOC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_CUOC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_MA_DVTHEM == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_MA_DVTHEM));
            }
            if ((Original_MANGUOIGUI == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_MANGUOIGUI));
            }
            if ((Original_MANGUOINHAN == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_MANGUOINHAN));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUOCGOITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CUOCGOITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUOCGOI";
            tableMapping.ColumnMappings.Add("MACUOCGOI", "MACUOCGOI");
            tableMapping.ColumnMappings.Add("MADV", "MADV");
            tableMapping.ColumnMappings.Add("SOMAYGOI", "SOMAYGOI");
            tableMapping.ColumnMappings.Add("THOIGIAN_BATDAU", "THOIGIAN_BATDAU");
            tableMapping.ColumnMappings.Add("THOIGIAN_KETTHUC", "THOIGIAN_KETTHUC");
            tableMapping.ColumnMappings.Add("SANLUONG", "SANLUONG");
            tableMapping.ColumnMappings.Add("CUOCTHU", "CUOCTHU");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CUOCGOI] WHERE (([MACUOCGOI] = @Original_MACUOCGOI) AND ((@IsNull_MADV = 1 AND [MADV] IS NULL) OR ([MADV] = @Original_MADV)) AND ((@IsNull_SOMAYGOI = 1 AND [SOMAYGOI] IS NULL) OR ([SOMAYGOI] = @Original_SOMAYGOI)) AND ((@IsNull_THOIGIAN_BATDAU = 1 AND [THOIGIAN_BATDAU] IS NULL) OR ([THOIGIAN_BATDAU] = @Original_THOIGIAN_BATDAU)) AND ((@IsNull_THOIGIAN_KETTHUC = 1 AND [THOIGIAN_KETTHUC] IS NULL) OR ([THOIGIAN_KETTHUC] = @Original_THOIGIAN_KETTHUC)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_CUOCTHU = 1 AND [CUOCTHU] IS NULL) OR ([CUOCTHU] = @Original_CUOCTHU)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MACUOCGOI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MACUOCGOI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MADV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOMAYGOI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOMAYGOI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_THOIGIAN_BATDAU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THOIGIAN_BATDAU", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_THOIGIAN_KETTHUC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THOIGIAN_KETTHUC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CUOCGOI] ([MACUOCGOI], [MADV], [SOMAYGOI], [THOIGIAN_BATDAU], [THOIGIAN_KETTHUC], [SANLUONG], [CUOCTHU]) VALUES (@MACUOCGOI, @MADV, @SOMAYGOI, @THOIGIAN_BATDAU, @THOIGIAN_KETTHUC, @SANLUONG, @CUOCTHU);
SELECT MACUOCGOI, MADV, SOMAYGOI, THOIGIAN_BATDAU, THOIGIAN_KETTHUC, SANLUONG, CUOCTHU FROM CUOCGOI WHERE (MACUOCGOI = @MACUOCGOI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MACUOCGOI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MACUOCGOI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOMAYGOI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THOIGIAN_BATDAU", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THOIGIAN_KETTHUC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CUOCGOI] SET [MACUOCGOI] = @MACUOCGOI, [MADV] = @MADV, [SOMAYGOI] = @SOMAYGOI, [THOIGIAN_BATDAU] = @THOIGIAN_BATDAU, [THOIGIAN_KETTHUC] = @THOIGIAN_KETTHUC, [SANLUONG] = @SANLUONG, [CUOCTHU] = @CUOCTHU WHERE (([MACUOCGOI] = @Original_MACUOCGOI) AND ((@IsNull_MADV = 1 AND [MADV] IS NULL) OR ([MADV] = @Original_MADV)) AND ((@IsNull_SOMAYGOI = 1 AND [SOMAYGOI] IS NULL) OR ([SOMAYGOI] = @Original_SOMAYGOI)) AND ((@IsNull_THOIGIAN_BATDAU = 1 AND [THOIGIAN_BATDAU] IS NULL) OR ([THOIGIAN_BATDAU] = @Original_THOIGIAN_BATDAU)) AND ((@IsNull_THOIGIAN_KETTHUC = 1 AND [THOIGIAN_KETTHUC] IS NULL) OR ([THOIGIAN_KETTHUC] = @Original_THOIGIAN_KETTHUC)) AND ((@IsNull_SANLUONG = 1 AND [SANLUONG] IS NULL) OR ([SANLUONG] = @Original_SANLUONG)) AND ((@IsNull_CUOCTHU = 1 AND [CUOCTHU] IS NULL) OR ([CUOCTHU] = @Original_CUOCTHU)));
SELECT MACUOCGOI, MADV, SOMAYGOI, THOIGIAN_BATDAU, THOIGIAN_KETTHUC, SANLUONG, CUOCTHU FROM CUOCGOI WHERE (MACUOCGOI = @MACUOCGOI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MACUOCGOI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MACUOCGOI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SOMAYGOI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THOIGIAN_BATDAU", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THOIGIAN_KETTHUC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MACUOCGOI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MACUOCGOI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MADV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SOMAYGOI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SOMAYGOI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SOMAYGOI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_THOIGIAN_BATDAU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THOIGIAN_BATDAU", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_BATDAU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_THOIGIAN_KETTHUC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THOIGIAN_KETTHUC", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THOIGIAN_KETTHUC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SANLUONG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SANLUONG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MACUOCGOI, MADV, SOMAYGOI, THOIGIAN_BATDAU, THOIGIAN_KETTHUC, SANLUONG, CU" +
                "OCTHU FROM dbo.CUOCGOI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.CUOCGOIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.CUOCGOIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.CUOCGOIDataTable dataTable = new QLBD_DataDataSet.CUOCGOIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.CUOCGOIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CUOCGOI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MACUOCGOI, string Original_MADV, string Original_SOMAYGOI, string Original_THOIGIAN_BATDAU, string Original_THOIGIAN_KETTHUC, System.Nullable<int> Original_SANLUONG, System.Nullable<decimal> Original_CUOCTHU) {
            if ((Original_MACUOCGOI == null)) {
                throw new System.ArgumentNullException("Original_MACUOCGOI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MACUOCGOI));
            }
            if ((Original_MADV == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MADV));
            }
            if ((Original_SOMAYGOI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SOMAYGOI));
            }
            if ((Original_THOIGIAN_BATDAU == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_THOIGIAN_BATDAU));
            }
            if ((Original_THOIGIAN_KETTHUC == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_THOIGIAN_KETTHUC));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_CUOCTHU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_CUOCTHU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MACUOCGOI, string MADV, string SOMAYGOI, string THOIGIAN_BATDAU, string THOIGIAN_KETTHUC, System.Nullable<int> SANLUONG, System.Nullable<decimal> CUOCTHU) {
            if ((MACUOCGOI == null)) {
                throw new System.ArgumentNullException("MACUOCGOI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MACUOCGOI));
            }
            if ((MADV == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MADV));
            }
            if ((SOMAYGOI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SOMAYGOI));
            }
            if ((THOIGIAN_BATDAU == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(THOIGIAN_BATDAU));
            }
            if ((THOIGIAN_KETTHUC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(THOIGIAN_KETTHUC));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((CUOCTHU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(CUOCTHU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MACUOCGOI, string MADV, string SOMAYGOI, string THOIGIAN_BATDAU, string THOIGIAN_KETTHUC, System.Nullable<int> SANLUONG, System.Nullable<decimal> CUOCTHU, string Original_MACUOCGOI, string Original_MADV, string Original_SOMAYGOI, string Original_THOIGIAN_BATDAU, string Original_THOIGIAN_KETTHUC, System.Nullable<int> Original_SANLUONG, System.Nullable<decimal> Original_CUOCTHU) {
            if ((MACUOCGOI == null)) {
                throw new System.ArgumentNullException("MACUOCGOI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MACUOCGOI));
            }
            if ((MADV == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MADV));
            }
            if ((SOMAYGOI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SOMAYGOI));
            }
            if ((THOIGIAN_BATDAU == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(THOIGIAN_BATDAU));
            }
            if ((THOIGIAN_KETTHUC == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(THOIGIAN_KETTHUC));
            }
            if ((SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((CUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(CUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_MACUOCGOI == null)) {
                throw new System.ArgumentNullException("Original_MACUOCGOI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MACUOCGOI));
            }
            if ((Original_MADV == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_MADV));
            }
            if ((Original_SOMAYGOI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SOMAYGOI));
            }
            if ((Original_THOIGIAN_BATDAU == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_THOIGIAN_BATDAU));
            }
            if ((Original_THOIGIAN_KETTHUC == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_THOIGIAN_KETTHUC));
            }
            if ((Original_SANLUONG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_SANLUONG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_CUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_CUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DANGHOATDONGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DANGHOATDONGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DANGHOATDONG";
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("CUOCTHANG", "CUOCTHANG");
            tableMapping.ColumnMappings.Add("TIENDICHVU", "TIENDICHVU");
            tableMapping.ColumnMappings.Add("TIENTHUE_VAT", "TIENTHUE_VAT");
            tableMapping.ColumnMappings.Add("TONGCUOCTHU", "TONGCUOCTHU");
            tableMapping.ColumnMappings.Add("NGAYNOP", "NGAYNOP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DANGHOATDONG] WHERE (([TEL] = @Original_TEL) AND ([CUOCTHANG] = @Original_CUOCTHANG) AND ([TIENDICHVU] = @Original_TIENDICHVU) AND ((@IsNull_TIENTHUE_VAT = 1 AND [TIENTHUE_VAT] IS NULL) OR ([TIENTHUE_VAT] = @Original_TIENTHUE_VAT)) AND ((@IsNull_TONGCUOCTHU = 1 AND [TONGCUOCTHU] IS NULL) OR ([TONGCUOCTHU] = @Original_TONGCUOCTHU)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCTHANG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHANG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENTHUE_VAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DANGHOATDONG] ([TEL], [CUOCTHANG], [TIENDICHVU], [TIENTHUE_VAT], [TONGCUOCTHU], [NGAYNOP]) VALUES (@TEL, @CUOCTHANG, @TIENDICHVU, @TIENTHUE_VAT, @TONGCUOCTHU, @NGAYNOP);
SELECT TEL, CUOCTHANG, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, NGAYNOP FROM DANGHOATDONG WHERE (CUOCTHANG = @CUOCTHANG) AND (TEL = @TEL)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCTHANG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHANG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DANGHOATDONG] SET [TEL] = @TEL, [CUOCTHANG] = @CUOCTHANG, [TIENDICHVU] = @TIENDICHVU, [TIENTHUE_VAT] = @TIENTHUE_VAT, [TONGCUOCTHU] = @TONGCUOCTHU, [NGAYNOP] = @NGAYNOP WHERE (([TEL] = @Original_TEL) AND ([CUOCTHANG] = @Original_CUOCTHANG) AND ([TIENDICHVU] = @Original_TIENDICHVU) AND ((@IsNull_TIENTHUE_VAT = 1 AND [TIENTHUE_VAT] IS NULL) OR ([TIENTHUE_VAT] = @Original_TIENTHUE_VAT)) AND ((@IsNull_TONGCUOCTHU = 1 AND [TONGCUOCTHU] IS NULL) OR ([TONGCUOCTHU] = @Original_TONGCUOCTHU)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)));
SELECT TEL, CUOCTHANG, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, NGAYNOP FROM DANGHOATDONG WHERE (CUOCTHANG = @CUOCTHANG) AND (TEL = @TEL)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCTHANG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHANG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCTHANG", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCTHANG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENDICHVU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENDICHVU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TIENTHUE_VAT", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TIENTHUE_VAT", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TIENTHUE_VAT", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TONGCUOCTHU", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TONGCUOCTHU", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "TONGCUOCTHU", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TEL, CUOCTHANG, TIENDICHVU, TIENTHUE_VAT, TONGCUOCTHU, NGAYNOP FROM dbo.DA" +
                "NGHOATDONG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.DANGHOATDONGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.DANGHOATDONGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.DANGHOATDONGDataTable dataTable = new QLBD_DataDataSet.DANGHOATDONGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.DANGHOATDONGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DANGHOATDONG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TEL, string Original_CUOCTHANG, decimal Original_TIENDICHVU, System.Nullable<decimal> Original_TIENTHUE_VAT, System.Nullable<decimal> Original_TONGCUOCTHU, string Original_NGAYNOP) {
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TEL));
            }
            if ((Original_CUOCTHANG == null)) {
                throw new System.ArgumentNullException("Original_CUOCTHANG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CUOCTHANG));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TIENDICHVU));
            if ((Original_TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_TONGCUOCTHU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEL, string CUOCTHANG, decimal TIENDICHVU, System.Nullable<decimal> TIENTHUE_VAT, System.Nullable<decimal> TONGCUOCTHU, string NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((CUOCTHANG == null)) {
                throw new System.ArgumentNullException("CUOCTHANG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUOCTHANG));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(TIENDICHVU));
            if ((TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TONGCUOCTHU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((NGAYNOP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEL, string CUOCTHANG, decimal TIENDICHVU, System.Nullable<decimal> TIENTHUE_VAT, System.Nullable<decimal> TONGCUOCTHU, string NGAYNOP, string Original_TEL, string Original_CUOCTHANG, decimal Original_TIENDICHVU, System.Nullable<decimal> Original_TIENTHUE_VAT, System.Nullable<decimal> Original_TONGCUOCTHU, string Original_NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((CUOCTHANG == null)) {
                throw new System.ArgumentNullException("CUOCTHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUOCTHANG));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(TIENDICHVU));
            if ((TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((TONGCUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NGAYNOP));
            }
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TEL));
            }
            if ((Original_CUOCTHANG == null)) {
                throw new System.ArgumentNullException("Original_CUOCTHANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CUOCTHANG));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_TIENDICHVU));
            if ((Original_TIENTHUE_VAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_TIENTHUE_VAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_TONGCUOCTHU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_TONGCUOCTHU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DICHVUTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DICHVUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DICHVU";
            tableMapping.ColumnMappings.Add("MADV", "MADV");
            tableMapping.ColumnMappings.Add("LOAIDV", "LOAIDV");
            tableMapping.ColumnMappings.Add("CUOCDV", "CUOCDV");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DICHVU] WHERE (([MADV] = @Original_MADV) AND ((@IsNull_LOAIDV " +
                "= 1 AND [LOAIDV] IS NULL) OR ([LOAIDV] = @Original_LOAIDV)) AND ((@IsNull_CUOCDV" +
                " = 1 AND [CUOCDV] IS NULL) OR ([CUOCDV] = @Original_CUOCDV)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOAIDV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOAIDV", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOCDV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCDV", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DICHVU] ([MADV], [LOAIDV], [CUOCDV]) VALUES (@MADV, @LOAIDV, @" +
                "CUOCDV);\r\nSELECT MADV, LOAIDV, CUOCDV FROM DICHVU WHERE (MADV = @MADV)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOAIDV", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCDV", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DICHVU] SET [MADV] = @MADV, [LOAIDV] = @LOAIDV, [CUOCDV] = @CUOCDV WHERE (([MADV] = @Original_MADV) AND ((@IsNull_LOAIDV = 1 AND [LOAIDV] IS NULL) OR ([LOAIDV] = @Original_LOAIDV)) AND ((@IsNull_CUOCDV = 1 AND [CUOCDV] IS NULL) OR ([CUOCDV] = @Original_CUOCDV)));
SELECT MADV, LOAIDV, CUOCDV FROM DICHVU WHERE (MADV = @MADV)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOAIDV", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CUOCDV", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MADV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MADV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOAIDV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOAIDV", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAIDV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_CUOCDV", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CUOCDV", System.Data.SqlDbType.Real, 0, System.Data.ParameterDirection.Input, 0, 0, "CUOCDV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MADV, LOAIDV, CUOCDV FROM dbo.DICHVU";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.DICHVUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.DICHVUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.DICHVUDataTable dataTable = new QLBD_DataDataSet.DICHVUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.DICHVUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DICHVU");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MADV, string Original_LOAIDV, System.Nullable<float> Original_CUOCDV) {
            if ((Original_MADV == null)) {
                throw new System.ArgumentNullException("Original_MADV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MADV));
            }
            if ((Original_LOAIDV == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOAIDV));
            }
            if ((Original_CUOCDV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((float)(Original_CUOCDV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MADV, string LOAIDV, System.Nullable<float> CUOCDV) {
            if ((MADV == null)) {
                throw new System.ArgumentNullException("MADV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MADV));
            }
            if ((LOAIDV == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOAIDV));
            }
            if ((CUOCDV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((float)(CUOCDV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MADV, string LOAIDV, System.Nullable<float> CUOCDV, string Original_MADV, string Original_LOAIDV, System.Nullable<float> Original_CUOCDV) {
            if ((MADV == null)) {
                throw new System.ArgumentNullException("MADV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MADV));
            }
            if ((LOAIDV == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LOAIDV));
            }
            if ((CUOCDV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(CUOCDV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MADV == null)) {
                throw new System.ArgumentNullException("Original_MADV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MADV));
            }
            if ((Original_LOAIDV == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_LOAIDV));
            }
            if ((Original_CUOCDV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(Original_CUOCDV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DICHVUTHEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DICHVUTHEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DICHVUTHEM";
            tableMapping.ColumnMappings.Add("MA_DVTHEM", "MA_DVTHEM");
            tableMapping.ColumnMappings.Add("LOAI_DVTHEM", "LOAI_DVTHEM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DICHVUTHEM] WHERE (([MA_DVTHEM] = @Original_MA_DVTHEM) AND ((@" +
                "IsNull_LOAI_DVTHEM = 1 AND [LOAI_DVTHEM] IS NULL) OR ([LOAI_DVTHEM] = @Original_" +
                "LOAI_DVTHEM)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOAI_DVTHEM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOAI_DVTHEM", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DICHVUTHEM] ([MA_DVTHEM], [LOAI_DVTHEM]) VALUES (@MA_DVTHEM, @" +
                "LOAI_DVTHEM);\r\nSELECT MA_DVTHEM, LOAI_DVTHEM FROM DICHVUTHEM WHERE (MA_DVTHEM = " +
                "@MA_DVTHEM)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOAI_DVTHEM", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DICHVUTHEM] SET [MA_DVTHEM] = @MA_DVTHEM, [LOAI_DVTHEM] = @LOAI_DVTHEM WHERE (([MA_DVTHEM] = @Original_MA_DVTHEM) AND ((@IsNull_LOAI_DVTHEM = 1 AND [LOAI_DVTHEM] IS NULL) OR ([LOAI_DVTHEM] = @Original_LOAI_DVTHEM)));
SELECT MA_DVTHEM, LOAI_DVTHEM FROM DICHVUTHEM WHERE (MA_DVTHEM = @MA_DVTHEM)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LOAI_DVTHEM", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MA_DVTHEM", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MA_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LOAI_DVTHEM", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LOAI_DVTHEM", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LOAI_DVTHEM", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MA_DVTHEM, LOAI_DVTHEM FROM dbo.DICHVUTHEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.DICHVUTHEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.DICHVUTHEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.DICHVUTHEMDataTable dataTable = new QLBD_DataDataSet.DICHVUTHEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.DICHVUTHEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "DICHVUTHEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MA_DVTHEM, string Original_LOAI_DVTHEM) {
            if ((Original_MA_DVTHEM == null)) {
                throw new System.ArgumentNullException("Original_MA_DVTHEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MA_DVTHEM));
            }
            if ((Original_LOAI_DVTHEM == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOAI_DVTHEM));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MA_DVTHEM, string LOAI_DVTHEM) {
            if ((MA_DVTHEM == null)) {
                throw new System.ArgumentNullException("MA_DVTHEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MA_DVTHEM));
            }
            if ((LOAI_DVTHEM == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOAI_DVTHEM));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MA_DVTHEM, string LOAI_DVTHEM, string Original_MA_DVTHEM, string Original_LOAI_DVTHEM) {
            if ((MA_DVTHEM == null)) {
                throw new System.ArgumentNullException("MA_DVTHEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MA_DVTHEM));
            }
            if ((LOAI_DVTHEM == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LOAI_DVTHEM));
            }
            if ((Original_MA_DVTHEM == null)) {
                throw new System.ArgumentNullException("Original_MA_DVTHEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MA_DVTHEM));
            }
            if ((Original_LOAI_DVTHEM == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_LOAI_DVTHEM));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACHHANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACHHANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACHHANG";
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("HOTEN", "HOTEN");
            tableMapping.ColumnMappings.Add("DIACHI", "DIACHI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[KHACHHANG] WHERE (([TEL] = @Original_TEL) AND ((@IsNull_HOTEN " +
                "= 1 AND [HOTEN] IS NULL) OR ([HOTEN] = @Original_HOTEN)) AND ((@IsNull_DIACHI = " +
                "1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[KHACHHANG] ([TEL], [HOTEN], [DIACHI]) VALUES (@TEL, @HOTEN, @D" +
                "IACHI);\r\nSELECT TEL, HOTEN, DIACHI FROM KHACHHANG WHERE (TEL = @TEL)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[KHACHHANG] SET [TEL] = @TEL, [HOTEN] = @HOTEN, [DIACHI] = @DIACHI WHERE (([TEL] = @Original_TEL) AND ((@IsNull_HOTEN = 1 AND [HOTEN] IS NULL) OR ([HOTEN] = @Original_HOTEN)) AND ((@IsNull_DIACHI = 1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)));
SELECT TEL, HOTEN, DIACHI FROM KHACHHANG WHERE (TEL = @TEL)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TEL, HOTEN, DIACHI FROM dbo.KHACHHANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.KHACHHANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.KHACHHANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.KHACHHANGDataTable dataTable = new QLBD_DataDataSet.KHACHHANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.KHACHHANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "KHACHHANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TEL, string Original_HOTEN, string Original_DIACHI) {
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TEL));
            }
            if ((Original_HOTEN == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_HOTEN));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DIACHI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEL, string HOTEN, string DIACHI) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((HOTEN == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HOTEN));
            }
            if ((DIACHI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEL, string HOTEN, string DIACHI, string Original_TEL, string Original_HOTEN, string Original_DIACHI) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((HOTEN == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HOTEN));
            }
            if ((DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TEL));
            }
            if ((Original_HOTEN == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_HOTEN));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_DIACHI));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NGUOIGUITableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NGUOIGUITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NGUOIGUI";
            tableMapping.ColumnMappings.Add("MANGUOIGUI", "MANGUOIGUI");
            tableMapping.ColumnMappings.Add("HOTEN_NG", "HOTEN_NG");
            tableMapping.ColumnMappings.Add("DIACHI", "DIACHI");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[NGUOIGUI] WHERE (([MANGUOIGUI] = @Original_MANGUOIGUI) AND ((@IsNull_HOTEN_NG = 1 AND [HOTEN_NG] IS NULL) OR ([HOTEN_NG] = @Original_HOTEN_NG)) AND ((@IsNull_DIACHI = 1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN_NG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN_NG", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TEL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NGUOIGUI] ([MANGUOIGUI], [HOTEN_NG], [DIACHI], [TEL]) VALUES (" +
                "@MANGUOIGUI, @HOTEN_NG, @DIACHI, @TEL);\r\nSELECT MANGUOIGUI, HOTEN_NG, DIACHI, TE" +
                "L FROM NGUOIGUI WHERE (MANGUOIGUI = @MANGUOIGUI)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN_NG", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[NGUOIGUI] SET [MANGUOIGUI] = @MANGUOIGUI, [HOTEN_NG] = @HOTEN_NG, [DIACHI] = @DIACHI, [TEL] = @TEL WHERE (([MANGUOIGUI] = @Original_MANGUOIGUI) AND ((@IsNull_HOTEN_NG = 1 AND [HOTEN_NG] IS NULL) OR ([HOTEN_NG] = @Original_HOTEN_NG)) AND ((@IsNull_DIACHI = 1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)));
SELECT MANGUOIGUI, HOTEN_NG, DIACHI, TEL FROM NGUOIGUI WHERE (MANGUOIGUI = @MANGUOIGUI)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN_NG", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOIGUI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOIGUI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN_NG", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN_NG", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NG", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TEL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MANGUOIGUI, HOTEN_NG, DIACHI, TEL FROM dbo.NGUOIGUI";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.NGUOIGUIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.NGUOIGUIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.NGUOIGUIDataTable dataTable = new QLBD_DataDataSet.NGUOIGUIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.NGUOIGUIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NGUOIGUI");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MANGUOIGUI, string Original_HOTEN_NG, string Original_DIACHI, string Original_TEL) {
            if ((Original_MANGUOIGUI == null)) {
                throw new System.ArgumentNullException("Original_MANGUOIGUI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MANGUOIGUI));
            }
            if ((Original_HOTEN_NG == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_HOTEN_NG));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TEL == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MANGUOIGUI, string HOTEN_NG, string DIACHI, string TEL) {
            if ((MANGUOIGUI == null)) {
                throw new System.ArgumentNullException("MANGUOIGUI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MANGUOIGUI));
            }
            if ((HOTEN_NG == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HOTEN_NG));
            }
            if ((DIACHI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            if ((TEL == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MANGUOIGUI, string HOTEN_NG, string DIACHI, string TEL, string Original_MANGUOIGUI, string Original_HOTEN_NG, string Original_DIACHI, string Original_TEL) {
            if ((MANGUOIGUI == null)) {
                throw new System.ArgumentNullException("MANGUOIGUI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MANGUOIGUI));
            }
            if ((HOTEN_NG == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HOTEN_NG));
            }
            if ((DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            if ((TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TEL));
            }
            if ((Original_MANGUOIGUI == null)) {
                throw new System.ArgumentNullException("Original_MANGUOIGUI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MANGUOIGUI));
            }
            if ((Original_HOTEN_NG == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_HOTEN_NG));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NGUOINHANTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NGUOINHANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NGUOINHAN";
            tableMapping.ColumnMappings.Add("MANGUOINHAN", "MANGUOINHAN");
            tableMapping.ColumnMappings.Add("HOTEN_NN", "HOTEN_NN");
            tableMapping.ColumnMappings.Add("DIACHI", "DIACHI");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[NGUOINHAN] WHERE (([MANGUOINHAN] = @Original_MANGUOINHAN) AND ((@IsNull_HOTEN_NN = 1 AND [HOTEN_NN] IS NULL) OR ([HOTEN_NN] = @Original_HOTEN_NN)) AND ((@IsNull_DIACHI = 1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN_NN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN_NN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TEL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NGUOINHAN] ([MANGUOINHAN], [HOTEN_NN], [DIACHI], [TEL]) VALUES" +
                " (@MANGUOINHAN, @HOTEN_NN, @DIACHI, @TEL);\r\nSELECT MANGUOINHAN, HOTEN_NN, DIACHI" +
                ", TEL FROM NGUOINHAN WHERE (MANGUOINHAN = @MANGUOINHAN)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN_NN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[NGUOINHAN] SET [MANGUOINHAN] = @MANGUOINHAN, [HOTEN_NN] = @HOTEN_NN, [DIACHI] = @DIACHI, [TEL] = @TEL WHERE (([MANGUOINHAN] = @Original_MANGUOINHAN) AND ((@IsNull_HOTEN_NN = 1 AND [HOTEN_NN] IS NULL) OR ([HOTEN_NN] = @Original_HOTEN_NN)) AND ((@IsNull_DIACHI = 1 AND [DIACHI] IS NULL) OR ([DIACHI] = @Original_DIACHI)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)));
SELECT MANGUOINHAN, HOTEN_NN, DIACHI, TEL FROM NGUOINHAN WHERE (MANGUOINHAN = @MANGUOINHAN)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HOTEN_NN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MANGUOINHAN", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MANGUOINHAN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HOTEN_NN", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HOTEN_NN", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HOTEN_NN", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DIACHI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DIACHI", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DIACHI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TEL", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MANGUOINHAN, HOTEN_NN, DIACHI, TEL FROM dbo.NGUOINHAN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.NGUOINHANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.NGUOINHANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.NGUOINHANDataTable dataTable = new QLBD_DataDataSet.NGUOINHANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.NGUOINHANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NGUOINHAN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MANGUOINHAN, string Original_HOTEN_NN, string Original_DIACHI, string Original_TEL) {
            if ((Original_MANGUOINHAN == null)) {
                throw new System.ArgumentNullException("Original_MANGUOINHAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MANGUOINHAN));
            }
            if ((Original_HOTEN_NN == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_HOTEN_NN));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TEL == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MANGUOINHAN, string HOTEN_NN, string DIACHI, string TEL) {
            if ((MANGUOINHAN == null)) {
                throw new System.ArgumentNullException("MANGUOINHAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MANGUOINHAN));
            }
            if ((HOTEN_NN == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HOTEN_NN));
            }
            if ((DIACHI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            if ((TEL == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MANGUOINHAN, string HOTEN_NN, string DIACHI, string TEL, string Original_MANGUOINHAN, string Original_HOTEN_NN, string Original_DIACHI, string Original_TEL) {
            if ((MANGUOINHAN == null)) {
                throw new System.ArgumentNullException("MANGUOINHAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MANGUOINHAN));
            }
            if ((HOTEN_NN == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HOTEN_NN));
            }
            if ((DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DIACHI));
            }
            if ((TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TEL));
            }
            if ((Original_MANGUOINHAN == null)) {
                throw new System.ArgumentNullException("Original_MANGUOINHAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MANGUOINHAN));
            }
            if ((Original_HOTEN_NN == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_HOTEN_NN));
            }
            if ((Original_DIACHI == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_DIACHI));
            }
            if ((Original_TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TEL));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TAMNGUNGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TAMNGUNGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TAMNGUNG";
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("THANGNGUNGSD", "THANGNGUNGSD");
            tableMapping.ColumnMappings.Add("PHIKHOIPHUC", "PHIKHOIPHUC");
            tableMapping.ColumnMappings.Add("TRANGTHAI", "TRANGTHAI");
            tableMapping.ColumnMappings.Add("NGAYNOP", "NGAYNOP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TAMNGUNG] WHERE (([TEL] = @Original_TEL) AND ([THANGNGUNGSD] = @Original_THANGNGUNGSD) AND ((@IsNull_PHIKHOIPHUC = 1 AND [PHIKHOIPHUC] IS NULL) OR ([PHIKHOIPHUC] = @Original_PHIKHOIPHUC)) AND ((@IsNull_TRANGTHAI = 1 AND [TRANGTHAI] IS NULL) OR ([TRANGTHAI] = @Original_TRANGTHAI)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THANGNGUNGSD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNGUNGSD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PHIKHOIPHUC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PHIKHOIPHUC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANGTHAI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TAMNGUNG] ([TEL], [THANGNGUNGSD], [PHIKHOIPHUC], [TRANGTHAI], [NGAYNOP]) VALUES (@TEL, @THANGNGUNGSD, @PHIKHOIPHUC, @TRANGTHAI, @NGAYNOP);
SELECT TEL, THANGNGUNGSD, PHIKHOIPHUC, TRANGTHAI, NGAYNOP FROM TAMNGUNG WHERE (TEL = @TEL) AND (THANGNGUNGSD = @THANGNGUNGSD)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THANGNGUNGSD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNGUNGSD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PHIKHOIPHUC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TAMNGUNG] SET [TEL] = @TEL, [THANGNGUNGSD] = @THANGNGUNGSD, [PHIKHOIPHUC] = @PHIKHOIPHUC, [TRANGTHAI] = @TRANGTHAI, [NGAYNOP] = @NGAYNOP WHERE (([TEL] = @Original_TEL) AND ([THANGNGUNGSD] = @Original_THANGNGUNGSD) AND ((@IsNull_PHIKHOIPHUC = 1 AND [PHIKHOIPHUC] IS NULL) OR ([PHIKHOIPHUC] = @Original_PHIKHOIPHUC)) AND ((@IsNull_TRANGTHAI = 1 AND [TRANGTHAI] IS NULL) OR ([TRANGTHAI] = @Original_TRANGTHAI)) AND ((@IsNull_NGAYNOP = 1 AND [NGAYNOP] IS NULL) OR ([NGAYNOP] = @Original_NGAYNOP)));
SELECT TEL, THANGNGUNGSD, PHIKHOIPHUC, TRANGTHAI, NGAYNOP FROM TAMNGUNG WHERE (TEL = @TEL) AND (THANGNGUNGSD = @THANGNGUNGSD)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@THANGNGUNGSD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNGUNGSD", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PHIKHOIPHUC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TEL", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TEL", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_THANGNGUNGSD", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "THANGNGUNGSD", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PHIKHOIPHUC", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PHIKHOIPHUC", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "PHIKHOIPHUC", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TRANGTHAI", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TRANGTHAI", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TRANGTHAI", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NGAYNOP", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NGAYNOP", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NGAYNOP", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QLBDDemo.Properties.Settings.Default.QLBD_DataConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TEL, THANGNGUNGSD, PHIKHOIPHUC, TRANGTHAI, NGAYNOP FROM dbo.TAMNGUNG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QLBD_DataDataSet.TAMNGUNGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QLBD_DataDataSet.TAMNGUNGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QLBD_DataDataSet.TAMNGUNGDataTable dataTable = new QLBD_DataDataSet.TAMNGUNGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet.TAMNGUNGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(QLBD_DataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TAMNGUNG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TEL, string Original_THANGNGUNGSD, System.Nullable<decimal> Original_PHIKHOIPHUC, string Original_TRANGTHAI, string Original_NGAYNOP) {
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TEL));
            }
            if ((Original_THANGNGUNGSD == null)) {
                throw new System.ArgumentNullException("Original_THANGNGUNGSD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_THANGNGUNGSD));
            }
            if ((Original_PHIKHOIPHUC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PHIKHOIPHUC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_TRANGTHAI == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TRANGTHAI));
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TEL, string THANGNGUNGSD, System.Nullable<decimal> PHIKHOIPHUC, string TRANGTHAI, string NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((THANGNGUNGSD == null)) {
                throw new System.ArgumentNullException("THANGNGUNGSD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(THANGNGUNGSD));
            }
            if ((PHIKHOIPHUC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PHIKHOIPHUC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANGTHAI == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TRANGTHAI));
            }
            if ((NGAYNOP == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TEL, string THANGNGUNGSD, System.Nullable<decimal> PHIKHOIPHUC, string TRANGTHAI, string NGAYNOP, string Original_TEL, string Original_THANGNGUNGSD, System.Nullable<decimal> Original_PHIKHOIPHUC, string Original_TRANGTHAI, string Original_NGAYNOP) {
            if ((TEL == null)) {
                throw new System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TEL));
            }
            if ((THANGNGUNGSD == null)) {
                throw new System.ArgumentNullException("THANGNGUNGSD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(THANGNGUNGSD));
            }
            if ((PHIKHOIPHUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PHIKHOIPHUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((TRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TRANGTHAI));
            }
            if ((NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NGAYNOP));
            }
            if ((Original_TEL == null)) {
                throw new System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_TEL));
            }
            if ((Original_THANGNGUNGSD == null)) {
                throw new System.ArgumentNullException("Original_THANGNGUNGSD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_THANGNGUNGSD));
            }
            if ((Original_PHIKHOIPHUC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_PHIKHOIPHUC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_TRANGTHAI == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TRANGTHAI));
            }
            if ((Original_NGAYNOP == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NGAYNOP));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591