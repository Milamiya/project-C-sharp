//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QuanLyTienGuiTietKiem.DataSet {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : System.Data.DataSet {
        
        private CHI_TIET_PSGDDataTable tableCHI_TIET_PSGD;
        
        private DM_KY_LAI_TIET_KIEMDataTable tableDM_KY_LAI_TIET_KIEM;
        
        private DM_LOAI_GIAO_DICHDataTable tableDM_LOAI_GIAO_DICH;
        
        private DM_LOAI_TIENDataTable tableDM_LOAI_TIEN;
        
        private DM_TAI_KHOANDataTable tableDM_TAI_KHOAN;
        
        private GIAO_DICH_VIENDataTable tableGIAO_DICH_VIEN;
        
        private KHACH_HANGDataTable tableKHACH_HANG;
        
        private LAI_SUAT_TIET_KIEMDataTable tableLAI_SUAT_TIET_KIEM;
        
        private LOAI_TIET_KIEMDataTable tableLOAI_TIET_KIEM;
        
        private NGAY_GIAO_DICHDataTable tableNGAY_GIAO_DICH;
        
        private NHAN_VIENDataTable tableNHAN_VIEN;
        
        private NHOM_NGUOI_DUNGDataTable tableNHOM_NGUOI_DUNG;
        
        private PHAN_NHOMDataTable tablePHAN_NHOM;
        
        private PHAN_QUYENDataTable tablePHAN_QUYEN;
        
        private PHONG_GIAO_DICHDataTable tablePHONG_GIAO_DICH;
        
        private PS_TIET_KIEMDataTable tablePS_TIET_KIEM;
        
        private QUAY_GIAO_DICHDataTable tableQUAY_GIAO_DICH;
        
        private QUYENDataTable tableQUYEN;
        
        private SO_DU_TIET_KIEMDataTable tableSO_DU_TIET_KIEM;
        
        private SO_TIET_KIEMDataTable tableSO_TIET_KIEM;
        
        private TAI_KHOANDataTable tableTAI_KHOAN;
        
        private System.Data.DataRelation relationF3_CHI_TIET_PSGD;
        
        private System.Data.DataRelation relationF4_CHI_TIET_PSGD;
        
        private System.Data.DataRelation relationF1_LAI_SUAT_TIET_KIEM;
        
        private System.Data.DataRelation relationF_LOAI_TIET_KIEM;
        
        private System.Data.DataRelation relationF1_LOAI_TIET_KIEM;
        
        private System.Data.DataRelation relationF2_LOAI_TIET_KIEM;
        
        private System.Data.DataRelation relationF1_PHAN_NHOM;
        
        private System.Data.DataRelation relationF2_PHAN_NHOM;
        
        private System.Data.DataRelation relationF1_PHAN_QUYEN;
        
        private System.Data.DataRelation relationF1_NHAN_VIEN;
        
        private System.Data.DataRelation relationF2_CHI_TIET_PSGD;
        
        private System.Data.DataRelation relationF1_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF4_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF5_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF6_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF3_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF_QUAY_GIAO_DICH;
        
        private System.Data.DataRelation relationF_PHAN_QUYEN;
        
        private System.Data.DataRelation relationF2_SO_DU_TIET_KIEM;
        
        private System.Data.DataRelation relationF2_PS_TIET_KIEM;
        
        private System.Data.DataRelation relationF1_SO_DU_TIET_KIEM;
        
        private System.Data.DataRelation relationF_SO_TIET_KIEM;
        
        private System.Data.DataRelation relationF1_SO_TIET_KIEM;
        
        private System.Data.DataRelation relationF_TAI_KHOAN;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CHI_TIET_PSGD"] != null)) {
                    base.Tables.Add(new CHI_TIET_PSGDDataTable(ds.Tables["CHI_TIET_PSGD"]));
                }
                if ((ds.Tables["DM_KY_LAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new DM_KY_LAI_TIET_KIEMDataTable(ds.Tables["DM_KY_LAI_TIET_KIEM"]));
                }
                if ((ds.Tables["DM_LOAI_GIAO_DICH"] != null)) {
                    base.Tables.Add(new DM_LOAI_GIAO_DICHDataTable(ds.Tables["DM_LOAI_GIAO_DICH"]));
                }
                if ((ds.Tables["DM_LOAI_TIEN"] != null)) {
                    base.Tables.Add(new DM_LOAI_TIENDataTable(ds.Tables["DM_LOAI_TIEN"]));
                }
                if ((ds.Tables["DM_TAI_KHOAN"] != null)) {
                    base.Tables.Add(new DM_TAI_KHOANDataTable(ds.Tables["DM_TAI_KHOAN"]));
                }
                if ((ds.Tables["GIAO_DICH_VIEN"] != null)) {
                    base.Tables.Add(new GIAO_DICH_VIENDataTable(ds.Tables["GIAO_DICH_VIEN"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LAI_SUAT_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LAI_SUAT_TIET_KIEMDataTable(ds.Tables["LAI_SUAT_TIET_KIEM"]));
                }
                if ((ds.Tables["LOAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LOAI_TIET_KIEMDataTable(ds.Tables["LOAI_TIET_KIEM"]));
                }
                if ((ds.Tables["NGAY_GIAO_DICH"] != null)) {
                    base.Tables.Add(new NGAY_GIAO_DICHDataTable(ds.Tables["NGAY_GIAO_DICH"]));
                }
                if ((ds.Tables["NHAN_VIEN"] != null)) {
                    base.Tables.Add(new NHAN_VIENDataTable(ds.Tables["NHAN_VIEN"]));
                }
                if ((ds.Tables["NHOM_NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new NHOM_NGUOI_DUNGDataTable(ds.Tables["NHOM_NGUOI_DUNG"]));
                }
                if ((ds.Tables["PHAN_NHOM"] != null)) {
                    base.Tables.Add(new PHAN_NHOMDataTable(ds.Tables["PHAN_NHOM"]));
                }
                if ((ds.Tables["PHAN_QUYEN"] != null)) {
                    base.Tables.Add(new PHAN_QUYENDataTable(ds.Tables["PHAN_QUYEN"]));
                }
                if ((ds.Tables["PHONG_GIAO_DICH"] != null)) {
                    base.Tables.Add(new PHONG_GIAO_DICHDataTable(ds.Tables["PHONG_GIAO_DICH"]));
                }
                if ((ds.Tables["PS_TIET_KIEM"] != null)) {
                    base.Tables.Add(new PS_TIET_KIEMDataTable(ds.Tables["PS_TIET_KIEM"]));
                }
                if ((ds.Tables["QUAY_GIAO_DICH"] != null)) {
                    base.Tables.Add(new QUAY_GIAO_DICHDataTable(ds.Tables["QUAY_GIAO_DICH"]));
                }
                if ((ds.Tables["QUYEN"] != null)) {
                    base.Tables.Add(new QUYENDataTable(ds.Tables["QUYEN"]));
                }
                if ((ds.Tables["SO_DU_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_DU_TIET_KIEMDataTable(ds.Tables["SO_DU_TIET_KIEM"]));
                }
                if ((ds.Tables["SO_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_TIET_KIEMDataTable(ds.Tables["SO_TIET_KIEM"]));
                }
                if ((ds.Tables["TAI_KHOAN"] != null)) {
                    base.Tables.Add(new TAI_KHOANDataTable(ds.Tables["TAI_KHOAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHI_TIET_PSGDDataTable CHI_TIET_PSGD {
            get {
                return this.tableCHI_TIET_PSGD;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DM_KY_LAI_TIET_KIEMDataTable DM_KY_LAI_TIET_KIEM {
            get {
                return this.tableDM_KY_LAI_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DM_LOAI_GIAO_DICHDataTable DM_LOAI_GIAO_DICH {
            get {
                return this.tableDM_LOAI_GIAO_DICH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DM_LOAI_TIENDataTable DM_LOAI_TIEN {
            get {
                return this.tableDM_LOAI_TIEN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DM_TAI_KHOANDataTable DM_TAI_KHOAN {
            get {
                return this.tableDM_TAI_KHOAN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GIAO_DICH_VIENDataTable GIAO_DICH_VIEN {
            get {
                return this.tableGIAO_DICH_VIEN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KHACH_HANGDataTable KHACH_HANG {
            get {
                return this.tableKHACH_HANG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LAI_SUAT_TIET_KIEMDataTable LAI_SUAT_TIET_KIEM {
            get {
                return this.tableLAI_SUAT_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOAI_TIET_KIEMDataTable LOAI_TIET_KIEM {
            get {
                return this.tableLOAI_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NGAY_GIAO_DICHDataTable NGAY_GIAO_DICH {
            get {
                return this.tableNGAY_GIAO_DICH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NHAN_VIENDataTable NHAN_VIEN {
            get {
                return this.tableNHAN_VIEN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NHOM_NGUOI_DUNGDataTable NHOM_NGUOI_DUNG {
            get {
                return this.tableNHOM_NGUOI_DUNG;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHAN_NHOMDataTable PHAN_NHOM {
            get {
                return this.tablePHAN_NHOM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHAN_QUYENDataTable PHAN_QUYEN {
            get {
                return this.tablePHAN_QUYEN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PHONG_GIAO_DICHDataTable PHONG_GIAO_DICH {
            get {
                return this.tablePHONG_GIAO_DICH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PS_TIET_KIEMDataTable PS_TIET_KIEM {
            get {
                return this.tablePS_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUAY_GIAO_DICHDataTable QUAY_GIAO_DICH {
            get {
                return this.tableQUAY_GIAO_DICH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUYENDataTable QUYEN {
            get {
                return this.tableQUYEN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SO_DU_TIET_KIEMDataTable SO_DU_TIET_KIEM {
            get {
                return this.tableSO_DU_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SO_TIET_KIEMDataTable SO_TIET_KIEM {
            get {
                return this.tableSO_TIET_KIEM;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAI_KHOANDataTable TAI_KHOAN {
            get {
                return this.tableTAI_KHOAN;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CHI_TIET_PSGD"] != null)) {
                    base.Tables.Add(new CHI_TIET_PSGDDataTable(ds.Tables["CHI_TIET_PSGD"]));
                }
                if ((ds.Tables["DM_KY_LAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new DM_KY_LAI_TIET_KIEMDataTable(ds.Tables["DM_KY_LAI_TIET_KIEM"]));
                }
                if ((ds.Tables["DM_LOAI_GIAO_DICH"] != null)) {
                    base.Tables.Add(new DM_LOAI_GIAO_DICHDataTable(ds.Tables["DM_LOAI_GIAO_DICH"]));
                }
                if ((ds.Tables["DM_LOAI_TIEN"] != null)) {
                    base.Tables.Add(new DM_LOAI_TIENDataTable(ds.Tables["DM_LOAI_TIEN"]));
                }
                if ((ds.Tables["DM_TAI_KHOAN"] != null)) {
                    base.Tables.Add(new DM_TAI_KHOANDataTable(ds.Tables["DM_TAI_KHOAN"]));
                }
                if ((ds.Tables["GIAO_DICH_VIEN"] != null)) {
                    base.Tables.Add(new GIAO_DICH_VIENDataTable(ds.Tables["GIAO_DICH_VIEN"]));
                }
                if ((ds.Tables["KHACH_HANG"] != null)) {
                    base.Tables.Add(new KHACH_HANGDataTable(ds.Tables["KHACH_HANG"]));
                }
                if ((ds.Tables["LAI_SUAT_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LAI_SUAT_TIET_KIEMDataTable(ds.Tables["LAI_SUAT_TIET_KIEM"]));
                }
                if ((ds.Tables["LOAI_TIET_KIEM"] != null)) {
                    base.Tables.Add(new LOAI_TIET_KIEMDataTable(ds.Tables["LOAI_TIET_KIEM"]));
                }
                if ((ds.Tables["NGAY_GIAO_DICH"] != null)) {
                    base.Tables.Add(new NGAY_GIAO_DICHDataTable(ds.Tables["NGAY_GIAO_DICH"]));
                }
                if ((ds.Tables["NHAN_VIEN"] != null)) {
                    base.Tables.Add(new NHAN_VIENDataTable(ds.Tables["NHAN_VIEN"]));
                }
                if ((ds.Tables["NHOM_NGUOI_DUNG"] != null)) {
                    base.Tables.Add(new NHOM_NGUOI_DUNGDataTable(ds.Tables["NHOM_NGUOI_DUNG"]));
                }
                if ((ds.Tables["PHAN_NHOM"] != null)) {
                    base.Tables.Add(new PHAN_NHOMDataTable(ds.Tables["PHAN_NHOM"]));
                }
                if ((ds.Tables["PHAN_QUYEN"] != null)) {
                    base.Tables.Add(new PHAN_QUYENDataTable(ds.Tables["PHAN_QUYEN"]));
                }
                if ((ds.Tables["PHONG_GIAO_DICH"] != null)) {
                    base.Tables.Add(new PHONG_GIAO_DICHDataTable(ds.Tables["PHONG_GIAO_DICH"]));
                }
                if ((ds.Tables["PS_TIET_KIEM"] != null)) {
                    base.Tables.Add(new PS_TIET_KIEMDataTable(ds.Tables["PS_TIET_KIEM"]));
                }
                if ((ds.Tables["QUAY_GIAO_DICH"] != null)) {
                    base.Tables.Add(new QUAY_GIAO_DICHDataTable(ds.Tables["QUAY_GIAO_DICH"]));
                }
                if ((ds.Tables["QUYEN"] != null)) {
                    base.Tables.Add(new QUYENDataTable(ds.Tables["QUYEN"]));
                }
                if ((ds.Tables["SO_DU_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_DU_TIET_KIEMDataTable(ds.Tables["SO_DU_TIET_KIEM"]));
                }
                if ((ds.Tables["SO_TIET_KIEM"] != null)) {
                    base.Tables.Add(new SO_TIET_KIEMDataTable(ds.Tables["SO_TIET_KIEM"]));
                }
                if ((ds.Tables["TAI_KHOAN"] != null)) {
                    base.Tables.Add(new TAI_KHOANDataTable(ds.Tables["TAI_KHOAN"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCHI_TIET_PSGD = ((CHI_TIET_PSGDDataTable)(base.Tables["CHI_TIET_PSGD"]));
            if ((initTable == true)) {
                if ((this.tableCHI_TIET_PSGD != null)) {
                    this.tableCHI_TIET_PSGD.InitVars();
                }
            }
            this.tableDM_KY_LAI_TIET_KIEM = ((DM_KY_LAI_TIET_KIEMDataTable)(base.Tables["DM_KY_LAI_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableDM_KY_LAI_TIET_KIEM != null)) {
                    this.tableDM_KY_LAI_TIET_KIEM.InitVars();
                }
            }
            this.tableDM_LOAI_GIAO_DICH = ((DM_LOAI_GIAO_DICHDataTable)(base.Tables["DM_LOAI_GIAO_DICH"]));
            if ((initTable == true)) {
                if ((this.tableDM_LOAI_GIAO_DICH != null)) {
                    this.tableDM_LOAI_GIAO_DICH.InitVars();
                }
            }
            this.tableDM_LOAI_TIEN = ((DM_LOAI_TIENDataTable)(base.Tables["DM_LOAI_TIEN"]));
            if ((initTable == true)) {
                if ((this.tableDM_LOAI_TIEN != null)) {
                    this.tableDM_LOAI_TIEN.InitVars();
                }
            }
            this.tableDM_TAI_KHOAN = ((DM_TAI_KHOANDataTable)(base.Tables["DM_TAI_KHOAN"]));
            if ((initTable == true)) {
                if ((this.tableDM_TAI_KHOAN != null)) {
                    this.tableDM_TAI_KHOAN.InitVars();
                }
            }
            this.tableGIAO_DICH_VIEN = ((GIAO_DICH_VIENDataTable)(base.Tables["GIAO_DICH_VIEN"]));
            if ((initTable == true)) {
                if ((this.tableGIAO_DICH_VIEN != null)) {
                    this.tableGIAO_DICH_VIEN.InitVars();
                }
            }
            this.tableKHACH_HANG = ((KHACH_HANGDataTable)(base.Tables["KHACH_HANG"]));
            if ((initTable == true)) {
                if ((this.tableKHACH_HANG != null)) {
                    this.tableKHACH_HANG.InitVars();
                }
            }
            this.tableLAI_SUAT_TIET_KIEM = ((LAI_SUAT_TIET_KIEMDataTable)(base.Tables["LAI_SUAT_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableLAI_SUAT_TIET_KIEM != null)) {
                    this.tableLAI_SUAT_TIET_KIEM.InitVars();
                }
            }
            this.tableLOAI_TIET_KIEM = ((LOAI_TIET_KIEMDataTable)(base.Tables["LOAI_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableLOAI_TIET_KIEM != null)) {
                    this.tableLOAI_TIET_KIEM.InitVars();
                }
            }
            this.tableNGAY_GIAO_DICH = ((NGAY_GIAO_DICHDataTable)(base.Tables["NGAY_GIAO_DICH"]));
            if ((initTable == true)) {
                if ((this.tableNGAY_GIAO_DICH != null)) {
                    this.tableNGAY_GIAO_DICH.InitVars();
                }
            }
            this.tableNHAN_VIEN = ((NHAN_VIENDataTable)(base.Tables["NHAN_VIEN"]));
            if ((initTable == true)) {
                if ((this.tableNHAN_VIEN != null)) {
                    this.tableNHAN_VIEN.InitVars();
                }
            }
            this.tableNHOM_NGUOI_DUNG = ((NHOM_NGUOI_DUNGDataTable)(base.Tables["NHOM_NGUOI_DUNG"]));
            if ((initTable == true)) {
                if ((this.tableNHOM_NGUOI_DUNG != null)) {
                    this.tableNHOM_NGUOI_DUNG.InitVars();
                }
            }
            this.tablePHAN_NHOM = ((PHAN_NHOMDataTable)(base.Tables["PHAN_NHOM"]));
            if ((initTable == true)) {
                if ((this.tablePHAN_NHOM != null)) {
                    this.tablePHAN_NHOM.InitVars();
                }
            }
            this.tablePHAN_QUYEN = ((PHAN_QUYENDataTable)(base.Tables["PHAN_QUYEN"]));
            if ((initTable == true)) {
                if ((this.tablePHAN_QUYEN != null)) {
                    this.tablePHAN_QUYEN.InitVars();
                }
            }
            this.tablePHONG_GIAO_DICH = ((PHONG_GIAO_DICHDataTable)(base.Tables["PHONG_GIAO_DICH"]));
            if ((initTable == true)) {
                if ((this.tablePHONG_GIAO_DICH != null)) {
                    this.tablePHONG_GIAO_DICH.InitVars();
                }
            }
            this.tablePS_TIET_KIEM = ((PS_TIET_KIEMDataTable)(base.Tables["PS_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tablePS_TIET_KIEM != null)) {
                    this.tablePS_TIET_KIEM.InitVars();
                }
            }
            this.tableQUAY_GIAO_DICH = ((QUAY_GIAO_DICHDataTable)(base.Tables["QUAY_GIAO_DICH"]));
            if ((initTable == true)) {
                if ((this.tableQUAY_GIAO_DICH != null)) {
                    this.tableQUAY_GIAO_DICH.InitVars();
                }
            }
            this.tableQUYEN = ((QUYENDataTable)(base.Tables["QUYEN"]));
            if ((initTable == true)) {
                if ((this.tableQUYEN != null)) {
                    this.tableQUYEN.InitVars();
                }
            }
            this.tableSO_DU_TIET_KIEM = ((SO_DU_TIET_KIEMDataTable)(base.Tables["SO_DU_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableSO_DU_TIET_KIEM != null)) {
                    this.tableSO_DU_TIET_KIEM.InitVars();
                }
            }
            this.tableSO_TIET_KIEM = ((SO_TIET_KIEMDataTable)(base.Tables["SO_TIET_KIEM"]));
            if ((initTable == true)) {
                if ((this.tableSO_TIET_KIEM != null)) {
                    this.tableSO_TIET_KIEM.InitVars();
                }
            }
            this.tableTAI_KHOAN = ((TAI_KHOANDataTable)(base.Tables["TAI_KHOAN"]));
            if ((initTable == true)) {
                if ((this.tableTAI_KHOAN != null)) {
                    this.tableTAI_KHOAN.InitVars();
                }
            }
            this.relationF3_CHI_TIET_PSGD = this.Relations["F3_CHI_TIET_PSGD"];
            this.relationF4_CHI_TIET_PSGD = this.Relations["F4_CHI_TIET_PSGD"];
            this.relationF1_LAI_SUAT_TIET_KIEM = this.Relations["F1_LAI_SUAT_TIET_KIEM"];
            this.relationF_LOAI_TIET_KIEM = this.Relations["F_LOAI_TIET_KIEM"];
            this.relationF1_LOAI_TIET_KIEM = this.Relations["F1_LOAI_TIET_KIEM"];
            this.relationF2_LOAI_TIET_KIEM = this.Relations["F2_LOAI_TIET_KIEM"];
            this.relationF1_PHAN_NHOM = this.Relations["F1_PHAN_NHOM"];
            this.relationF2_PHAN_NHOM = this.Relations["F2_PHAN_NHOM"];
            this.relationF1_PHAN_QUYEN = this.Relations["F1_PHAN_QUYEN"];
            this.relationF1_NHAN_VIEN = this.Relations["F1_NHAN_VIEN"];
            this.relationF2_CHI_TIET_PSGD = this.Relations["F2_CHI_TIET_PSGD"];
            this.relationF1_PS_TIET_KIEM = this.Relations["F1_PS_TIET_KIEM"];
            this.relationF4_PS_TIET_KIEM = this.Relations["F4_PS_TIET_KIEM"];
            this.relationF5_PS_TIET_KIEM = this.Relations["F5_PS_TIET_KIEM"];
            this.relationF6_PS_TIET_KIEM = this.Relations["F6_PS_TIET_KIEM"];
            this.relationF3_PS_TIET_KIEM = this.Relations["F3_PS_TIET_KIEM"];
            this.relationF_QUAY_GIAO_DICH = this.Relations["F_QUAY_GIAO_DICH"];
            this.relationF_PHAN_QUYEN = this.Relations["F_PHAN_QUYEN"];
            this.relationF2_SO_DU_TIET_KIEM = this.Relations["F2_SO_DU_TIET_KIEM"];
            this.relationF2_PS_TIET_KIEM = this.Relations["F2_PS_TIET_KIEM"];
            this.relationF1_SO_DU_TIET_KIEM = this.Relations["F1_SO_DU_TIET_KIEM"];
            this.relationF_SO_TIET_KIEM = this.Relations["F_SO_TIET_KIEM"];
            this.relationF1_SO_TIET_KIEM = this.Relations["F1_SO_TIET_KIEM"];
            this.relationF_TAI_KHOAN = this.Relations["F_TAI_KHOAN"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCHI_TIET_PSGD = new CHI_TIET_PSGDDataTable();
            base.Tables.Add(this.tableCHI_TIET_PSGD);
            this.tableDM_KY_LAI_TIET_KIEM = new DM_KY_LAI_TIET_KIEMDataTable();
            base.Tables.Add(this.tableDM_KY_LAI_TIET_KIEM);
            this.tableDM_LOAI_GIAO_DICH = new DM_LOAI_GIAO_DICHDataTable();
            base.Tables.Add(this.tableDM_LOAI_GIAO_DICH);
            this.tableDM_LOAI_TIEN = new DM_LOAI_TIENDataTable();
            base.Tables.Add(this.tableDM_LOAI_TIEN);
            this.tableDM_TAI_KHOAN = new DM_TAI_KHOANDataTable();
            base.Tables.Add(this.tableDM_TAI_KHOAN);
            this.tableGIAO_DICH_VIEN = new GIAO_DICH_VIENDataTable();
            base.Tables.Add(this.tableGIAO_DICH_VIEN);
            this.tableKHACH_HANG = new KHACH_HANGDataTable();
            base.Tables.Add(this.tableKHACH_HANG);
            this.tableLAI_SUAT_TIET_KIEM = new LAI_SUAT_TIET_KIEMDataTable();
            base.Tables.Add(this.tableLAI_SUAT_TIET_KIEM);
            this.tableLOAI_TIET_KIEM = new LOAI_TIET_KIEMDataTable();
            base.Tables.Add(this.tableLOAI_TIET_KIEM);
            this.tableNGAY_GIAO_DICH = new NGAY_GIAO_DICHDataTable();
            base.Tables.Add(this.tableNGAY_GIAO_DICH);
            this.tableNHAN_VIEN = new NHAN_VIENDataTable();
            base.Tables.Add(this.tableNHAN_VIEN);
            this.tableNHOM_NGUOI_DUNG = new NHOM_NGUOI_DUNGDataTable();
            base.Tables.Add(this.tableNHOM_NGUOI_DUNG);
            this.tablePHAN_NHOM = new PHAN_NHOMDataTable();
            base.Tables.Add(this.tablePHAN_NHOM);
            this.tablePHAN_QUYEN = new PHAN_QUYENDataTable();
            base.Tables.Add(this.tablePHAN_QUYEN);
            this.tablePHONG_GIAO_DICH = new PHONG_GIAO_DICHDataTable();
            base.Tables.Add(this.tablePHONG_GIAO_DICH);
            this.tablePS_TIET_KIEM = new PS_TIET_KIEMDataTable();
            base.Tables.Add(this.tablePS_TIET_KIEM);
            this.tableQUAY_GIAO_DICH = new QUAY_GIAO_DICHDataTable();
            base.Tables.Add(this.tableQUAY_GIAO_DICH);
            this.tableQUYEN = new QUYENDataTable();
            base.Tables.Add(this.tableQUYEN);
            this.tableSO_DU_TIET_KIEM = new SO_DU_TIET_KIEMDataTable();
            base.Tables.Add(this.tableSO_DU_TIET_KIEM);
            this.tableSO_TIET_KIEM = new SO_TIET_KIEMDataTable();
            base.Tables.Add(this.tableSO_TIET_KIEM);
            this.tableTAI_KHOAN = new TAI_KHOANDataTable();
            base.Tables.Add(this.tableTAI_KHOAN);
            this.relationF3_CHI_TIET_PSGD = new System.Data.DataRelation("F3_CHI_TIET_PSGD", new System.Data.DataColumn[] {
                        this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PSGD.SoHieuTaiKhoanNoColumn}, false);
            this.Relations.Add(this.relationF3_CHI_TIET_PSGD);
            this.relationF4_CHI_TIET_PSGD = new System.Data.DataRelation("F4_CHI_TIET_PSGD", new System.Data.DataColumn[] {
                        this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PSGD.SoHieuTaiKhoanCoColumn}, false);
            this.Relations.Add(this.relationF4_CHI_TIET_PSGD);
            this.relationF1_LAI_SUAT_TIET_KIEM = new System.Data.DataRelation("F1_LAI_SUAT_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.MaLoaiTietKiemColumn}, new System.Data.DataColumn[] {
                        this.tableLAI_SUAT_TIET_KIEM.MaLoaiTietKiemColumn}, false);
            this.Relations.Add(this.relationF1_LAI_SUAT_TIET_KIEM);
            this.relationF_LOAI_TIET_KIEM = new System.Data.DataRelation("F_LOAI_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableDM_LOAI_TIEN.MaLoaiTienColumn}, new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.MaLoaiTienColumn}, false);
            this.Relations.Add(this.relationF_LOAI_TIET_KIEM);
            this.relationF1_LOAI_TIET_KIEM = new System.Data.DataRelation("F1_LOAI_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableDM_KY_LAI_TIET_KIEM.MaKyTinhLaiColumn}, new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.MaKyTinhLaiColumn}, false);
            this.Relations.Add(this.relationF1_LOAI_TIET_KIEM);
            this.relationF2_LOAI_TIET_KIEM = new System.Data.DataRelation("F2_LOAI_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn}, new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.SoHieuTaiKhoanColumn}, false);
            this.Relations.Add(this.relationF2_LOAI_TIET_KIEM);
            this.relationF1_PHAN_NHOM = new System.Data.DataRelation("F1_PHAN_NHOM", new System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MaNVColumn}, new System.Data.DataColumn[] {
                        this.tablePHAN_NHOM.MaNVColumn}, false);
            this.Relations.Add(this.relationF1_PHAN_NHOM);
            this.relationF2_PHAN_NHOM = new System.Data.DataRelation("F2_PHAN_NHOM", new System.Data.DataColumn[] {
                        this.tableNHOM_NGUOI_DUNG.MaNhomNguoiDungColumn}, new System.Data.DataColumn[] {
                        this.tablePHAN_NHOM.MaNhomNguoiDungColumn}, false);
            this.Relations.Add(this.relationF2_PHAN_NHOM);
            this.relationF1_PHAN_QUYEN = new System.Data.DataRelation("F1_PHAN_QUYEN", new System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MaNVColumn}, new System.Data.DataColumn[] {
                        this.tablePHAN_QUYEN.MaNVColumn}, false);
            this.Relations.Add(this.relationF1_PHAN_QUYEN);
            this.relationF1_NHAN_VIEN = new System.Data.DataRelation("F1_NHAN_VIEN", new System.Data.DataColumn[] {
                        this.tablePHONG_GIAO_DICH.MaPhongGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tableNHAN_VIEN.MaPhongGiaoDichColumn}, false);
            this.Relations.Add(this.relationF1_NHAN_VIEN);
            this.relationF2_CHI_TIET_PSGD = new System.Data.DataRelation("F2_CHI_TIET_PSGD", new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.SoButToanColumn,
                        this.tablePS_TIET_KIEM.NgayGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tableCHI_TIET_PSGD.SoButToanColumn,
                        this.tableCHI_TIET_PSGD.NgayGiaoDichColumn}, false);
            this.Relations.Add(this.relationF2_CHI_TIET_PSGD);
            this.relationF1_PS_TIET_KIEM = new System.Data.DataRelation("F1_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableDM_LOAI_GIAO_DICH.MaLoaiGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.MaLoaiGiaoDichColumn}, false);
            this.Relations.Add(this.relationF1_PS_TIET_KIEM);
            this.relationF4_PS_TIET_KIEM = new System.Data.DataRelation("F4_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tablePHONG_GIAO_DICH.MaPhongGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.MaPhongGiaoDichColumn}, false);
            this.Relations.Add(this.relationF4_PS_TIET_KIEM);
            this.relationF5_PS_TIET_KIEM = new System.Data.DataRelation("F5_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableGIAO_DICH_VIEN.MaNVColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.MaNVColumn}, false);
            this.Relations.Add(this.relationF5_PS_TIET_KIEM);
            this.relationF6_PS_TIET_KIEM = new System.Data.DataRelation("F6_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableNGAY_GIAO_DICH.NgayGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.NgayGiaoDichColumn}, false);
            this.Relations.Add(this.relationF6_PS_TIET_KIEM);
            this.relationF3_PS_TIET_KIEM = new System.Data.DataRelation("F3_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableQUAY_GIAO_DICH.MaQuayGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.MaQuayGiaoDichColumn}, false);
            this.Relations.Add(this.relationF3_PS_TIET_KIEM);
            this.relationF_QUAY_GIAO_DICH = new System.Data.DataRelation("F_QUAY_GIAO_DICH", new System.Data.DataColumn[] {
                        this.tablePHONG_GIAO_DICH.MaPhongGiaoDichColumn}, new System.Data.DataColumn[] {
                        this.tableQUAY_GIAO_DICH.MaPhongGiaoDichColumn}, false);
            this.Relations.Add(this.relationF_QUAY_GIAO_DICH);
            this.relationF_PHAN_QUYEN = new System.Data.DataRelation("F_PHAN_QUYEN", new System.Data.DataColumn[] {
                        this.tableQUYEN.MaQuyenColumn}, new System.Data.DataColumn[] {
                        this.tablePHAN_QUYEN.MaQuyenColumn}, false);
            this.Relations.Add(this.relationF_PHAN_QUYEN);
            this.relationF2_SO_DU_TIET_KIEM = new System.Data.DataRelation("F2_SO_DU_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.MaLoaiTietKiemColumn}, new System.Data.DataColumn[] {
                        this.tableSO_DU_TIET_KIEM.MaLoaiTietKiemColumn}, false);
            this.Relations.Add(this.relationF2_SO_DU_TIET_KIEM);
            this.relationF2_PS_TIET_KIEM = new System.Data.DataRelation("F2_PS_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.MaSoTietKiemColumn}, new System.Data.DataColumn[] {
                        this.tablePS_TIET_KIEM.MaSoTietKiemColumn}, false);
            this.Relations.Add(this.relationF2_PS_TIET_KIEM);
            this.relationF1_SO_DU_TIET_KIEM = new System.Data.DataRelation("F1_SO_DU_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.MaSoTietKiemColumn}, new System.Data.DataColumn[] {
                        this.tableSO_DU_TIET_KIEM.MaSoTietKiemColumn}, false);
            this.Relations.Add(this.relationF1_SO_DU_TIET_KIEM);
            this.relationF_SO_TIET_KIEM = new System.Data.DataRelation("F_SO_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableLOAI_TIET_KIEM.MaLoaiTietKiemColumn}, new System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.MaLoaiTietKiemColumn}, false);
            this.Relations.Add(this.relationF_SO_TIET_KIEM);
            this.relationF1_SO_TIET_KIEM = new System.Data.DataRelation("F1_SO_TIET_KIEM", new System.Data.DataColumn[] {
                        this.tableKHACH_HANG.MaKHColumn}, new System.Data.DataColumn[] {
                        this.tableSO_TIET_KIEM.MaKHColumn}, false);
            this.Relations.Add(this.relationF1_SO_TIET_KIEM);
            this.relationF_TAI_KHOAN = new System.Data.DataRelation("F_TAI_KHOAN", new System.Data.DataColumn[] {
                        this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn}, new System.Data.DataColumn[] {
                        this.tableTAI_KHOAN.SoHieuTaiKhoanColumn}, false);
            this.Relations.Add(this.relationF_TAI_KHOAN);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHI_TIET_PSGD() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDM_KY_LAI_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDM_LOAI_GIAO_DICH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDM_LOAI_TIEN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDM_TAI_KHOAN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGIAO_DICH_VIEN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKHACH_HANG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLAI_SUAT_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLOAI_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNGAY_GIAO_DICH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNHAN_VIEN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNHOM_NGUOI_DUNG() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHAN_NHOM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHAN_QUYEN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePHONG_GIAO_DICH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePS_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQUAY_GIAO_DICH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQUYEN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSO_DU_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSO_TIET_KIEM() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAI_KHOAN() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void CHI_TIET_PSGDRowChangeEventHandler(object sender, CHI_TIET_PSGDRowChangeEvent e);
        
        public delegate void DM_KY_LAI_TIET_KIEMRowChangeEventHandler(object sender, DM_KY_LAI_TIET_KIEMRowChangeEvent e);
        
        public delegate void DM_LOAI_GIAO_DICHRowChangeEventHandler(object sender, DM_LOAI_GIAO_DICHRowChangeEvent e);
        
        public delegate void DM_LOAI_TIENRowChangeEventHandler(object sender, DM_LOAI_TIENRowChangeEvent e);
        
        public delegate void DM_TAI_KHOANRowChangeEventHandler(object sender, DM_TAI_KHOANRowChangeEvent e);
        
        public delegate void GIAO_DICH_VIENRowChangeEventHandler(object sender, GIAO_DICH_VIENRowChangeEvent e);
        
        public delegate void KHACH_HANGRowChangeEventHandler(object sender, KHACH_HANGRowChangeEvent e);
        
        public delegate void LAI_SUAT_TIET_KIEMRowChangeEventHandler(object sender, LAI_SUAT_TIET_KIEMRowChangeEvent e);
        
        public delegate void LOAI_TIET_KIEMRowChangeEventHandler(object sender, LOAI_TIET_KIEMRowChangeEvent e);
        
        public delegate void NGAY_GIAO_DICHRowChangeEventHandler(object sender, NGAY_GIAO_DICHRowChangeEvent e);
        
        public delegate void NHAN_VIENRowChangeEventHandler(object sender, NHAN_VIENRowChangeEvent e);
        
        public delegate void NHOM_NGUOI_DUNGRowChangeEventHandler(object sender, NHOM_NGUOI_DUNGRowChangeEvent e);
        
        public delegate void PHAN_NHOMRowChangeEventHandler(object sender, PHAN_NHOMRowChangeEvent e);
        
        public delegate void PHAN_QUYENRowChangeEventHandler(object sender, PHAN_QUYENRowChangeEvent e);
        
        public delegate void PHONG_GIAO_DICHRowChangeEventHandler(object sender, PHONG_GIAO_DICHRowChangeEvent e);
        
        public delegate void PS_TIET_KIEMRowChangeEventHandler(object sender, PS_TIET_KIEMRowChangeEvent e);
        
        public delegate void QUAY_GIAO_DICHRowChangeEventHandler(object sender, QUAY_GIAO_DICHRowChangeEvent e);
        
        public delegate void QUYENRowChangeEventHandler(object sender, QUYENRowChangeEvent e);
        
        public delegate void SO_DU_TIET_KIEMRowChangeEventHandler(object sender, SO_DU_TIET_KIEMRowChangeEvent e);
        
        public delegate void SO_TIET_KIEMRowChangeEventHandler(object sender, SO_TIET_KIEMRowChangeEvent e);
        
        public delegate void TAI_KHOANRowChangeEventHandler(object sender, TAI_KHOANRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHI_TIET_PSGDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSoGiaoDich;
            
            private System.Data.DataColumn columnSoButToan;
            
            private System.Data.DataColumn columnNgayGiaoDich;
            
            private System.Data.DataColumn columnSoHieuTaiKhoanNo;
            
            private System.Data.DataColumn columnSoHieuTaiKhoanCo;
            
            private System.Data.DataColumn columnSoTien;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDDataTable() {
                this.TableName = "CHI_TIET_PSGD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PSGDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHI_TIET_PSGDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoGiaoDichColumn {
                get {
                    return this.columnSoGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoButToanColumn {
                get {
                    return this.columnSoButToan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayGiaoDichColumn {
                get {
                    return this.columnNgayGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoHieuTaiKhoanNoColumn {
                get {
                    return this.columnSoHieuTaiKhoanNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoHieuTaiKhoanCoColumn {
                get {
                    return this.columnSoHieuTaiKhoanCo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoTienColumn {
                get {
                    return this.columnSoTien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow this[int index] {
                get {
                    return ((CHI_TIET_PSGDRow)(this.Rows[index]));
                }
            }
            
            public event CHI_TIET_PSGDRowChangeEventHandler CHI_TIET_PSGDRowChanging;
            
            public event CHI_TIET_PSGDRowChangeEventHandler CHI_TIET_PSGDRowChanged;
            
            public event CHI_TIET_PSGDRowChangeEventHandler CHI_TIET_PSGDRowDeleting;
            
            public event CHI_TIET_PSGDRowChangeEventHandler CHI_TIET_PSGDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHI_TIET_PSGDRow(CHI_TIET_PSGDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow AddCHI_TIET_PSGDRow(string SoGiaoDich, string SoButToan, System.DateTime NgayGiaoDich, DM_TAI_KHOANRow parentDM_TAI_KHOANRowByF3_CHI_TIET_PSGD, DM_TAI_KHOANRow parentDM_TAI_KHOANRowByF4_CHI_TIET_PSGD, double SoTien) {
                CHI_TIET_PSGDRow rowCHI_TIET_PSGDRow = ((CHI_TIET_PSGDRow)(this.NewRow()));
                rowCHI_TIET_PSGDRow.ItemArray = new object[] {
                        SoGiaoDich,
                        SoButToan,
                        NgayGiaoDich,
                        parentDM_TAI_KHOANRowByF3_CHI_TIET_PSGD[0],
                        parentDM_TAI_KHOANRowByF4_CHI_TIET_PSGD[0],
                        SoTien};
                this.Rows.Add(rowCHI_TIET_PSGDRow);
                return rowCHI_TIET_PSGDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow FindBySoGiaoDichSoButToanNgayGiaoDich(string SoGiaoDich, string SoButToan, System.DateTime NgayGiaoDich) {
                return ((CHI_TIET_PSGDRow)(this.Rows.Find(new object[] {
                            SoGiaoDich,
                            SoButToan,
                            NgayGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CHI_TIET_PSGDDataTable cln = ((CHI_TIET_PSGDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CHI_TIET_PSGDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSoGiaoDich = base.Columns["SoGiaoDich"];
                this.columnSoButToan = base.Columns["SoButToan"];
                this.columnNgayGiaoDich = base.Columns["NgayGiaoDich"];
                this.columnSoHieuTaiKhoanNo = base.Columns["SoHieuTaiKhoanNo"];
                this.columnSoHieuTaiKhoanCo = base.Columns["SoHieuTaiKhoanCo"];
                this.columnSoTien = base.Columns["SoTien"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSoGiaoDich = new System.Data.DataColumn("SoGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoGiaoDich);
                this.columnSoButToan = new System.Data.DataColumn("SoButToan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoButToan);
                this.columnNgayGiaoDich = new System.Data.DataColumn("NgayGiaoDich", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayGiaoDich);
                this.columnSoHieuTaiKhoanNo = new System.Data.DataColumn("SoHieuTaiKhoanNo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieuTaiKhoanNo);
                this.columnSoHieuTaiKhoanCo = new System.Data.DataColumn("SoHieuTaiKhoanCo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieuTaiKhoanCo);
                this.columnSoTien = new System.Data.DataColumn("SoTien", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoTien);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSoGiaoDich,
                                this.columnSoButToan,
                                this.columnNgayGiaoDich}, true));
                this.columnSoGiaoDich.AllowDBNull = false;
                this.columnSoGiaoDich.MaxLength = 10;
                this.columnSoButToan.AllowDBNull = false;
                this.columnSoButToan.MaxLength = 10;
                this.columnNgayGiaoDich.AllowDBNull = false;
                this.columnSoHieuTaiKhoanNo.AllowDBNull = false;
                this.columnSoHieuTaiKhoanNo.MaxLength = 20;
                this.columnSoHieuTaiKhoanCo.AllowDBNull = false;
                this.columnSoHieuTaiKhoanCo.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow NewCHI_TIET_PSGDRow() {
                return ((CHI_TIET_PSGDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CHI_TIET_PSGDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CHI_TIET_PSGDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHI_TIET_PSGDRowChanged != null)) {
                    this.CHI_TIET_PSGDRowChanged(this, new CHI_TIET_PSGDRowChangeEvent(((CHI_TIET_PSGDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHI_TIET_PSGDRowChanging != null)) {
                    this.CHI_TIET_PSGDRowChanging(this, new CHI_TIET_PSGDRowChangeEvent(((CHI_TIET_PSGDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHI_TIET_PSGDRowDeleted != null)) {
                    this.CHI_TIET_PSGDRowDeleted(this, new CHI_TIET_PSGDRowChangeEvent(((CHI_TIET_PSGDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHI_TIET_PSGDRowDeleting != null)) {
                    this.CHI_TIET_PSGDRowDeleting(this, new CHI_TIET_PSGDRowChangeEvent(((CHI_TIET_PSGDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHI_TIET_PSGDRow(CHI_TIET_PSGDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHI_TIET_PSGDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DM_KY_LAI_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaKyTinhLai;
            
            private System.Data.DataColumn columnLoaiKyTinhLai;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMDataTable() {
                this.TableName = "DM_KY_LAI_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_KY_LAI_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DM_KY_LAI_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKyTinhLaiColumn {
                get {
                    return this.columnMaKyTinhLai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LoaiKyTinhLaiColumn {
                get {
                    return this.columnLoaiKyTinhLai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow this[int index] {
                get {
                    return ((DM_KY_LAI_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event DM_KY_LAI_TIET_KIEMRowChangeEventHandler DM_KY_LAI_TIET_KIEMRowChanging;
            
            public event DM_KY_LAI_TIET_KIEMRowChangeEventHandler DM_KY_LAI_TIET_KIEMRowChanged;
            
            public event DM_KY_LAI_TIET_KIEMRowChangeEventHandler DM_KY_LAI_TIET_KIEMRowDeleting;
            
            public event DM_KY_LAI_TIET_KIEMRowChangeEventHandler DM_KY_LAI_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDM_KY_LAI_TIET_KIEMRow(DM_KY_LAI_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow AddDM_KY_LAI_TIET_KIEMRow(string MaKyTinhLai, string LoaiKyTinhLai) {
                DM_KY_LAI_TIET_KIEMRow rowDM_KY_LAI_TIET_KIEMRow = ((DM_KY_LAI_TIET_KIEMRow)(this.NewRow()));
                rowDM_KY_LAI_TIET_KIEMRow.ItemArray = new object[] {
                        MaKyTinhLai,
                        LoaiKyTinhLai};
                this.Rows.Add(rowDM_KY_LAI_TIET_KIEMRow);
                return rowDM_KY_LAI_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow FindByMaKyTinhLai(string MaKyTinhLai) {
                return ((DM_KY_LAI_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            MaKyTinhLai})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DM_KY_LAI_TIET_KIEMDataTable cln = ((DM_KY_LAI_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DM_KY_LAI_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaKyTinhLai = base.Columns["MaKyTinhLai"];
                this.columnLoaiKyTinhLai = base.Columns["LoaiKyTinhLai"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaKyTinhLai = new System.Data.DataColumn("MaKyTinhLai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKyTinhLai);
                this.columnLoaiKyTinhLai = new System.Data.DataColumn("LoaiKyTinhLai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoaiKyTinhLai);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaKyTinhLai}, true));
                this.columnMaKyTinhLai.AllowDBNull = false;
                this.columnMaKyTinhLai.Unique = true;
                this.columnMaKyTinhLai.MaxLength = 10;
                this.columnLoaiKyTinhLai.AllowDBNull = false;
                this.columnLoaiKyTinhLai.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow NewDM_KY_LAI_TIET_KIEMRow() {
                return ((DM_KY_LAI_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DM_KY_LAI_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DM_KY_LAI_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DM_KY_LAI_TIET_KIEMRowChanged != null)) {
                    this.DM_KY_LAI_TIET_KIEMRowChanged(this, new DM_KY_LAI_TIET_KIEMRowChangeEvent(((DM_KY_LAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DM_KY_LAI_TIET_KIEMRowChanging != null)) {
                    this.DM_KY_LAI_TIET_KIEMRowChanging(this, new DM_KY_LAI_TIET_KIEMRowChangeEvent(((DM_KY_LAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DM_KY_LAI_TIET_KIEMRowDeleted != null)) {
                    this.DM_KY_LAI_TIET_KIEMRowDeleted(this, new DM_KY_LAI_TIET_KIEMRowChangeEvent(((DM_KY_LAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DM_KY_LAI_TIET_KIEMRowDeleting != null)) {
                    this.DM_KY_LAI_TIET_KIEMRowDeleting(this, new DM_KY_LAI_TIET_KIEMRowChangeEvent(((DM_KY_LAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDM_KY_LAI_TIET_KIEMRow(DM_KY_LAI_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DM_KY_LAI_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DM_LOAI_GIAO_DICHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiGiaoDich;
            
            private System.Data.DataColumn columnTenGiaoDich;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHDataTable() {
                this.TableName = "DM_LOAI_GIAO_DICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_LOAI_GIAO_DICHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DM_LOAI_GIAO_DICHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiGiaoDichColumn {
                get {
                    return this.columnMaLoaiGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenGiaoDichColumn {
                get {
                    return this.columnTenGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow this[int index] {
                get {
                    return ((DM_LOAI_GIAO_DICHRow)(this.Rows[index]));
                }
            }
            
            public event DM_LOAI_GIAO_DICHRowChangeEventHandler DM_LOAI_GIAO_DICHRowChanging;
            
            public event DM_LOAI_GIAO_DICHRowChangeEventHandler DM_LOAI_GIAO_DICHRowChanged;
            
            public event DM_LOAI_GIAO_DICHRowChangeEventHandler DM_LOAI_GIAO_DICHRowDeleting;
            
            public event DM_LOAI_GIAO_DICHRowChangeEventHandler DM_LOAI_GIAO_DICHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDM_LOAI_GIAO_DICHRow(DM_LOAI_GIAO_DICHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow AddDM_LOAI_GIAO_DICHRow(string MaLoaiGiaoDich, string TenGiaoDich) {
                DM_LOAI_GIAO_DICHRow rowDM_LOAI_GIAO_DICHRow = ((DM_LOAI_GIAO_DICHRow)(this.NewRow()));
                rowDM_LOAI_GIAO_DICHRow.ItemArray = new object[] {
                        MaLoaiGiaoDich,
                        TenGiaoDich};
                this.Rows.Add(rowDM_LOAI_GIAO_DICHRow);
                return rowDM_LOAI_GIAO_DICHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow FindByMaLoaiGiaoDich(string MaLoaiGiaoDich) {
                return ((DM_LOAI_GIAO_DICHRow)(this.Rows.Find(new object[] {
                            MaLoaiGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DM_LOAI_GIAO_DICHDataTable cln = ((DM_LOAI_GIAO_DICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DM_LOAI_GIAO_DICHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiGiaoDich = base.Columns["MaLoaiGiaoDich"];
                this.columnTenGiaoDich = base.Columns["TenGiaoDich"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiGiaoDich = new System.Data.DataColumn("MaLoaiGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiGiaoDich);
                this.columnTenGiaoDich = new System.Data.DataColumn("TenGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenGiaoDich);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiGiaoDich}, true));
                this.columnMaLoaiGiaoDich.AllowDBNull = false;
                this.columnMaLoaiGiaoDich.Unique = true;
                this.columnMaLoaiGiaoDich.MaxLength = 10;
                this.columnTenGiaoDich.AllowDBNull = false;
                this.columnTenGiaoDich.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow NewDM_LOAI_GIAO_DICHRow() {
                return ((DM_LOAI_GIAO_DICHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DM_LOAI_GIAO_DICHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DM_LOAI_GIAO_DICHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DM_LOAI_GIAO_DICHRowChanged != null)) {
                    this.DM_LOAI_GIAO_DICHRowChanged(this, new DM_LOAI_GIAO_DICHRowChangeEvent(((DM_LOAI_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DM_LOAI_GIAO_DICHRowChanging != null)) {
                    this.DM_LOAI_GIAO_DICHRowChanging(this, new DM_LOAI_GIAO_DICHRowChangeEvent(((DM_LOAI_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DM_LOAI_GIAO_DICHRowDeleted != null)) {
                    this.DM_LOAI_GIAO_DICHRowDeleted(this, new DM_LOAI_GIAO_DICHRowChangeEvent(((DM_LOAI_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DM_LOAI_GIAO_DICHRowDeleting != null)) {
                    this.DM_LOAI_GIAO_DICHRowDeleting(this, new DM_LOAI_GIAO_DICHRowChangeEvent(((DM_LOAI_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDM_LOAI_GIAO_DICHRow(DM_LOAI_GIAO_DICHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DM_LOAI_GIAO_DICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DM_LOAI_TIENDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTien;
            
            private System.Data.DataColumn columnLoaiTien;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENDataTable() {
                this.TableName = "DM_LOAI_TIEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_LOAI_TIENDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DM_LOAI_TIENDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTienColumn {
                get {
                    return this.columnMaLoaiTien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LoaiTienColumn {
                get {
                    return this.columnLoaiTien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow this[int index] {
                get {
                    return ((DM_LOAI_TIENRow)(this.Rows[index]));
                }
            }
            
            public event DM_LOAI_TIENRowChangeEventHandler DM_LOAI_TIENRowChanging;
            
            public event DM_LOAI_TIENRowChangeEventHandler DM_LOAI_TIENRowChanged;
            
            public event DM_LOAI_TIENRowChangeEventHandler DM_LOAI_TIENRowDeleting;
            
            public event DM_LOAI_TIENRowChangeEventHandler DM_LOAI_TIENRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDM_LOAI_TIENRow(DM_LOAI_TIENRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow AddDM_LOAI_TIENRow(string MaLoaiTien, string LoaiTien) {
                DM_LOAI_TIENRow rowDM_LOAI_TIENRow = ((DM_LOAI_TIENRow)(this.NewRow()));
                rowDM_LOAI_TIENRow.ItemArray = new object[] {
                        MaLoaiTien,
                        LoaiTien};
                this.Rows.Add(rowDM_LOAI_TIENRow);
                return rowDM_LOAI_TIENRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow FindByMaLoaiTien(string MaLoaiTien) {
                return ((DM_LOAI_TIENRow)(this.Rows.Find(new object[] {
                            MaLoaiTien})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DM_LOAI_TIENDataTable cln = ((DM_LOAI_TIENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DM_LOAI_TIENDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTien = base.Columns["MaLoaiTien"];
                this.columnLoaiTien = base.Columns["LoaiTien"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTien = new System.Data.DataColumn("MaLoaiTien", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTien);
                this.columnLoaiTien = new System.Data.DataColumn("LoaiTien", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoaiTien);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiTien}, true));
                this.columnMaLoaiTien.AllowDBNull = false;
                this.columnMaLoaiTien.Unique = true;
                this.columnMaLoaiTien.MaxLength = 10;
                this.columnLoaiTien.AllowDBNull = false;
                this.columnLoaiTien.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow NewDM_LOAI_TIENRow() {
                return ((DM_LOAI_TIENRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DM_LOAI_TIENRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DM_LOAI_TIENRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DM_LOAI_TIENRowChanged != null)) {
                    this.DM_LOAI_TIENRowChanged(this, new DM_LOAI_TIENRowChangeEvent(((DM_LOAI_TIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DM_LOAI_TIENRowChanging != null)) {
                    this.DM_LOAI_TIENRowChanging(this, new DM_LOAI_TIENRowChangeEvent(((DM_LOAI_TIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DM_LOAI_TIENRowDeleted != null)) {
                    this.DM_LOAI_TIENRowDeleted(this, new DM_LOAI_TIENRowChangeEvent(((DM_LOAI_TIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DM_LOAI_TIENRowDeleting != null)) {
                    this.DM_LOAI_TIENRowDeleting(this, new DM_LOAI_TIENRowChangeEvent(((DM_LOAI_TIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDM_LOAI_TIENRow(DM_LOAI_TIENRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DM_LOAI_TIENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DM_TAI_KHOANDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSoHieuTaiKhoan;
            
            private System.Data.DataColumn columnTenTaiKhoan;
            
            private System.Data.DataColumn columnTinhChatSoDu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANDataTable() {
                this.TableName = "DM_TAI_KHOAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_TAI_KHOANDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DM_TAI_KHOANDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoHieuTaiKhoanColumn {
                get {
                    return this.columnSoHieuTaiKhoan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenTaiKhoanColumn {
                get {
                    return this.columnTenTaiKhoan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TinhChatSoDuColumn {
                get {
                    return this.columnTinhChatSoDu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow this[int index] {
                get {
                    return ((DM_TAI_KHOANRow)(this.Rows[index]));
                }
            }
            
            public event DM_TAI_KHOANRowChangeEventHandler DM_TAI_KHOANRowChanging;
            
            public event DM_TAI_KHOANRowChangeEventHandler DM_TAI_KHOANRowChanged;
            
            public event DM_TAI_KHOANRowChangeEventHandler DM_TAI_KHOANRowDeleting;
            
            public event DM_TAI_KHOANRowChangeEventHandler DM_TAI_KHOANRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDM_TAI_KHOANRow(DM_TAI_KHOANRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow AddDM_TAI_KHOANRow(string SoHieuTaiKhoan, string TenTaiKhoan, string TinhChatSoDu) {
                DM_TAI_KHOANRow rowDM_TAI_KHOANRow = ((DM_TAI_KHOANRow)(this.NewRow()));
                rowDM_TAI_KHOANRow.ItemArray = new object[] {
                        SoHieuTaiKhoan,
                        TenTaiKhoan,
                        TinhChatSoDu};
                this.Rows.Add(rowDM_TAI_KHOANRow);
                return rowDM_TAI_KHOANRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow FindBySoHieuTaiKhoan(string SoHieuTaiKhoan) {
                return ((DM_TAI_KHOANRow)(this.Rows.Find(new object[] {
                            SoHieuTaiKhoan})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                DM_TAI_KHOANDataTable cln = ((DM_TAI_KHOANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new DM_TAI_KHOANDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSoHieuTaiKhoan = base.Columns["SoHieuTaiKhoan"];
                this.columnTenTaiKhoan = base.Columns["TenTaiKhoan"];
                this.columnTinhChatSoDu = base.Columns["TinhChatSoDu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSoHieuTaiKhoan = new System.Data.DataColumn("SoHieuTaiKhoan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieuTaiKhoan);
                this.columnTenTaiKhoan = new System.Data.DataColumn("TenTaiKhoan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenTaiKhoan);
                this.columnTinhChatSoDu = new System.Data.DataColumn("TinhChatSoDu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinhChatSoDu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSoHieuTaiKhoan}, true));
                this.columnSoHieuTaiKhoan.AllowDBNull = false;
                this.columnSoHieuTaiKhoan.Unique = true;
                this.columnSoHieuTaiKhoan.MaxLength = 20;
                this.columnTenTaiKhoan.AllowDBNull = false;
                this.columnTenTaiKhoan.MaxLength = 255;
                this.columnTinhChatSoDu.MaxLength = 5;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow NewDM_TAI_KHOANRow() {
                return ((DM_TAI_KHOANRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new DM_TAI_KHOANRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(DM_TAI_KHOANRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DM_TAI_KHOANRowChanged != null)) {
                    this.DM_TAI_KHOANRowChanged(this, new DM_TAI_KHOANRowChangeEvent(((DM_TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DM_TAI_KHOANRowChanging != null)) {
                    this.DM_TAI_KHOANRowChanging(this, new DM_TAI_KHOANRowChangeEvent(((DM_TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DM_TAI_KHOANRowDeleted != null)) {
                    this.DM_TAI_KHOANRowDeleted(this, new DM_TAI_KHOANRowChangeEvent(((DM_TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DM_TAI_KHOANRowDeleting != null)) {
                    this.DM_TAI_KHOANRowDeleting(this, new DM_TAI_KHOANRowChangeEvent(((DM_TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDM_TAI_KHOANRow(DM_TAI_KHOANRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DM_TAI_KHOANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GIAO_DICH_VIENDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaNV;
            
            private System.Data.DataColumn columnHanMucthu;
            
            private System.Data.DataColumn columnHanMucChi;
            
            private System.Data.DataColumn columnHanMucTonQuy;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENDataTable() {
                this.TableName = "GIAO_DICH_VIEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GIAO_DICH_VIENDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GIAO_DICH_VIENDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNVColumn {
                get {
                    return this.columnMaNV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HanMucthuColumn {
                get {
                    return this.columnHanMucthu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HanMucChiColumn {
                get {
                    return this.columnHanMucChi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HanMucTonQuyColumn {
                get {
                    return this.columnHanMucTonQuy;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow this[int index] {
                get {
                    return ((GIAO_DICH_VIENRow)(this.Rows[index]));
                }
            }
            
            public event GIAO_DICH_VIENRowChangeEventHandler GIAO_DICH_VIENRowChanging;
            
            public event GIAO_DICH_VIENRowChangeEventHandler GIAO_DICH_VIENRowChanged;
            
            public event GIAO_DICH_VIENRowChangeEventHandler GIAO_DICH_VIENRowDeleting;
            
            public event GIAO_DICH_VIENRowChangeEventHandler GIAO_DICH_VIENRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGIAO_DICH_VIENRow(GIAO_DICH_VIENRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow AddGIAO_DICH_VIENRow(string MaNV, double HanMucthu, double HanMucChi, double HanMucTonQuy) {
                GIAO_DICH_VIENRow rowGIAO_DICH_VIENRow = ((GIAO_DICH_VIENRow)(this.NewRow()));
                rowGIAO_DICH_VIENRow.ItemArray = new object[] {
                        MaNV,
                        HanMucthu,
                        HanMucChi,
                        HanMucTonQuy};
                this.Rows.Add(rowGIAO_DICH_VIENRow);
                return rowGIAO_DICH_VIENRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow FindByMaNV(string MaNV) {
                return ((GIAO_DICH_VIENRow)(this.Rows.Find(new object[] {
                            MaNV})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                GIAO_DICH_VIENDataTable cln = ((GIAO_DICH_VIENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new GIAO_DICH_VIENDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaNV = base.Columns["MaNV"];
                this.columnHanMucthu = base.Columns["HanMucthu"];
                this.columnHanMucChi = base.Columns["HanMucChi"];
                this.columnHanMucTonQuy = base.Columns["HanMucTonQuy"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaNV = new System.Data.DataColumn("MaNV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNV);
                this.columnHanMucthu = new System.Data.DataColumn("HanMucthu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHanMucthu);
                this.columnHanMucChi = new System.Data.DataColumn("HanMucChi", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHanMucChi);
                this.columnHanMucTonQuy = new System.Data.DataColumn("HanMucTonQuy", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHanMucTonQuy);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNV}, true));
                this.columnMaNV.AllowDBNull = false;
                this.columnMaNV.Unique = true;
                this.columnMaNV.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow NewGIAO_DICH_VIENRow() {
                return ((GIAO_DICH_VIENRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new GIAO_DICH_VIENRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(GIAO_DICH_VIENRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GIAO_DICH_VIENRowChanged != null)) {
                    this.GIAO_DICH_VIENRowChanged(this, new GIAO_DICH_VIENRowChangeEvent(((GIAO_DICH_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GIAO_DICH_VIENRowChanging != null)) {
                    this.GIAO_DICH_VIENRowChanging(this, new GIAO_DICH_VIENRowChangeEvent(((GIAO_DICH_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GIAO_DICH_VIENRowDeleted != null)) {
                    this.GIAO_DICH_VIENRowDeleted(this, new GIAO_DICH_VIENRowChangeEvent(((GIAO_DICH_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GIAO_DICH_VIENRowDeleting != null)) {
                    this.GIAO_DICH_VIENRowDeleting(this, new GIAO_DICH_VIENRowChangeEvent(((GIAO_DICH_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGIAO_DICH_VIENRow(GIAO_DICH_VIENRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GIAO_DICH_VIENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KHACH_HANGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaKH;
            
            private System.Data.DataColumn columnHoTen;
            
            private System.Data.DataColumn columnCMND;
            
            private System.Data.DataColumn columnNgayCap;
            
            private System.Data.DataColumn columnNoiCap;
            
            private System.Data.DataColumn columnDiaChi;
            
            private System.Data.DataColumn columnDienThoai;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGDataTable() {
                this.TableName = "KHACH_HANG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KHACH_HANGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKHColumn {
                get {
                    return this.columnMaKH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HoTenColumn {
                get {
                    return this.columnHoTen;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CMNDColumn {
                get {
                    return this.columnCMND;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayCapColumn {
                get {
                    return this.columnNgayCap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NoiCapColumn {
                get {
                    return this.columnNoiCap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiaChiColumn {
                get {
                    return this.columnDiaChi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DienThoaiColumn {
                get {
                    return this.columnDienThoai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow this[int index] {
                get {
                    return ((KHACH_HANGRow)(this.Rows[index]));
                }
            }
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanging;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowChanged;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleting;
            
            public event KHACH_HANGRowChangeEventHandler KHACH_HANGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow AddKHACH_HANGRow(string MaKH, string HoTen, string CMND, System.DateTime NgayCap, string NoiCap, string DiaChi, string DienThoai) {
                KHACH_HANGRow rowKHACH_HANGRow = ((KHACH_HANGRow)(this.NewRow()));
                rowKHACH_HANGRow.ItemArray = new object[] {
                        MaKH,
                        HoTen,
                        CMND,
                        NgayCap,
                        NoiCap,
                        DiaChi,
                        DienThoai};
                this.Rows.Add(rowKHACH_HANGRow);
                return rowKHACH_HANGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow FindByMaKH(string MaKH) {
                return ((KHACH_HANGRow)(this.Rows.Find(new object[] {
                            MaKH})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                KHACH_HANGDataTable cln = ((KHACH_HANGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new KHACH_HANGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaKH = base.Columns["MaKH"];
                this.columnHoTen = base.Columns["HoTen"];
                this.columnCMND = base.Columns["CMND"];
                this.columnNgayCap = base.Columns["NgayCap"];
                this.columnNoiCap = base.Columns["NoiCap"];
                this.columnDiaChi = base.Columns["DiaChi"];
                this.columnDienThoai = base.Columns["DienThoai"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaKH = new System.Data.DataColumn("MaKH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKH);
                this.columnHoTen = new System.Data.DataColumn("HoTen", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoTen);
                this.columnCMND = new System.Data.DataColumn("CMND", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMND);
                this.columnNgayCap = new System.Data.DataColumn("NgayCap", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayCap);
                this.columnNoiCap = new System.Data.DataColumn("NoiCap", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoiCap);
                this.columnDiaChi = new System.Data.DataColumn("DiaChi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaChi);
                this.columnDienThoai = new System.Data.DataColumn("DienThoai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDienThoai);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaKH}, true));
                this.columnMaKH.AllowDBNull = false;
                this.columnMaKH.Unique = true;
                this.columnMaKH.MaxLength = 10;
                this.columnHoTen.AllowDBNull = false;
                this.columnHoTen.MaxLength = 50;
                this.columnCMND.AllowDBNull = false;
                this.columnCMND.MaxLength = 9;
                this.columnNoiCap.AllowDBNull = false;
                this.columnNoiCap.MaxLength = 50;
                this.columnDiaChi.AllowDBNull = false;
                this.columnDiaChi.MaxLength = 50;
                this.columnDienThoai.MaxLength = 12;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow NewKHACH_HANGRow() {
                return ((KHACH_HANGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new KHACH_HANGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(KHACH_HANGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KHACH_HANGRowChanged != null)) {
                    this.KHACH_HANGRowChanged(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KHACH_HANGRowChanging != null)) {
                    this.KHACH_HANGRowChanging(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KHACH_HANGRowDeleted != null)) {
                    this.KHACH_HANGRowDeleted(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KHACH_HANGRowDeleting != null)) {
                    this.KHACH_HANGRowDeleting(this, new KHACH_HANGRowChangeEvent(((KHACH_HANGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKHACH_HANGRow(KHACH_HANGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KHACH_HANGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LAI_SUAT_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTietKiem;
            
            private System.Data.DataColumn columnNgay;
            
            private System.Data.DataColumn columnMucLaiSuat;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMDataTable() {
                this.TableName = "LAI_SUAT_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LAI_SUAT_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LAI_SUAT_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTietKiemColumn {
                get {
                    return this.columnMaLoaiTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayColumn {
                get {
                    return this.columnNgay;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MucLaiSuatColumn {
                get {
                    return this.columnMucLaiSuat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow this[int index] {
                get {
                    return ((LAI_SUAT_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event LAI_SUAT_TIET_KIEMRowChangeEventHandler LAI_SUAT_TIET_KIEMRowChanging;
            
            public event LAI_SUAT_TIET_KIEMRowChangeEventHandler LAI_SUAT_TIET_KIEMRowChanged;
            
            public event LAI_SUAT_TIET_KIEMRowChangeEventHandler LAI_SUAT_TIET_KIEMRowDeleting;
            
            public event LAI_SUAT_TIET_KIEMRowChangeEventHandler LAI_SUAT_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLAI_SUAT_TIET_KIEMRow(LAI_SUAT_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow AddLAI_SUAT_TIET_KIEMRow(LOAI_TIET_KIEMRow parentLOAI_TIET_KIEMRowByF1_LAI_SUAT_TIET_KIEM, System.DateTime Ngay, double MucLaiSuat) {
                LAI_SUAT_TIET_KIEMRow rowLAI_SUAT_TIET_KIEMRow = ((LAI_SUAT_TIET_KIEMRow)(this.NewRow()));
                rowLAI_SUAT_TIET_KIEMRow.ItemArray = new object[] {
                        parentLOAI_TIET_KIEMRowByF1_LAI_SUAT_TIET_KIEM[0],
                        Ngay,
                        MucLaiSuat};
                this.Rows.Add(rowLAI_SUAT_TIET_KIEMRow);
                return rowLAI_SUAT_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow FindByMaLoaiTietKiemNgay(string MaLoaiTietKiem, System.DateTime Ngay) {
                return ((LAI_SUAT_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            MaLoaiTietKiem,
                            Ngay})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LAI_SUAT_TIET_KIEMDataTable cln = ((LAI_SUAT_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LAI_SUAT_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTietKiem = base.Columns["MaLoaiTietKiem"];
                this.columnNgay = base.Columns["Ngay"];
                this.columnMucLaiSuat = base.Columns["MucLaiSuat"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTietKiem = new System.Data.DataColumn("MaLoaiTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTietKiem);
                this.columnNgay = new System.Data.DataColumn("Ngay", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgay);
                this.columnMucLaiSuat = new System.Data.DataColumn("MucLaiSuat", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMucLaiSuat);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiTietKiem,
                                this.columnNgay}, true));
                this.columnMaLoaiTietKiem.AllowDBNull = false;
                this.columnMaLoaiTietKiem.MaxLength = 10;
                this.columnNgay.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow NewLAI_SUAT_TIET_KIEMRow() {
                return ((LAI_SUAT_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LAI_SUAT_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LAI_SUAT_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LAI_SUAT_TIET_KIEMRowChanged != null)) {
                    this.LAI_SUAT_TIET_KIEMRowChanged(this, new LAI_SUAT_TIET_KIEMRowChangeEvent(((LAI_SUAT_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LAI_SUAT_TIET_KIEMRowChanging != null)) {
                    this.LAI_SUAT_TIET_KIEMRowChanging(this, new LAI_SUAT_TIET_KIEMRowChangeEvent(((LAI_SUAT_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LAI_SUAT_TIET_KIEMRowDeleted != null)) {
                    this.LAI_SUAT_TIET_KIEMRowDeleted(this, new LAI_SUAT_TIET_KIEMRowChangeEvent(((LAI_SUAT_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LAI_SUAT_TIET_KIEMRowDeleting != null)) {
                    this.LAI_SUAT_TIET_KIEMRowDeleting(this, new LAI_SUAT_TIET_KIEMRowChangeEvent(((LAI_SUAT_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLAI_SUAT_TIET_KIEMRow(LAI_SUAT_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LAI_SUAT_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOAI_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTietKiem;
            
            private System.Data.DataColumn columnTenLoaiTietKiem;
            
            private System.Data.DataColumn columnKyHan;
            
            private System.Data.DataColumn columnDangHuyDong;
            
            private System.Data.DataColumn columnMaLoaiTien;
            
            private System.Data.DataColumn columnMaKyTinhLai;
            
            private System.Data.DataColumn columnSoHieuTaiKhoan;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMDataTable() {
                this.TableName = "LOAI_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LOAI_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTietKiemColumn {
                get {
                    return this.columnMaLoaiTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenLoaiTietKiemColumn {
                get {
                    return this.columnTenLoaiTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KyHanColumn {
                get {
                    return this.columnKyHan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DangHuyDongColumn {
                get {
                    return this.columnDangHuyDong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTienColumn {
                get {
                    return this.columnMaLoaiTien;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKyTinhLaiColumn {
                get {
                    return this.columnMaKyTinhLai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoHieuTaiKhoanColumn {
                get {
                    return this.columnSoHieuTaiKhoan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow this[int index] {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowChanging;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowChanged;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowDeleting;
            
            public event LOAI_TIET_KIEMRowChangeEventHandler LOAI_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLOAI_TIET_KIEMRow(LOAI_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow AddLOAI_TIET_KIEMRow(string MaLoaiTietKiem, string TenLoaiTietKiem, int KyHan, bool DangHuyDong, DM_LOAI_TIENRow parentDM_LOAI_TIENRowByF_LOAI_TIET_KIEM, DM_KY_LAI_TIET_KIEMRow parentDM_KY_LAI_TIET_KIEMRowByF1_LOAI_TIET_KIEM, DM_TAI_KHOANRow parentDM_TAI_KHOANRowByF2_LOAI_TIET_KIEM) {
                LOAI_TIET_KIEMRow rowLOAI_TIET_KIEMRow = ((LOAI_TIET_KIEMRow)(this.NewRow()));
                rowLOAI_TIET_KIEMRow.ItemArray = new object[] {
                        MaLoaiTietKiem,
                        TenLoaiTietKiem,
                        KyHan,
                        DangHuyDong,
                        parentDM_LOAI_TIENRowByF_LOAI_TIET_KIEM[0],
                        parentDM_KY_LAI_TIET_KIEMRowByF1_LOAI_TIET_KIEM[0],
                        parentDM_TAI_KHOANRowByF2_LOAI_TIET_KIEM[0]};
                this.Rows.Add(rowLOAI_TIET_KIEMRow);
                return rowLOAI_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow FindByMaLoaiTietKiem(string MaLoaiTietKiem) {
                return ((LOAI_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            MaLoaiTietKiem})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                LOAI_TIET_KIEMDataTable cln = ((LOAI_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new LOAI_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTietKiem = base.Columns["MaLoaiTietKiem"];
                this.columnTenLoaiTietKiem = base.Columns["TenLoaiTietKiem"];
                this.columnKyHan = base.Columns["KyHan"];
                this.columnDangHuyDong = base.Columns["DangHuyDong"];
                this.columnMaLoaiTien = base.Columns["MaLoaiTien"];
                this.columnMaKyTinhLai = base.Columns["MaKyTinhLai"];
                this.columnSoHieuTaiKhoan = base.Columns["SoHieuTaiKhoan"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTietKiem = new System.Data.DataColumn("MaLoaiTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTietKiem);
                this.columnTenLoaiTietKiem = new System.Data.DataColumn("TenLoaiTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenLoaiTietKiem);
                this.columnKyHan = new System.Data.DataColumn("KyHan", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKyHan);
                this.columnDangHuyDong = new System.Data.DataColumn("DangHuyDong", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDangHuyDong);
                this.columnMaLoaiTien = new System.Data.DataColumn("MaLoaiTien", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTien);
                this.columnMaKyTinhLai = new System.Data.DataColumn("MaKyTinhLai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKyTinhLai);
                this.columnSoHieuTaiKhoan = new System.Data.DataColumn("SoHieuTaiKhoan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieuTaiKhoan);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiTietKiem}, true));
                this.columnMaLoaiTietKiem.AllowDBNull = false;
                this.columnMaLoaiTietKiem.Unique = true;
                this.columnMaLoaiTietKiem.MaxLength = 10;
                this.columnTenLoaiTietKiem.AllowDBNull = false;
                this.columnTenLoaiTietKiem.MaxLength = 255;
                this.columnMaLoaiTien.AllowDBNull = false;
                this.columnMaLoaiTien.MaxLength = 10;
                this.columnMaKyTinhLai.AllowDBNull = false;
                this.columnMaKyTinhLai.MaxLength = 10;
                this.columnSoHieuTaiKhoan.AllowDBNull = false;
                this.columnSoHieuTaiKhoan.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow NewLOAI_TIET_KIEMRow() {
                return ((LOAI_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new LOAI_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(LOAI_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOAI_TIET_KIEMRowChanged != null)) {
                    this.LOAI_TIET_KIEMRowChanged(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOAI_TIET_KIEMRowChanging != null)) {
                    this.LOAI_TIET_KIEMRowChanging(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOAI_TIET_KIEMRowDeleted != null)) {
                    this.LOAI_TIET_KIEMRowDeleted(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOAI_TIET_KIEMRowDeleting != null)) {
                    this.LOAI_TIET_KIEMRowDeleting(this, new LOAI_TIET_KIEMRowChangeEvent(((LOAI_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLOAI_TIET_KIEMRow(LOAI_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOAI_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NGAY_GIAO_DICHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNgayGiaoDich;
            
            private System.Data.DataColumn columnNgatGiaoDich;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHDataTable() {
                this.TableName = "NGAY_GIAO_DICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGAY_GIAO_DICHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NGAY_GIAO_DICHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayGiaoDichColumn {
                get {
                    return this.columnNgayGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgatGiaoDichColumn {
                get {
                    return this.columnNgatGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow this[int index] {
                get {
                    return ((NGAY_GIAO_DICHRow)(this.Rows[index]));
                }
            }
            
            public event NGAY_GIAO_DICHRowChangeEventHandler NGAY_GIAO_DICHRowChanging;
            
            public event NGAY_GIAO_DICHRowChangeEventHandler NGAY_GIAO_DICHRowChanged;
            
            public event NGAY_GIAO_DICHRowChangeEventHandler NGAY_GIAO_DICHRowDeleting;
            
            public event NGAY_GIAO_DICHRowChangeEventHandler NGAY_GIAO_DICHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNGAY_GIAO_DICHRow(NGAY_GIAO_DICHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow AddNGAY_GIAO_DICHRow(System.DateTime NgayGiaoDich, bool NgatGiaoDich) {
                NGAY_GIAO_DICHRow rowNGAY_GIAO_DICHRow = ((NGAY_GIAO_DICHRow)(this.NewRow()));
                rowNGAY_GIAO_DICHRow.ItemArray = new object[] {
                        NgayGiaoDich,
                        NgatGiaoDich};
                this.Rows.Add(rowNGAY_GIAO_DICHRow);
                return rowNGAY_GIAO_DICHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow FindByNgayGiaoDich(System.DateTime NgayGiaoDich) {
                return ((NGAY_GIAO_DICHRow)(this.Rows.Find(new object[] {
                            NgayGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NGAY_GIAO_DICHDataTable cln = ((NGAY_GIAO_DICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NGAY_GIAO_DICHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNgayGiaoDich = base.Columns["NgayGiaoDich"];
                this.columnNgatGiaoDich = base.Columns["NgatGiaoDich"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNgayGiaoDich = new System.Data.DataColumn("NgayGiaoDich", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayGiaoDich);
                this.columnNgatGiaoDich = new System.Data.DataColumn("NgatGiaoDich", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgatGiaoDich);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnNgayGiaoDich}, true));
                this.columnNgayGiaoDich.AllowDBNull = false;
                this.columnNgayGiaoDich.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow NewNGAY_GIAO_DICHRow() {
                return ((NGAY_GIAO_DICHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NGAY_GIAO_DICHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NGAY_GIAO_DICHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NGAY_GIAO_DICHRowChanged != null)) {
                    this.NGAY_GIAO_DICHRowChanged(this, new NGAY_GIAO_DICHRowChangeEvent(((NGAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NGAY_GIAO_DICHRowChanging != null)) {
                    this.NGAY_GIAO_DICHRowChanging(this, new NGAY_GIAO_DICHRowChangeEvent(((NGAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NGAY_GIAO_DICHRowDeleted != null)) {
                    this.NGAY_GIAO_DICHRowDeleted(this, new NGAY_GIAO_DICHRowChangeEvent(((NGAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NGAY_GIAO_DICHRowDeleting != null)) {
                    this.NGAY_GIAO_DICHRowDeleting(this, new NGAY_GIAO_DICHRowChangeEvent(((NGAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNGAY_GIAO_DICHRow(NGAY_GIAO_DICHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NGAY_GIAO_DICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NHAN_VIENDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaNV;
            
            private System.Data.DataColumn columnHoTen;
            
            private System.Data.DataColumn columnNgaySinh;
            
            private System.Data.DataColumn columnDiaChi;
            
            private System.Data.DataColumn columnDienThoai;
            
            private System.Data.DataColumn columnMaPhongGiaoDich;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENDataTable() {
                this.TableName = "NHAN_VIEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHAN_VIENDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NHAN_VIENDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNVColumn {
                get {
                    return this.columnMaNV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HoTenColumn {
                get {
                    return this.columnHoTen;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgaySinhColumn {
                get {
                    return this.columnNgaySinh;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiaChiColumn {
                get {
                    return this.columnDiaChi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DienThoaiColumn {
                get {
                    return this.columnDienThoai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongGiaoDichColumn {
                get {
                    return this.columnMaPhongGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow this[int index] {
                get {
                    return ((NHAN_VIENRow)(this.Rows[index]));
                }
            }
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowChanging;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowChanged;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowDeleting;
            
            public event NHAN_VIENRowChangeEventHandler NHAN_VIENRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNHAN_VIENRow(NHAN_VIENRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow AddNHAN_VIENRow(string MaNV, string HoTen, System.DateTime NgaySinh, string DiaChi, string DienThoai, PHONG_GIAO_DICHRow parentPHONG_GIAO_DICHRowByF1_NHAN_VIEN) {
                NHAN_VIENRow rowNHAN_VIENRow = ((NHAN_VIENRow)(this.NewRow()));
                rowNHAN_VIENRow.ItemArray = new object[] {
                        MaNV,
                        HoTen,
                        NgaySinh,
                        DiaChi,
                        DienThoai,
                        parentPHONG_GIAO_DICHRowByF1_NHAN_VIEN[0]};
                this.Rows.Add(rowNHAN_VIENRow);
                return rowNHAN_VIENRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow FindByMaNV(string MaNV) {
                return ((NHAN_VIENRow)(this.Rows.Find(new object[] {
                            MaNV})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NHAN_VIENDataTable cln = ((NHAN_VIENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NHAN_VIENDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaNV = base.Columns["MaNV"];
                this.columnHoTen = base.Columns["HoTen"];
                this.columnNgaySinh = base.Columns["NgaySinh"];
                this.columnDiaChi = base.Columns["DiaChi"];
                this.columnDienThoai = base.Columns["DienThoai"];
                this.columnMaPhongGiaoDich = base.Columns["MaPhongGiaoDich"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaNV = new System.Data.DataColumn("MaNV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNV);
                this.columnHoTen = new System.Data.DataColumn("HoTen", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoTen);
                this.columnNgaySinh = new System.Data.DataColumn("NgaySinh", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgaySinh);
                this.columnDiaChi = new System.Data.DataColumn("DiaChi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaChi);
                this.columnDienThoai = new System.Data.DataColumn("DienThoai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDienThoai);
                this.columnMaPhongGiaoDich = new System.Data.DataColumn("MaPhongGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhongGiaoDich);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNV}, true));
                this.columnMaNV.AllowDBNull = false;
                this.columnMaNV.Unique = true;
                this.columnMaNV.MaxLength = 10;
                this.columnHoTen.AllowDBNull = false;
                this.columnHoTen.MaxLength = 50;
                this.columnDiaChi.AllowDBNull = false;
                this.columnDiaChi.MaxLength = 50;
                this.columnDienThoai.MaxLength = 20;
                this.columnMaPhongGiaoDich.AllowDBNull = false;
                this.columnMaPhongGiaoDich.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NewNHAN_VIENRow() {
                return ((NHAN_VIENRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NHAN_VIENRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NHAN_VIENRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NHAN_VIENRowChanged != null)) {
                    this.NHAN_VIENRowChanged(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NHAN_VIENRowChanging != null)) {
                    this.NHAN_VIENRowChanging(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NHAN_VIENRowDeleted != null)) {
                    this.NHAN_VIENRowDeleted(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NHAN_VIENRowDeleting != null)) {
                    this.NHAN_VIENRowDeleting(this, new NHAN_VIENRowChangeEvent(((NHAN_VIENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNHAN_VIENRow(NHAN_VIENRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NHAN_VIENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NHOM_NGUOI_DUNGDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaNhomNguoiDung;
            
            private System.Data.DataColumn columnTenNhomNguoiDung;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGDataTable() {
                this.TableName = "NHOM_NGUOI_DUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHOM_NGUOI_DUNGDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NHOM_NGUOI_DUNGDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhomNguoiDungColumn {
                get {
                    return this.columnMaNhomNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenNhomNguoiDungColumn {
                get {
                    return this.columnTenNhomNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow this[int index] {
                get {
                    return ((NHOM_NGUOI_DUNGRow)(this.Rows[index]));
                }
            }
            
            public event NHOM_NGUOI_DUNGRowChangeEventHandler NHOM_NGUOI_DUNGRowChanging;
            
            public event NHOM_NGUOI_DUNGRowChangeEventHandler NHOM_NGUOI_DUNGRowChanged;
            
            public event NHOM_NGUOI_DUNGRowChangeEventHandler NHOM_NGUOI_DUNGRowDeleting;
            
            public event NHOM_NGUOI_DUNGRowChangeEventHandler NHOM_NGUOI_DUNGRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNHOM_NGUOI_DUNGRow(NHOM_NGUOI_DUNGRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow AddNHOM_NGUOI_DUNGRow(string MaNhomNguoiDung, string TenNhomNguoiDung) {
                NHOM_NGUOI_DUNGRow rowNHOM_NGUOI_DUNGRow = ((NHOM_NGUOI_DUNGRow)(this.NewRow()));
                rowNHOM_NGUOI_DUNGRow.ItemArray = new object[] {
                        MaNhomNguoiDung,
                        TenNhomNguoiDung};
                this.Rows.Add(rowNHOM_NGUOI_DUNGRow);
                return rowNHOM_NGUOI_DUNGRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow FindByMaNhomNguoiDung(string MaNhomNguoiDung) {
                return ((NHOM_NGUOI_DUNGRow)(this.Rows.Find(new object[] {
                            MaNhomNguoiDung})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                NHOM_NGUOI_DUNGDataTable cln = ((NHOM_NGUOI_DUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new NHOM_NGUOI_DUNGDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaNhomNguoiDung = base.Columns["MaNhomNguoiDung"];
                this.columnTenNhomNguoiDung = base.Columns["TenNhomNguoiDung"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaNhomNguoiDung = new System.Data.DataColumn("MaNhomNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhomNguoiDung);
                this.columnTenNhomNguoiDung = new System.Data.DataColumn("TenNhomNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenNhomNguoiDung);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNhomNguoiDung}, true));
                this.columnMaNhomNguoiDung.AllowDBNull = false;
                this.columnMaNhomNguoiDung.Unique = true;
                this.columnMaNhomNguoiDung.MaxLength = 10;
                this.columnTenNhomNguoiDung.AllowDBNull = false;
                this.columnTenNhomNguoiDung.MaxLength = 30;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow NewNHOM_NGUOI_DUNGRow() {
                return ((NHOM_NGUOI_DUNGRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new NHOM_NGUOI_DUNGRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(NHOM_NGUOI_DUNGRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NHOM_NGUOI_DUNGRowChanged != null)) {
                    this.NHOM_NGUOI_DUNGRowChanged(this, new NHOM_NGUOI_DUNGRowChangeEvent(((NHOM_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NHOM_NGUOI_DUNGRowChanging != null)) {
                    this.NHOM_NGUOI_DUNGRowChanging(this, new NHOM_NGUOI_DUNGRowChangeEvent(((NHOM_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NHOM_NGUOI_DUNGRowDeleted != null)) {
                    this.NHOM_NGUOI_DUNGRowDeleted(this, new NHOM_NGUOI_DUNGRowChangeEvent(((NHOM_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NHOM_NGUOI_DUNGRowDeleting != null)) {
                    this.NHOM_NGUOI_DUNGRowDeleting(this, new NHOM_NGUOI_DUNGRowChangeEvent(((NHOM_NGUOI_DUNGRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNHOM_NGUOI_DUNGRow(NHOM_NGUOI_DUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NHOM_NGUOI_DUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHAN_NHOMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaNV;
            
            private System.Data.DataColumn columnMaNhomNguoiDung;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMDataTable() {
                this.TableName = "PHAN_NHOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHAN_NHOMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHAN_NHOMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNVColumn {
                get {
                    return this.columnMaNV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhomNguoiDungColumn {
                get {
                    return this.columnMaNhomNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow this[int index] {
                get {
                    return ((PHAN_NHOMRow)(this.Rows[index]));
                }
            }
            
            public event PHAN_NHOMRowChangeEventHandler PHAN_NHOMRowChanging;
            
            public event PHAN_NHOMRowChangeEventHandler PHAN_NHOMRowChanged;
            
            public event PHAN_NHOMRowChangeEventHandler PHAN_NHOMRowDeleting;
            
            public event PHAN_NHOMRowChangeEventHandler PHAN_NHOMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHAN_NHOMRow(PHAN_NHOMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow AddPHAN_NHOMRow(NHAN_VIENRow parentNHAN_VIENRowByF1_PHAN_NHOM, NHOM_NGUOI_DUNGRow parentNHOM_NGUOI_DUNGRowByF2_PHAN_NHOM) {
                PHAN_NHOMRow rowPHAN_NHOMRow = ((PHAN_NHOMRow)(this.NewRow()));
                rowPHAN_NHOMRow.ItemArray = new object[] {
                        parentNHAN_VIENRowByF1_PHAN_NHOM[0],
                        parentNHOM_NGUOI_DUNGRowByF2_PHAN_NHOM[0]};
                this.Rows.Add(rowPHAN_NHOMRow);
                return rowPHAN_NHOMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow FindByMaNVMaNhomNguoiDung(string MaNV, string MaNhomNguoiDung) {
                return ((PHAN_NHOMRow)(this.Rows.Find(new object[] {
                            MaNV,
                            MaNhomNguoiDung})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHAN_NHOMDataTable cln = ((PHAN_NHOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHAN_NHOMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaNV = base.Columns["MaNV"];
                this.columnMaNhomNguoiDung = base.Columns["MaNhomNguoiDung"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaNV = new System.Data.DataColumn("MaNV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNV);
                this.columnMaNhomNguoiDung = new System.Data.DataColumn("MaNhomNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhomNguoiDung);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaNV,
                                this.columnMaNhomNguoiDung}, true));
                this.columnMaNV.AllowDBNull = false;
                this.columnMaNV.MaxLength = 10;
                this.columnMaNhomNguoiDung.AllowDBNull = false;
                this.columnMaNhomNguoiDung.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow NewPHAN_NHOMRow() {
                return ((PHAN_NHOMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHAN_NHOMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHAN_NHOMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHAN_NHOMRowChanged != null)) {
                    this.PHAN_NHOMRowChanged(this, new PHAN_NHOMRowChangeEvent(((PHAN_NHOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHAN_NHOMRowChanging != null)) {
                    this.PHAN_NHOMRowChanging(this, new PHAN_NHOMRowChangeEvent(((PHAN_NHOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHAN_NHOMRowDeleted != null)) {
                    this.PHAN_NHOMRowDeleted(this, new PHAN_NHOMRowChangeEvent(((PHAN_NHOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHAN_NHOMRowDeleting != null)) {
                    this.PHAN_NHOMRowDeleting(this, new PHAN_NHOMRowChangeEvent(((PHAN_NHOMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHAN_NHOMRow(PHAN_NHOMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHAN_NHOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHAN_QUYENDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaQuyen;
            
            private System.Data.DataColumn columnMaNhomNguoiDung;
            
            private System.Data.DataColumn columnMaNV;
            
            private System.Data.DataColumn columnMatKhau;
            
            private System.Data.DataColumn columnTenDangNhap;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENDataTable() {
                this.TableName = "PHAN_QUYEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHAN_QUYENDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHAN_QUYENDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaQuyenColumn {
                get {
                    return this.columnMaQuyen;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNhomNguoiDungColumn {
                get {
                    return this.columnMaNhomNguoiDung;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNVColumn {
                get {
                    return this.columnMaNV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MatKhauColumn {
                get {
                    return this.columnMatKhau;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenDangNhapColumn {
                get {
                    return this.columnTenDangNhap;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow this[int index] {
                get {
                    return ((PHAN_QUYENRow)(this.Rows[index]));
                }
            }
            
            public event PHAN_QUYENRowChangeEventHandler PHAN_QUYENRowChanging;
            
            public event PHAN_QUYENRowChangeEventHandler PHAN_QUYENRowChanged;
            
            public event PHAN_QUYENRowChangeEventHandler PHAN_QUYENRowDeleting;
            
            public event PHAN_QUYENRowChangeEventHandler PHAN_QUYENRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHAN_QUYENRow(PHAN_QUYENRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow AddPHAN_QUYENRow(QUYENRow parentQUYENRowByF_PHAN_QUYEN, string MaNhomNguoiDung, NHAN_VIENRow parentNHAN_VIENRowByF1_PHAN_QUYEN, string MatKhau, string TenDangNhap) {
                PHAN_QUYENRow rowPHAN_QUYENRow = ((PHAN_QUYENRow)(this.NewRow()));
                rowPHAN_QUYENRow.ItemArray = new object[] {
                        parentQUYENRowByF_PHAN_QUYEN[0],
                        MaNhomNguoiDung,
                        parentNHAN_VIENRowByF1_PHAN_QUYEN[0],
                        MatKhau,
                        TenDangNhap};
                this.Rows.Add(rowPHAN_QUYENRow);
                return rowPHAN_QUYENRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow FindByMaQuyenMaNhomNguoiDung(string MaQuyen, string MaNhomNguoiDung) {
                return ((PHAN_QUYENRow)(this.Rows.Find(new object[] {
                            MaQuyen,
                            MaNhomNguoiDung})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHAN_QUYENDataTable cln = ((PHAN_QUYENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHAN_QUYENDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaQuyen = base.Columns["MaQuyen"];
                this.columnMaNhomNguoiDung = base.Columns["MaNhomNguoiDung"];
                this.columnMaNV = base.Columns["MaNV"];
                this.columnMatKhau = base.Columns["MatKhau"];
                this.columnTenDangNhap = base.Columns["TenDangNhap"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaQuyen = new System.Data.DataColumn("MaQuyen", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaQuyen);
                this.columnMaNhomNguoiDung = new System.Data.DataColumn("MaNhomNguoiDung", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNhomNguoiDung);
                this.columnMaNV = new System.Data.DataColumn("MaNV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNV);
                this.columnMatKhau = new System.Data.DataColumn("MatKhau", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatKhau);
                this.columnTenDangNhap = new System.Data.DataColumn("TenDangNhap", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenDangNhap);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaQuyen,
                                this.columnMaNhomNguoiDung}, true));
                this.columnMaQuyen.AllowDBNull = false;
                this.columnMaQuyen.MaxLength = 10;
                this.columnMaNhomNguoiDung.AllowDBNull = false;
                this.columnMaNhomNguoiDung.MaxLength = 10;
                this.columnMaNV.AllowDBNull = false;
                this.columnMaNV.MaxLength = 10;
                this.columnMatKhau.AllowDBNull = false;
                this.columnMatKhau.MaxLength = 30;
                this.columnTenDangNhap.AllowDBNull = false;
                this.columnTenDangNhap.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow NewPHAN_QUYENRow() {
                return ((PHAN_QUYENRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHAN_QUYENRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHAN_QUYENRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHAN_QUYENRowChanged != null)) {
                    this.PHAN_QUYENRowChanged(this, new PHAN_QUYENRowChangeEvent(((PHAN_QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHAN_QUYENRowChanging != null)) {
                    this.PHAN_QUYENRowChanging(this, new PHAN_QUYENRowChangeEvent(((PHAN_QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHAN_QUYENRowDeleted != null)) {
                    this.PHAN_QUYENRowDeleted(this, new PHAN_QUYENRowChangeEvent(((PHAN_QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHAN_QUYENRowDeleting != null)) {
                    this.PHAN_QUYENRowDeleting(this, new PHAN_QUYENRowChangeEvent(((PHAN_QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHAN_QUYENRow(PHAN_QUYENRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHAN_QUYENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PHONG_GIAO_DICHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaPhongGiaoDich;
            
            private System.Data.DataColumn columnTenPhong;
            
            private System.Data.DataColumn columnDiaDiem;
            
            private System.Data.DataColumn columnDienThoai;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHDataTable() {
                this.TableName = "PHONG_GIAO_DICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONG_GIAO_DICHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PHONG_GIAO_DICHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongGiaoDichColumn {
                get {
                    return this.columnMaPhongGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenPhongColumn {
                get {
                    return this.columnTenPhong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DiaDiemColumn {
                get {
                    return this.columnDiaDiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DienThoaiColumn {
                get {
                    return this.columnDienThoai;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow this[int index] {
                get {
                    return ((PHONG_GIAO_DICHRow)(this.Rows[index]));
                }
            }
            
            public event PHONG_GIAO_DICHRowChangeEventHandler PHONG_GIAO_DICHRowChanging;
            
            public event PHONG_GIAO_DICHRowChangeEventHandler PHONG_GIAO_DICHRowChanged;
            
            public event PHONG_GIAO_DICHRowChangeEventHandler PHONG_GIAO_DICHRowDeleting;
            
            public event PHONG_GIAO_DICHRowChangeEventHandler PHONG_GIAO_DICHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPHONG_GIAO_DICHRow(PHONG_GIAO_DICHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow AddPHONG_GIAO_DICHRow(string MaPhongGiaoDich, string TenPhong, string DiaDiem, string DienThoai) {
                PHONG_GIAO_DICHRow rowPHONG_GIAO_DICHRow = ((PHONG_GIAO_DICHRow)(this.NewRow()));
                rowPHONG_GIAO_DICHRow.ItemArray = new object[] {
                        MaPhongGiaoDich,
                        TenPhong,
                        DiaDiem,
                        DienThoai};
                this.Rows.Add(rowPHONG_GIAO_DICHRow);
                return rowPHONG_GIAO_DICHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow FindByMaPhongGiaoDich(string MaPhongGiaoDich) {
                return ((PHONG_GIAO_DICHRow)(this.Rows.Find(new object[] {
                            MaPhongGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PHONG_GIAO_DICHDataTable cln = ((PHONG_GIAO_DICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PHONG_GIAO_DICHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaPhongGiaoDich = base.Columns["MaPhongGiaoDich"];
                this.columnTenPhong = base.Columns["TenPhong"];
                this.columnDiaDiem = base.Columns["DiaDiem"];
                this.columnDienThoai = base.Columns["DienThoai"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaPhongGiaoDich = new System.Data.DataColumn("MaPhongGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhongGiaoDich);
                this.columnTenPhong = new System.Data.DataColumn("TenPhong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenPhong);
                this.columnDiaDiem = new System.Data.DataColumn("DiaDiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaDiem);
                this.columnDienThoai = new System.Data.DataColumn("DienThoai", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDienThoai);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaPhongGiaoDich}, true));
                this.columnMaPhongGiaoDich.AllowDBNull = false;
                this.columnMaPhongGiaoDich.Unique = true;
                this.columnMaPhongGiaoDich.MaxLength = 10;
                this.columnTenPhong.AllowDBNull = false;
                this.columnTenPhong.MaxLength = 255;
                this.columnDiaDiem.AllowDBNull = false;
                this.columnDiaDiem.MaxLength = 255;
                this.columnDienThoai.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow NewPHONG_GIAO_DICHRow() {
                return ((PHONG_GIAO_DICHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PHONG_GIAO_DICHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PHONG_GIAO_DICHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PHONG_GIAO_DICHRowChanged != null)) {
                    this.PHONG_GIAO_DICHRowChanged(this, new PHONG_GIAO_DICHRowChangeEvent(((PHONG_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PHONG_GIAO_DICHRowChanging != null)) {
                    this.PHONG_GIAO_DICHRowChanging(this, new PHONG_GIAO_DICHRowChangeEvent(((PHONG_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PHONG_GIAO_DICHRowDeleted != null)) {
                    this.PHONG_GIAO_DICHRowDeleted(this, new PHONG_GIAO_DICHRowChangeEvent(((PHONG_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PHONG_GIAO_DICHRowDeleting != null)) {
                    this.PHONG_GIAO_DICHRowDeleting(this, new PHONG_GIAO_DICHRowChangeEvent(((PHONG_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePHONG_GIAO_DICHRow(PHONG_GIAO_DICHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PHONG_GIAO_DICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PS_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSoButToan;
            
            private System.Data.DataColumn columnNgayGiaoDich;
            
            private System.Data.DataColumn columnDaDuyet;
            
            private System.Data.DataColumn columnMaSoTietKiem;
            
            private System.Data.DataColumn columnMaLoaiGiaoDich;
            
            private System.Data.DataColumn columnMaQuayGiaoDich;
            
            private System.Data.DataColumn columnMaPhongGiaoDich;
            
            private System.Data.DataColumn columnMaNV;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMDataTable() {
                this.TableName = "PS_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PS_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PS_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoButToanColumn {
                get {
                    return this.columnSoButToan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayGiaoDichColumn {
                get {
                    return this.columnNgayGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DaDuyetColumn {
                get {
                    return this.columnDaDuyet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaSoTietKiemColumn {
                get {
                    return this.columnMaSoTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiGiaoDichColumn {
                get {
                    return this.columnMaLoaiGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaQuayGiaoDichColumn {
                get {
                    return this.columnMaQuayGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongGiaoDichColumn {
                get {
                    return this.columnMaPhongGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaNVColumn {
                get {
                    return this.columnMaNV;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow this[int index] {
                get {
                    return ((PS_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event PS_TIET_KIEMRowChangeEventHandler PS_TIET_KIEMRowChanging;
            
            public event PS_TIET_KIEMRowChangeEventHandler PS_TIET_KIEMRowChanged;
            
            public event PS_TIET_KIEMRowChangeEventHandler PS_TIET_KIEMRowDeleting;
            
            public event PS_TIET_KIEMRowChangeEventHandler PS_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPS_TIET_KIEMRow(PS_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow AddPS_TIET_KIEMRow(string SoButToan, NGAY_GIAO_DICHRow parentNGAY_GIAO_DICHRowByF6_PS_TIET_KIEM, bool DaDuyet, SO_TIET_KIEMRow parentSO_TIET_KIEMRowByF2_PS_TIET_KIEM, DM_LOAI_GIAO_DICHRow parentDM_LOAI_GIAO_DICHRowByF1_PS_TIET_KIEM, QUAY_GIAO_DICHRow parentQUAY_GIAO_DICHRowByF3_PS_TIET_KIEM, PHONG_GIAO_DICHRow parentPHONG_GIAO_DICHRowByF4_PS_TIET_KIEM, GIAO_DICH_VIENRow parentGIAO_DICH_VIENRowByF5_PS_TIET_KIEM) {
                PS_TIET_KIEMRow rowPS_TIET_KIEMRow = ((PS_TIET_KIEMRow)(this.NewRow()));
                rowPS_TIET_KIEMRow.ItemArray = new object[] {
                        SoButToan,
                        parentNGAY_GIAO_DICHRowByF6_PS_TIET_KIEM[0],
                        DaDuyet,
                        parentSO_TIET_KIEMRowByF2_PS_TIET_KIEM[1],
                        parentDM_LOAI_GIAO_DICHRowByF1_PS_TIET_KIEM[0],
                        parentQUAY_GIAO_DICHRowByF3_PS_TIET_KIEM[1],
                        parentPHONG_GIAO_DICHRowByF4_PS_TIET_KIEM[0],
                        parentGIAO_DICH_VIENRowByF5_PS_TIET_KIEM[0]};
                this.Rows.Add(rowPS_TIET_KIEMRow);
                return rowPS_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow FindBySoButToanNgayGiaoDich(string SoButToan, System.DateTime NgayGiaoDich) {
                return ((PS_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            SoButToan,
                            NgayGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                PS_TIET_KIEMDataTable cln = ((PS_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new PS_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSoButToan = base.Columns["SoButToan"];
                this.columnNgayGiaoDich = base.Columns["NgayGiaoDich"];
                this.columnDaDuyet = base.Columns["DaDuyet"];
                this.columnMaSoTietKiem = base.Columns["MaSoTietKiem"];
                this.columnMaLoaiGiaoDich = base.Columns["MaLoaiGiaoDich"];
                this.columnMaQuayGiaoDich = base.Columns["MaQuayGiaoDich"];
                this.columnMaPhongGiaoDich = base.Columns["MaPhongGiaoDich"];
                this.columnMaNV = base.Columns["MaNV"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSoButToan = new System.Data.DataColumn("SoButToan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoButToan);
                this.columnNgayGiaoDich = new System.Data.DataColumn("NgayGiaoDich", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayGiaoDich);
                this.columnDaDuyet = new System.Data.DataColumn("DaDuyet", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaDuyet);
                this.columnMaSoTietKiem = new System.Data.DataColumn("MaSoTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaSoTietKiem);
                this.columnMaLoaiGiaoDich = new System.Data.DataColumn("MaLoaiGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiGiaoDich);
                this.columnMaQuayGiaoDich = new System.Data.DataColumn("MaQuayGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaQuayGiaoDich);
                this.columnMaPhongGiaoDich = new System.Data.DataColumn("MaPhongGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhongGiaoDich);
                this.columnMaNV = new System.Data.DataColumn("MaNV", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaNV);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSoButToan,
                                this.columnNgayGiaoDich}, true));
                this.columnSoButToan.AllowDBNull = false;
                this.columnSoButToan.MaxLength = 10;
                this.columnNgayGiaoDich.AllowDBNull = false;
                this.columnMaSoTietKiem.AllowDBNull = false;
                this.columnMaSoTietKiem.MaxLength = 10;
                this.columnMaLoaiGiaoDich.AllowDBNull = false;
                this.columnMaLoaiGiaoDich.MaxLength = 10;
                this.columnMaQuayGiaoDich.AllowDBNull = false;
                this.columnMaQuayGiaoDich.MaxLength = 10;
                this.columnMaPhongGiaoDich.AllowDBNull = false;
                this.columnMaPhongGiaoDich.MaxLength = 10;
                this.columnMaNV.AllowDBNull = false;
                this.columnMaNV.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow NewPS_TIET_KIEMRow() {
                return ((PS_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new PS_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(PS_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PS_TIET_KIEMRowChanged != null)) {
                    this.PS_TIET_KIEMRowChanged(this, new PS_TIET_KIEMRowChangeEvent(((PS_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PS_TIET_KIEMRowChanging != null)) {
                    this.PS_TIET_KIEMRowChanging(this, new PS_TIET_KIEMRowChangeEvent(((PS_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PS_TIET_KIEMRowDeleted != null)) {
                    this.PS_TIET_KIEMRowDeleted(this, new PS_TIET_KIEMRowChangeEvent(((PS_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PS_TIET_KIEMRowDeleting != null)) {
                    this.PS_TIET_KIEMRowDeleting(this, new PS_TIET_KIEMRowChangeEvent(((PS_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePS_TIET_KIEMRow(PS_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PS_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUAY_GIAO_DICHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaPhongGiaoDich;
            
            private System.Data.DataColumn columnMaQuayGiaoDich;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHDataTable() {
                this.TableName = "QUAY_GIAO_DICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUAY_GIAO_DICHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QUAY_GIAO_DICHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaPhongGiaoDichColumn {
                get {
                    return this.columnMaPhongGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaQuayGiaoDichColumn {
                get {
                    return this.columnMaQuayGiaoDich;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow this[int index] {
                get {
                    return ((QUAY_GIAO_DICHRow)(this.Rows[index]));
                }
            }
            
            public event QUAY_GIAO_DICHRowChangeEventHandler QUAY_GIAO_DICHRowChanging;
            
            public event QUAY_GIAO_DICHRowChangeEventHandler QUAY_GIAO_DICHRowChanged;
            
            public event QUAY_GIAO_DICHRowChangeEventHandler QUAY_GIAO_DICHRowDeleting;
            
            public event QUAY_GIAO_DICHRowChangeEventHandler QUAY_GIAO_DICHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQUAY_GIAO_DICHRow(QUAY_GIAO_DICHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow AddQUAY_GIAO_DICHRow(PHONG_GIAO_DICHRow parentPHONG_GIAO_DICHRowByF_QUAY_GIAO_DICH, string MaQuayGiaoDich) {
                QUAY_GIAO_DICHRow rowQUAY_GIAO_DICHRow = ((QUAY_GIAO_DICHRow)(this.NewRow()));
                rowQUAY_GIAO_DICHRow.ItemArray = new object[] {
                        parentPHONG_GIAO_DICHRowByF_QUAY_GIAO_DICH[0],
                        MaQuayGiaoDich};
                this.Rows.Add(rowQUAY_GIAO_DICHRow);
                return rowQUAY_GIAO_DICHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow FindByMaQuayGiaoDich(string MaQuayGiaoDich) {
                return ((QUAY_GIAO_DICHRow)(this.Rows.Find(new object[] {
                            MaQuayGiaoDich})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                QUAY_GIAO_DICHDataTable cln = ((QUAY_GIAO_DICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new QUAY_GIAO_DICHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaPhongGiaoDich = base.Columns["MaPhongGiaoDich"];
                this.columnMaQuayGiaoDich = base.Columns["MaQuayGiaoDich"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaPhongGiaoDich = new System.Data.DataColumn("MaPhongGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaPhongGiaoDich);
                this.columnMaQuayGiaoDich = new System.Data.DataColumn("MaQuayGiaoDich", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaQuayGiaoDich);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaQuayGiaoDich}, true));
                this.columnMaPhongGiaoDich.AllowDBNull = false;
                this.columnMaPhongGiaoDich.MaxLength = 10;
                this.columnMaQuayGiaoDich.AllowDBNull = false;
                this.columnMaQuayGiaoDich.Unique = true;
                this.columnMaQuayGiaoDich.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow NewQUAY_GIAO_DICHRow() {
                return ((QUAY_GIAO_DICHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new QUAY_GIAO_DICHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(QUAY_GIAO_DICHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUAY_GIAO_DICHRowChanged != null)) {
                    this.QUAY_GIAO_DICHRowChanged(this, new QUAY_GIAO_DICHRowChangeEvent(((QUAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUAY_GIAO_DICHRowChanging != null)) {
                    this.QUAY_GIAO_DICHRowChanging(this, new QUAY_GIAO_DICHRowChangeEvent(((QUAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUAY_GIAO_DICHRowDeleted != null)) {
                    this.QUAY_GIAO_DICHRowDeleted(this, new QUAY_GIAO_DICHRowChangeEvent(((QUAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUAY_GIAO_DICHRowDeleting != null)) {
                    this.QUAY_GIAO_DICHRowDeleting(this, new QUAY_GIAO_DICHRowChangeEvent(((QUAY_GIAO_DICHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQUAY_GIAO_DICHRow(QUAY_GIAO_DICHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUAY_GIAO_DICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUYENDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaQuyen;
            
            private System.Data.DataColumn columnTenQuyen;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENDataTable() {
                this.TableName = "QUYEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUYENDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QUYENDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaQuyenColumn {
                get {
                    return this.columnMaQuyen;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TenQuyenColumn {
                get {
                    return this.columnTenQuyen;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow this[int index] {
                get {
                    return ((QUYENRow)(this.Rows[index]));
                }
            }
            
            public event QUYENRowChangeEventHandler QUYENRowChanging;
            
            public event QUYENRowChangeEventHandler QUYENRowChanged;
            
            public event QUYENRowChangeEventHandler QUYENRowDeleting;
            
            public event QUYENRowChangeEventHandler QUYENRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQUYENRow(QUYENRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow AddQUYENRow(string MaQuyen, string TenQuyen) {
                QUYENRow rowQUYENRow = ((QUYENRow)(this.NewRow()));
                rowQUYENRow.ItemArray = new object[] {
                        MaQuyen,
                        TenQuyen};
                this.Rows.Add(rowQUYENRow);
                return rowQUYENRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow FindByMaQuyen(string MaQuyen) {
                return ((QUYENRow)(this.Rows.Find(new object[] {
                            MaQuyen})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                QUYENDataTable cln = ((QUYENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new QUYENDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaQuyen = base.Columns["MaQuyen"];
                this.columnTenQuyen = base.Columns["TenQuyen"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaQuyen = new System.Data.DataColumn("MaQuyen", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaQuyen);
                this.columnTenQuyen = new System.Data.DataColumn("TenQuyen", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenQuyen);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaQuyen}, true));
                this.columnMaQuyen.AllowDBNull = false;
                this.columnMaQuyen.Unique = true;
                this.columnMaQuyen.MaxLength = 10;
                this.columnTenQuyen.AllowDBNull = false;
                this.columnTenQuyen.MaxLength = 30;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow NewQUYENRow() {
                return ((QUYENRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new QUYENRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(QUYENRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUYENRowChanged != null)) {
                    this.QUYENRowChanged(this, new QUYENRowChangeEvent(((QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUYENRowChanging != null)) {
                    this.QUYENRowChanging(this, new QUYENRowChangeEvent(((QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUYENRowDeleted != null)) {
                    this.QUYENRowDeleted(this, new QUYENRowChangeEvent(((QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUYENRowDeleting != null)) {
                    this.QUYENRowDeleting(this, new QUYENRowChangeEvent(((QUYENRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQUYENRow(QUYENRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUYENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SO_DU_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTietKiem;
            
            private System.Data.DataColumn columnMaSoTietKiem;
            
            private System.Data.DataColumn columnNgayCapNhat;
            
            private System.Data.DataColumn columnSoDu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMDataTable() {
                this.TableName = "SO_DU_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_DU_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SO_DU_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTietKiemColumn {
                get {
                    return this.columnMaLoaiTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaSoTietKiemColumn {
                get {
                    return this.columnMaSoTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayCapNhatColumn {
                get {
                    return this.columnNgayCapNhat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoDuColumn {
                get {
                    return this.columnSoDu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow this[int index] {
                get {
                    return ((SO_DU_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event SO_DU_TIET_KIEMRowChangeEventHandler SO_DU_TIET_KIEMRowChanging;
            
            public event SO_DU_TIET_KIEMRowChangeEventHandler SO_DU_TIET_KIEMRowChanged;
            
            public event SO_DU_TIET_KIEMRowChangeEventHandler SO_DU_TIET_KIEMRowDeleting;
            
            public event SO_DU_TIET_KIEMRowChangeEventHandler SO_DU_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSO_DU_TIET_KIEMRow(SO_DU_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow AddSO_DU_TIET_KIEMRow(LOAI_TIET_KIEMRow parentLOAI_TIET_KIEMRowByF2_SO_DU_TIET_KIEM, SO_TIET_KIEMRow parentSO_TIET_KIEMRowByF1_SO_DU_TIET_KIEM, System.DateTime NgayCapNhat, double SoDu) {
                SO_DU_TIET_KIEMRow rowSO_DU_TIET_KIEMRow = ((SO_DU_TIET_KIEMRow)(this.NewRow()));
                rowSO_DU_TIET_KIEMRow.ItemArray = new object[] {
                        parentLOAI_TIET_KIEMRowByF2_SO_DU_TIET_KIEM[0],
                        parentSO_TIET_KIEMRowByF1_SO_DU_TIET_KIEM[1],
                        NgayCapNhat,
                        SoDu};
                this.Rows.Add(rowSO_DU_TIET_KIEMRow);
                return rowSO_DU_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow FindByMaLoaiTietKiemMaSoTietKiemNgayCapNhat(string MaLoaiTietKiem, string MaSoTietKiem, System.DateTime NgayCapNhat) {
                return ((SO_DU_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            MaLoaiTietKiem,
                            MaSoTietKiem,
                            NgayCapNhat})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SO_DU_TIET_KIEMDataTable cln = ((SO_DU_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SO_DU_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTietKiem = base.Columns["MaLoaiTietKiem"];
                this.columnMaSoTietKiem = base.Columns["MaSoTietKiem"];
                this.columnNgayCapNhat = base.Columns["NgayCapNhat"];
                this.columnSoDu = base.Columns["SoDu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTietKiem = new System.Data.DataColumn("MaLoaiTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTietKiem);
                this.columnMaSoTietKiem = new System.Data.DataColumn("MaSoTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaSoTietKiem);
                this.columnNgayCapNhat = new System.Data.DataColumn("NgayCapNhat", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayCapNhat);
                this.columnSoDu = new System.Data.DataColumn("SoDu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoDu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaLoaiTietKiem,
                                this.columnMaSoTietKiem,
                                this.columnNgayCapNhat}, true));
                this.columnMaLoaiTietKiem.AllowDBNull = false;
                this.columnMaLoaiTietKiem.MaxLength = 10;
                this.columnMaSoTietKiem.AllowDBNull = false;
                this.columnMaSoTietKiem.MaxLength = 10;
                this.columnNgayCapNhat.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow NewSO_DU_TIET_KIEMRow() {
                return ((SO_DU_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SO_DU_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SO_DU_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SO_DU_TIET_KIEMRowChanged != null)) {
                    this.SO_DU_TIET_KIEMRowChanged(this, new SO_DU_TIET_KIEMRowChangeEvent(((SO_DU_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SO_DU_TIET_KIEMRowChanging != null)) {
                    this.SO_DU_TIET_KIEMRowChanging(this, new SO_DU_TIET_KIEMRowChangeEvent(((SO_DU_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SO_DU_TIET_KIEMRowDeleted != null)) {
                    this.SO_DU_TIET_KIEMRowDeleted(this, new SO_DU_TIET_KIEMRowChangeEvent(((SO_DU_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SO_DU_TIET_KIEMRowDeleting != null)) {
                    this.SO_DU_TIET_KIEMRowDeleting(this, new SO_DU_TIET_KIEMRowChangeEvent(((SO_DU_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSO_DU_TIET_KIEMRow(SO_DU_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SO_DU_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SO_TIET_KIEMDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMaLoaiTietKiem;
            
            private System.Data.DataColumn columnMaSoTietKiem;
            
            private System.Data.DataColumn columnNgayMoSo;
            
            private System.Data.DataColumn columnNgayHieuLuc;
            
            private System.Data.DataColumn columnNgayDenHan;
            
            private System.Data.DataColumn columnNgayTinhLaiGanNhat;
            
            private System.Data.DataColumn columnNgayTaiKyGui;
            
            private System.Data.DataColumn columnLaiDaTra;
            
            private System.Data.DataColumn columnLaiNhapVon;
            
            private System.Data.DataColumn columnNgayNhapVon;
            
            private System.Data.DataColumn columnPhongToa;
            
            private System.Data.DataColumn columnNgayTatToan;
            
            private System.Data.DataColumn columnMaKH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMDataTable() {
                this.TableName = "SO_TIET_KIEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_TIET_KIEMDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SO_TIET_KIEMDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaLoaiTietKiemColumn {
                get {
                    return this.columnMaLoaiTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaSoTietKiemColumn {
                get {
                    return this.columnMaSoTietKiem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayMoSoColumn {
                get {
                    return this.columnNgayMoSo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayHieuLucColumn {
                get {
                    return this.columnNgayHieuLuc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayDenHanColumn {
                get {
                    return this.columnNgayDenHan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayTinhLaiGanNhatColumn {
                get {
                    return this.columnNgayTinhLaiGanNhat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayTaiKyGuiColumn {
                get {
                    return this.columnNgayTaiKyGui;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LaiDaTraColumn {
                get {
                    return this.columnLaiDaTra;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LaiNhapVonColumn {
                get {
                    return this.columnLaiNhapVon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayNhapVonColumn {
                get {
                    return this.columnNgayNhapVon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PhongToaColumn {
                get {
                    return this.columnPhongToa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayTatToanColumn {
                get {
                    return this.columnNgayTatToan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaKHColumn {
                get {
                    return this.columnMaKH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow this[int index] {
                get {
                    return ((SO_TIET_KIEMRow)(this.Rows[index]));
                }
            }
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowChanging;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowChanged;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowDeleting;
            
            public event SO_TIET_KIEMRowChangeEventHandler SO_TIET_KIEMRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSO_TIET_KIEMRow(SO_TIET_KIEMRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow AddSO_TIET_KIEMRow(LOAI_TIET_KIEMRow parentLOAI_TIET_KIEMRowByF_SO_TIET_KIEM, string MaSoTietKiem, System.DateTime NgayMoSo, System.DateTime NgayHieuLuc, System.DateTime NgayDenHan, System.DateTime NgayTinhLaiGanNhat, System.DateTime NgayTaiKyGui, double LaiDaTra, double LaiNhapVon, System.DateTime NgayNhapVon, bool PhongToa, System.DateTime NgayTatToan, KHACH_HANGRow parentKHACH_HANGRowByF1_SO_TIET_KIEM) {
                SO_TIET_KIEMRow rowSO_TIET_KIEMRow = ((SO_TIET_KIEMRow)(this.NewRow()));
                rowSO_TIET_KIEMRow.ItemArray = new object[] {
                        parentLOAI_TIET_KIEMRowByF_SO_TIET_KIEM[0],
                        MaSoTietKiem,
                        NgayMoSo,
                        NgayHieuLuc,
                        NgayDenHan,
                        NgayTinhLaiGanNhat,
                        NgayTaiKyGui,
                        LaiDaTra,
                        LaiNhapVon,
                        NgayNhapVon,
                        PhongToa,
                        NgayTatToan,
                        parentKHACH_HANGRowByF1_SO_TIET_KIEM[0]};
                this.Rows.Add(rowSO_TIET_KIEMRow);
                return rowSO_TIET_KIEMRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow FindByMaSoTietKiem(string MaSoTietKiem) {
                return ((SO_TIET_KIEMRow)(this.Rows.Find(new object[] {
                            MaSoTietKiem})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SO_TIET_KIEMDataTable cln = ((SO_TIET_KIEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SO_TIET_KIEMDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaLoaiTietKiem = base.Columns["MaLoaiTietKiem"];
                this.columnMaSoTietKiem = base.Columns["MaSoTietKiem"];
                this.columnNgayMoSo = base.Columns["NgayMoSo"];
                this.columnNgayHieuLuc = base.Columns["NgayHieuLuc"];
                this.columnNgayDenHan = base.Columns["NgayDenHan"];
                this.columnNgayTinhLaiGanNhat = base.Columns["NgayTinhLaiGanNhat"];
                this.columnNgayTaiKyGui = base.Columns["NgayTaiKyGui"];
                this.columnLaiDaTra = base.Columns["LaiDaTra"];
                this.columnLaiNhapVon = base.Columns["LaiNhapVon"];
                this.columnNgayNhapVon = base.Columns["NgayNhapVon"];
                this.columnPhongToa = base.Columns["PhongToa"];
                this.columnNgayTatToan = base.Columns["NgayTatToan"];
                this.columnMaKH = base.Columns["MaKH"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaLoaiTietKiem = new System.Data.DataColumn("MaLoaiTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaLoaiTietKiem);
                this.columnMaSoTietKiem = new System.Data.DataColumn("MaSoTietKiem", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaSoTietKiem);
                this.columnNgayMoSo = new System.Data.DataColumn("NgayMoSo", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayMoSo);
                this.columnNgayHieuLuc = new System.Data.DataColumn("NgayHieuLuc", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayHieuLuc);
                this.columnNgayDenHan = new System.Data.DataColumn("NgayDenHan", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayDenHan);
                this.columnNgayTinhLaiGanNhat = new System.Data.DataColumn("NgayTinhLaiGanNhat", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayTinhLaiGanNhat);
                this.columnNgayTaiKyGui = new System.Data.DataColumn("NgayTaiKyGui", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayTaiKyGui);
                this.columnLaiDaTra = new System.Data.DataColumn("LaiDaTra", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaiDaTra);
                this.columnLaiNhapVon = new System.Data.DataColumn("LaiNhapVon", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaiNhapVon);
                this.columnNgayNhapVon = new System.Data.DataColumn("NgayNhapVon", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayNhapVon);
                this.columnPhongToa = new System.Data.DataColumn("PhongToa", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhongToa);
                this.columnNgayTatToan = new System.Data.DataColumn("NgayTatToan", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayTatToan);
                this.columnMaKH = new System.Data.DataColumn("MaKH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaKH);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnMaSoTietKiem}, true));
                this.columnMaLoaiTietKiem.AllowDBNull = false;
                this.columnMaLoaiTietKiem.MaxLength = 10;
                this.columnMaSoTietKiem.AllowDBNull = false;
                this.columnMaSoTietKiem.Unique = true;
                this.columnMaSoTietKiem.MaxLength = 10;
                this.columnMaKH.AllowDBNull = false;
                this.columnMaKH.MaxLength = 10;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow NewSO_TIET_KIEMRow() {
                return ((SO_TIET_KIEMRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SO_TIET_KIEMRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SO_TIET_KIEMRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SO_TIET_KIEMRowChanged != null)) {
                    this.SO_TIET_KIEMRowChanged(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SO_TIET_KIEMRowChanging != null)) {
                    this.SO_TIET_KIEMRowChanging(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SO_TIET_KIEMRowDeleted != null)) {
                    this.SO_TIET_KIEMRowDeleted(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SO_TIET_KIEMRowDeleting != null)) {
                    this.SO_TIET_KIEMRowDeleting(this, new SO_TIET_KIEMRowChangeEvent(((SO_TIET_KIEMRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSO_TIET_KIEMRow(SO_TIET_KIEMRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SO_TIET_KIEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAI_KHOANDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSoHieuTaiKhoan;
            
            private System.Data.DataColumn columnNgayCapNhat;
            
            private System.Data.DataColumn columnSoDuDauNgay;
            
            private System.Data.DataColumn columnSoPhatSinhNo;
            
            private System.Data.DataColumn columnSoPhatSinhCo;
            
            private System.Data.DataColumn columnColumn1;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANDataTable() {
                this.TableName = "TAI_KHOAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAI_KHOANDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAI_KHOANDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoHieuTaiKhoanColumn {
                get {
                    return this.columnSoHieuTaiKhoan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NgayCapNhatColumn {
                get {
                    return this.columnNgayCapNhat;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoDuDauNgayColumn {
                get {
                    return this.columnSoDuDauNgay;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoPhatSinhNoColumn {
                get {
                    return this.columnSoPhatSinhNo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SoPhatSinhCoColumn {
                get {
                    return this.columnSoPhatSinhCo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow this[int index] {
                get {
                    return ((TAI_KHOANRow)(this.Rows[index]));
                }
            }
            
            public event TAI_KHOANRowChangeEventHandler TAI_KHOANRowChanging;
            
            public event TAI_KHOANRowChangeEventHandler TAI_KHOANRowChanged;
            
            public event TAI_KHOANRowChangeEventHandler TAI_KHOANRowDeleting;
            
            public event TAI_KHOANRowChangeEventHandler TAI_KHOANRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAI_KHOANRow(TAI_KHOANRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow AddTAI_KHOANRow(DM_TAI_KHOANRow parentDM_TAI_KHOANRowByF_TAI_KHOAN, System.DateTime NgayCapNhat, double SoDuDauNgay, double SoPhatSinhNo, double SoPhatSinhCo, string Column1) {
                TAI_KHOANRow rowTAI_KHOANRow = ((TAI_KHOANRow)(this.NewRow()));
                rowTAI_KHOANRow.ItemArray = new object[] {
                        parentDM_TAI_KHOANRowByF_TAI_KHOAN[0],
                        NgayCapNhat,
                        SoDuDauNgay,
                        SoPhatSinhNo,
                        SoPhatSinhCo,
                        Column1};
                this.Rows.Add(rowTAI_KHOANRow);
                return rowTAI_KHOANRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow FindBySoHieuTaiKhoanNgayCapNhat(string SoHieuTaiKhoan, System.DateTime NgayCapNhat) {
                return ((TAI_KHOANRow)(this.Rows.Find(new object[] {
                            SoHieuTaiKhoan,
                            NgayCapNhat})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TAI_KHOANDataTable cln = ((TAI_KHOANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TAI_KHOANDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSoHieuTaiKhoan = base.Columns["SoHieuTaiKhoan"];
                this.columnNgayCapNhat = base.Columns["NgayCapNhat"];
                this.columnSoDuDauNgay = base.Columns["SoDuDauNgay"];
                this.columnSoPhatSinhNo = base.Columns["SoPhatSinhNo"];
                this.columnSoPhatSinhCo = base.Columns["SoPhatSinhCo"];
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSoHieuTaiKhoan = new System.Data.DataColumn("SoHieuTaiKhoan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoHieuTaiKhoan);
                this.columnNgayCapNhat = new System.Data.DataColumn("NgayCapNhat", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgayCapNhat);
                this.columnSoDuDauNgay = new System.Data.DataColumn("SoDuDauNgay", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoDuDauNgay);
                this.columnSoPhatSinhNo = new System.Data.DataColumn("SoPhatSinhNo", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoPhatSinhNo);
                this.columnSoPhatSinhCo = new System.Data.DataColumn("SoPhatSinhCo", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoPhatSinhCo);
                this.columnColumn1 = new System.Data.DataColumn("Column1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnSoHieuTaiKhoan,
                                this.columnNgayCapNhat}, true));
                this.columnSoHieuTaiKhoan.AllowDBNull = false;
                this.columnSoHieuTaiKhoan.MaxLength = 20;
                this.columnNgayCapNhat.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow NewTAI_KHOANRow() {
                return ((TAI_KHOANRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TAI_KHOANRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TAI_KHOANRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAI_KHOANRowChanged != null)) {
                    this.TAI_KHOANRowChanged(this, new TAI_KHOANRowChangeEvent(((TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAI_KHOANRowChanging != null)) {
                    this.TAI_KHOANRowChanging(this, new TAI_KHOANRowChangeEvent(((TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAI_KHOANRowDeleted != null)) {
                    this.TAI_KHOANRowDeleted(this, new TAI_KHOANRowChangeEvent(((TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAI_KHOANRowDeleting != null)) {
                    this.TAI_KHOANRowDeleting(this, new TAI_KHOANRowChangeEvent(((TAI_KHOANRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAI_KHOANRow(TAI_KHOANRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAI_KHOANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHI_TIET_PSGDRow : System.Data.DataRow {
            
            private CHI_TIET_PSGDDataTable tableCHI_TIET_PSGD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHI_TIET_PSGDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHI_TIET_PSGD = ((CHI_TIET_PSGDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoGiaoDich {
                get {
                    return ((string)(this[this.tableCHI_TIET_PSGD.SoGiaoDichColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PSGD.SoGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoButToan {
                get {
                    return ((string)(this[this.tableCHI_TIET_PSGD.SoButToanColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PSGD.SoButToanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayGiaoDich {
                get {
                    return ((System.DateTime)(this[this.tableCHI_TIET_PSGD.NgayGiaoDichColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PSGD.NgayGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieuTaiKhoanNo {
                get {
                    return ((string)(this[this.tableCHI_TIET_PSGD.SoHieuTaiKhoanNoColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PSGD.SoHieuTaiKhoanNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieuTaiKhoanCo {
                get {
                    return ((string)(this[this.tableCHI_TIET_PSGD.SoHieuTaiKhoanCoColumn]));
                }
                set {
                    this[this.tableCHI_TIET_PSGD.SoHieuTaiKhoanCoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoTien {
                get {
                    try {
                        return ((double)(this[this.tableCHI_TIET_PSGD.SoTienColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoTien\' in table \'CHI_TIET_PSGD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHI_TIET_PSGD.SoTienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow DM_TAI_KHOANRowByF3_CHI_TIET_PSGD {
                get {
                    return ((DM_TAI_KHOANRow)(this.GetParentRow(this.Table.ParentRelations["F3_CHI_TIET_PSGD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F3_CHI_TIET_PSGD"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow DM_TAI_KHOANRowByF4_CHI_TIET_PSGD {
                get {
                    return ((DM_TAI_KHOANRow)(this.GetParentRow(this.Table.ParentRelations["F4_CHI_TIET_PSGD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F4_CHI_TIET_PSGD"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow PS_TIET_KIEMRowParent {
                get {
                    return ((PS_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F2_CHI_TIET_PSGD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F2_CHI_TIET_PSGD"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoTienNull() {
                return this.IsNull(this.tableCHI_TIET_PSGD.SoTienColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoTienNull() {
                this[this.tableCHI_TIET_PSGD.SoTienColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DM_KY_LAI_TIET_KIEMRow : System.Data.DataRow {
            
            private DM_KY_LAI_TIET_KIEMDataTable tableDM_KY_LAI_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_KY_LAI_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDM_KY_LAI_TIET_KIEM = ((DM_KY_LAI_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKyTinhLai {
                get {
                    return ((string)(this[this.tableDM_KY_LAI_TIET_KIEM.MaKyTinhLaiColumn]));
                }
                set {
                    this[this.tableDM_KY_LAI_TIET_KIEM.MaKyTinhLaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LoaiKyTinhLai {
                get {
                    return ((string)(this[this.tableDM_KY_LAI_TIET_KIEM.LoaiKyTinhLaiColumn]));
                }
                set {
                    this[this.tableDM_KY_LAI_TIET_KIEM.LoaiKyTinhLaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow[] GetLOAI_TIET_KIEMRows() {
                return ((LOAI_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_LOAI_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DM_LOAI_GIAO_DICHRow : System.Data.DataRow {
            
            private DM_LOAI_GIAO_DICHDataTable tableDM_LOAI_GIAO_DICH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_LOAI_GIAO_DICHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDM_LOAI_GIAO_DICH = ((DM_LOAI_GIAO_DICHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiGiaoDich {
                get {
                    return ((string)(this[this.tableDM_LOAI_GIAO_DICH.MaLoaiGiaoDichColumn]));
                }
                set {
                    this[this.tableDM_LOAI_GIAO_DICH.MaLoaiGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenGiaoDich {
                get {
                    return ((string)(this[this.tableDM_LOAI_GIAO_DICH.TenGiaoDichColumn]));
                }
                set {
                    this[this.tableDM_LOAI_GIAO_DICH.TenGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_PS_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DM_LOAI_TIENRow : System.Data.DataRow {
            
            private DM_LOAI_TIENDataTable tableDM_LOAI_TIEN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_LOAI_TIENRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDM_LOAI_TIEN = ((DM_LOAI_TIENDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTien {
                get {
                    return ((string)(this[this.tableDM_LOAI_TIEN.MaLoaiTienColumn]));
                }
                set {
                    this[this.tableDM_LOAI_TIEN.MaLoaiTienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LoaiTien {
                get {
                    return ((string)(this[this.tableDM_LOAI_TIEN.LoaiTienColumn]));
                }
                set {
                    this[this.tableDM_LOAI_TIEN.LoaiTienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow[] GetLOAI_TIET_KIEMRows() {
                return ((LOAI_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F_LOAI_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DM_TAI_KHOANRow : System.Data.DataRow {
            
            private DM_TAI_KHOANDataTable tableDM_TAI_KHOAN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DM_TAI_KHOANRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDM_TAI_KHOAN = ((DM_TAI_KHOANDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieuTaiKhoan {
                get {
                    return ((string)(this[this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn]));
                }
                set {
                    this[this.tableDM_TAI_KHOAN.SoHieuTaiKhoanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenTaiKhoan {
                get {
                    return ((string)(this[this.tableDM_TAI_KHOAN.TenTaiKhoanColumn]));
                }
                set {
                    this[this.tableDM_TAI_KHOAN.TenTaiKhoanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinhChatSoDu {
                get {
                    try {
                        return ((string)(this[this.tableDM_TAI_KHOAN.TinhChatSoDuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TinhChatSoDu\' in table \'DM_TAI_KHOAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDM_TAI_KHOAN.TinhChatSoDuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinhChatSoDuNull() {
                return this.IsNull(this.tableDM_TAI_KHOAN.TinhChatSoDuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinhChatSoDuNull() {
                this[this.tableDM_TAI_KHOAN.TinhChatSoDuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow[] GetCHI_TIET_PSGDRowsByF3_CHI_TIET_PSGD() {
                return ((CHI_TIET_PSGDRow[])(base.GetChildRows(this.Table.ChildRelations["F3_CHI_TIET_PSGD"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow[] GetCHI_TIET_PSGDRowsByF4_CHI_TIET_PSGD() {
                return ((CHI_TIET_PSGDRow[])(base.GetChildRows(this.Table.ChildRelations["F4_CHI_TIET_PSGD"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow[] GetLOAI_TIET_KIEMRows() {
                return ((LOAI_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F2_LOAI_TIET_KIEM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow[] GetTAI_KHOANRows() {
                return ((TAI_KHOANRow[])(base.GetChildRows(this.Table.ChildRelations["F_TAI_KHOAN"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GIAO_DICH_VIENRow : System.Data.DataRow {
            
            private GIAO_DICH_VIENDataTable tableGIAO_DICH_VIEN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GIAO_DICH_VIENRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGIAO_DICH_VIEN = ((GIAO_DICH_VIENDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNV {
                get {
                    return ((string)(this[this.tableGIAO_DICH_VIEN.MaNVColumn]));
                }
                set {
                    this[this.tableGIAO_DICH_VIEN.MaNVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HanMucthu {
                get {
                    try {
                        return ((double)(this[this.tableGIAO_DICH_VIEN.HanMucthuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HanMucthu\' in table \'GIAO_DICH_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGIAO_DICH_VIEN.HanMucthuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HanMucChi {
                get {
                    try {
                        return ((double)(this[this.tableGIAO_DICH_VIEN.HanMucChiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HanMucChi\' in table \'GIAO_DICH_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGIAO_DICH_VIEN.HanMucChiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HanMucTonQuy {
                get {
                    try {
                        return ((double)(this[this.tableGIAO_DICH_VIEN.HanMucTonQuyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HanMucTonQuy\' in table \'GIAO_DICH_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGIAO_DICH_VIEN.HanMucTonQuyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHanMucthuNull() {
                return this.IsNull(this.tableGIAO_DICH_VIEN.HanMucthuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHanMucthuNull() {
                this[this.tableGIAO_DICH_VIEN.HanMucthuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHanMucChiNull() {
                return this.IsNull(this.tableGIAO_DICH_VIEN.HanMucChiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHanMucChiNull() {
                this[this.tableGIAO_DICH_VIEN.HanMucChiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHanMucTonQuyNull() {
                return this.IsNull(this.tableGIAO_DICH_VIEN.HanMucTonQuyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHanMucTonQuyNull() {
                this[this.tableGIAO_DICH_VIEN.HanMucTonQuyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F5_PS_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KHACH_HANGRow : System.Data.DataRow {
            
            private KHACH_HANGDataTable tableKHACH_HANG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KHACH_HANGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKHACH_HANG = ((KHACH_HANGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKH {
                get {
                    return ((string)(this[this.tableKHACH_HANG.MaKHColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.MaKHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoTen {
                get {
                    return ((string)(this[this.tableKHACH_HANG.HoTenColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.HoTenColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CMND {
                get {
                    return ((string)(this[this.tableKHACH_HANG.CMNDColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.CMNDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayCap {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableKHACH_HANG.NgayCapColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayCap\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.NgayCapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoiCap {
                get {
                    return ((string)(this[this.tableKHACH_HANG.NoiCapColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.NoiCapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaChi {
                get {
                    return ((string)(this[this.tableKHACH_HANG.DiaChiColumn]));
                }
                set {
                    this[this.tableKHACH_HANG.DiaChiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DienThoai {
                get {
                    try {
                        return ((string)(this[this.tableKHACH_HANG.DienThoaiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DienThoai\' in table \'KHACH_HANG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKHACH_HANG.DienThoaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayCapNull() {
                return this.IsNull(this.tableKHACH_HANG.NgayCapColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayCapNull() {
                this[this.tableKHACH_HANG.NgayCapColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDienThoaiNull() {
                return this.IsNull(this.tableKHACH_HANG.DienThoaiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDienThoaiNull() {
                this[this.tableKHACH_HANG.DienThoaiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow[] GetSO_TIET_KIEMRows() {
                return ((SO_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_SO_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LAI_SUAT_TIET_KIEMRow : System.Data.DataRow {
            
            private LAI_SUAT_TIET_KIEMDataTable tableLAI_SUAT_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LAI_SUAT_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLAI_SUAT_TIET_KIEM = ((LAI_SUAT_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTietKiem {
                get {
                    return ((string)(this[this.tableLAI_SUAT_TIET_KIEM.MaLoaiTietKiemColumn]));
                }
                set {
                    this[this.tableLAI_SUAT_TIET_KIEM.MaLoaiTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Ngay {
                get {
                    return ((System.DateTime)(this[this.tableLAI_SUAT_TIET_KIEM.NgayColumn]));
                }
                set {
                    this[this.tableLAI_SUAT_TIET_KIEM.NgayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MucLaiSuat {
                get {
                    try {
                        return ((double)(this[this.tableLAI_SUAT_TIET_KIEM.MucLaiSuatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MucLaiSuat\' in table \'LAI_SUAT_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLAI_SUAT_TIET_KIEM.MucLaiSuatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow LOAI_TIET_KIEMRow {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F1_LAI_SUAT_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_LAI_SUAT_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMucLaiSuatNull() {
                return this.IsNull(this.tableLAI_SUAT_TIET_KIEM.MucLaiSuatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMucLaiSuatNull() {
                this[this.tableLAI_SUAT_TIET_KIEM.MucLaiSuatColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LOAI_TIET_KIEMRow : System.Data.DataRow {
            
            private LOAI_TIET_KIEMDataTable tableLOAI_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LOAI_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOAI_TIET_KIEM = ((LOAI_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTietKiem {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.MaLoaiTietKiemColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.MaLoaiTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenLoaiTietKiem {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.TenLoaiTietKiemColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.TenLoaiTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KyHan {
                get {
                    try {
                        return ((int)(this[this.tableLOAI_TIET_KIEM.KyHanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'KyHan\' in table \'LOAI_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.KyHanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DangHuyDong {
                get {
                    try {
                        return ((bool)(this[this.tableLOAI_TIET_KIEM.DangHuyDongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DangHuyDong\' in table \'LOAI_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.DangHuyDongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTien {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.MaLoaiTienColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.MaLoaiTienColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKyTinhLai {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.MaKyTinhLaiColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.MaKyTinhLaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieuTaiKhoan {
                get {
                    return ((string)(this[this.tableLOAI_TIET_KIEM.SoHieuTaiKhoanColumn]));
                }
                set {
                    this[this.tableLOAI_TIET_KIEM.SoHieuTaiKhoanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow DM_LOAI_TIENRow {
                get {
                    return ((DM_LOAI_TIENRow)(this.GetParentRow(this.Table.ParentRelations["F_LOAI_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_LOAI_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow DM_KY_LAI_TIET_KIEMRow {
                get {
                    return ((DM_KY_LAI_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F1_LOAI_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_LOAI_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow DM_TAI_KHOANRow {
                get {
                    return ((DM_TAI_KHOANRow)(this.GetParentRow(this.Table.ParentRelations["F2_LOAI_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F2_LOAI_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKyHanNull() {
                return this.IsNull(this.tableLOAI_TIET_KIEM.KyHanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKyHanNull() {
                this[this.tableLOAI_TIET_KIEM.KyHanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDangHuyDongNull() {
                return this.IsNull(this.tableLOAI_TIET_KIEM.DangHuyDongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDangHuyDongNull() {
                this[this.tableLOAI_TIET_KIEM.DangHuyDongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow[] GetLAI_SUAT_TIET_KIEMRows() {
                return ((LAI_SUAT_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_LAI_SUAT_TIET_KIEM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow[] GetSO_DU_TIET_KIEMRows() {
                return ((SO_DU_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F2_SO_DU_TIET_KIEM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow[] GetSO_TIET_KIEMRows() {
                return ((SO_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F_SO_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NGAY_GIAO_DICHRow : System.Data.DataRow {
            
            private NGAY_GIAO_DICHDataTable tableNGAY_GIAO_DICH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NGAY_GIAO_DICHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNGAY_GIAO_DICH = ((NGAY_GIAO_DICHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayGiaoDich {
                get {
                    return ((System.DateTime)(this[this.tableNGAY_GIAO_DICH.NgayGiaoDichColumn]));
                }
                set {
                    this[this.tableNGAY_GIAO_DICH.NgayGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool NgatGiaoDich {
                get {
                    try {
                        return ((bool)(this[this.tableNGAY_GIAO_DICH.NgatGiaoDichColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgatGiaoDich\' in table \'NGAY_GIAO_DICH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNGAY_GIAO_DICH.NgatGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgatGiaoDichNull() {
                return this.IsNull(this.tableNGAY_GIAO_DICH.NgatGiaoDichColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgatGiaoDichNull() {
                this[this.tableNGAY_GIAO_DICH.NgatGiaoDichColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F6_PS_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NHAN_VIENRow : System.Data.DataRow {
            
            private NHAN_VIENDataTable tableNHAN_VIEN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHAN_VIENRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNHAN_VIEN = ((NHAN_VIENDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNV {
                get {
                    return ((string)(this[this.tableNHAN_VIEN.MaNVColumn]));
                }
                set {
                    this[this.tableNHAN_VIEN.MaNVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoTen {
                get {
                    return ((string)(this[this.tableNHAN_VIEN.HoTenColumn]));
                }
                set {
                    this[this.tableNHAN_VIEN.HoTenColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgaySinh {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableNHAN_VIEN.NgaySinhColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgaySinh\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.NgaySinhColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaChi {
                get {
                    return ((string)(this[this.tableNHAN_VIEN.DiaChiColumn]));
                }
                set {
                    this[this.tableNHAN_VIEN.DiaChiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DienThoai {
                get {
                    try {
                        return ((string)(this[this.tableNHAN_VIEN.DienThoaiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DienThoai\' in table \'NHAN_VIEN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNHAN_VIEN.DienThoaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhongGiaoDich {
                get {
                    return ((string)(this[this.tableNHAN_VIEN.MaPhongGiaoDichColumn]));
                }
                set {
                    this[this.tableNHAN_VIEN.MaPhongGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow PHONG_GIAO_DICHRow {
                get {
                    return ((PHONG_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F1_NHAN_VIEN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_NHAN_VIEN"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgaySinhNull() {
                return this.IsNull(this.tableNHAN_VIEN.NgaySinhColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgaySinhNull() {
                this[this.tableNHAN_VIEN.NgaySinhColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDienThoaiNull() {
                return this.IsNull(this.tableNHAN_VIEN.DienThoaiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDienThoaiNull() {
                this[this.tableNHAN_VIEN.DienThoaiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow[] GetPHAN_NHOMRows() {
                return ((PHAN_NHOMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_PHAN_NHOM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow[] GetPHAN_QUYENRows() {
                return ((PHAN_QUYENRow[])(base.GetChildRows(this.Table.ChildRelations["F1_PHAN_QUYEN"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NHOM_NGUOI_DUNGRow : System.Data.DataRow {
            
            private NHOM_NGUOI_DUNGDataTable tableNHOM_NGUOI_DUNG;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NHOM_NGUOI_DUNGRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNHOM_NGUOI_DUNG = ((NHOM_NGUOI_DUNGDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhomNguoiDung {
                get {
                    return ((string)(this[this.tableNHOM_NGUOI_DUNG.MaNhomNguoiDungColumn]));
                }
                set {
                    this[this.tableNHOM_NGUOI_DUNG.MaNhomNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenNhomNguoiDung {
                get {
                    return ((string)(this[this.tableNHOM_NGUOI_DUNG.TenNhomNguoiDungColumn]));
                }
                set {
                    this[this.tableNHOM_NGUOI_DUNG.TenNhomNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow[] GetPHAN_NHOMRows() {
                return ((PHAN_NHOMRow[])(base.GetChildRows(this.Table.ChildRelations["F2_PHAN_NHOM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHAN_NHOMRow : System.Data.DataRow {
            
            private PHAN_NHOMDataTable tablePHAN_NHOM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHAN_NHOMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHAN_NHOM = ((PHAN_NHOMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNV {
                get {
                    return ((string)(this[this.tablePHAN_NHOM.MaNVColumn]));
                }
                set {
                    this[this.tablePHAN_NHOM.MaNVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhomNguoiDung {
                get {
                    return ((string)(this[this.tablePHAN_NHOM.MaNhomNguoiDungColumn]));
                }
                set {
                    this[this.tablePHAN_NHOM.MaNhomNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NHAN_VIENRow {
                get {
                    return ((NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["F1_PHAN_NHOM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_PHAN_NHOM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow NHOM_NGUOI_DUNGRow {
                get {
                    return ((NHOM_NGUOI_DUNGRow)(this.GetParentRow(this.Table.ParentRelations["F2_PHAN_NHOM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F2_PHAN_NHOM"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHAN_QUYENRow : System.Data.DataRow {
            
            private PHAN_QUYENDataTable tablePHAN_QUYEN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHAN_QUYENRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHAN_QUYEN = ((PHAN_QUYENDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaQuyen {
                get {
                    return ((string)(this[this.tablePHAN_QUYEN.MaQuyenColumn]));
                }
                set {
                    this[this.tablePHAN_QUYEN.MaQuyenColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNhomNguoiDung {
                get {
                    return ((string)(this[this.tablePHAN_QUYEN.MaNhomNguoiDungColumn]));
                }
                set {
                    this[this.tablePHAN_QUYEN.MaNhomNguoiDungColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNV {
                get {
                    return ((string)(this[this.tablePHAN_QUYEN.MaNVColumn]));
                }
                set {
                    this[this.tablePHAN_QUYEN.MaNVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MatKhau {
                get {
                    return ((string)(this[this.tablePHAN_QUYEN.MatKhauColumn]));
                }
                set {
                    this[this.tablePHAN_QUYEN.MatKhauColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenDangNhap {
                get {
                    return ((string)(this[this.tablePHAN_QUYEN.TenDangNhapColumn]));
                }
                set {
                    this[this.tablePHAN_QUYEN.TenDangNhapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow NHAN_VIENRow {
                get {
                    return ((NHAN_VIENRow)(this.GetParentRow(this.Table.ParentRelations["F1_PHAN_QUYEN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_PHAN_QUYEN"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow QUYENRow {
                get {
                    return ((QUYENRow)(this.GetParentRow(this.Table.ParentRelations["F_PHAN_QUYEN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_PHAN_QUYEN"]);
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PHONG_GIAO_DICHRow : System.Data.DataRow {
            
            private PHONG_GIAO_DICHDataTable tablePHONG_GIAO_DICH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PHONG_GIAO_DICHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePHONG_GIAO_DICH = ((PHONG_GIAO_DICHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhongGiaoDich {
                get {
                    return ((string)(this[this.tablePHONG_GIAO_DICH.MaPhongGiaoDichColumn]));
                }
                set {
                    this[this.tablePHONG_GIAO_DICH.MaPhongGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenPhong {
                get {
                    return ((string)(this[this.tablePHONG_GIAO_DICH.TenPhongColumn]));
                }
                set {
                    this[this.tablePHONG_GIAO_DICH.TenPhongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaDiem {
                get {
                    return ((string)(this[this.tablePHONG_GIAO_DICH.DiaDiemColumn]));
                }
                set {
                    this[this.tablePHONG_GIAO_DICH.DiaDiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DienThoai {
                get {
                    try {
                        return ((string)(this[this.tablePHONG_GIAO_DICH.DienThoaiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DienThoai\' in table \'PHONG_GIAO_DICH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePHONG_GIAO_DICH.DienThoaiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDienThoaiNull() {
                return this.IsNull(this.tablePHONG_GIAO_DICH.DienThoaiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDienThoaiNull() {
                this[this.tablePHONG_GIAO_DICH.DienThoaiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow[] GetNHAN_VIENRows() {
                return ((NHAN_VIENRow[])(base.GetChildRows(this.Table.ChildRelations["F1_NHAN_VIEN"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F4_PS_TIET_KIEM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow[] GetQUAY_GIAO_DICHRows() {
                return ((QUAY_GIAO_DICHRow[])(base.GetChildRows(this.Table.ChildRelations["F_QUAY_GIAO_DICH"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PS_TIET_KIEMRow : System.Data.DataRow {
            
            private PS_TIET_KIEMDataTable tablePS_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PS_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePS_TIET_KIEM = ((PS_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoButToan {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.SoButToanColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.SoButToanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayGiaoDich {
                get {
                    return ((System.DateTime)(this[this.tablePS_TIET_KIEM.NgayGiaoDichColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.NgayGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DaDuyet {
                get {
                    try {
                        return ((bool)(this[this.tablePS_TIET_KIEM.DaDuyetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DaDuyet\' in table \'PS_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePS_TIET_KIEM.DaDuyetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaSoTietKiem {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.MaSoTietKiemColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.MaSoTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiGiaoDich {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.MaLoaiGiaoDichColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.MaLoaiGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaQuayGiaoDich {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.MaQuayGiaoDichColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.MaQuayGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhongGiaoDich {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.MaPhongGiaoDichColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.MaPhongGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaNV {
                get {
                    return ((string)(this[this.tablePS_TIET_KIEM.MaNVColumn]));
                }
                set {
                    this[this.tablePS_TIET_KIEM.MaNVColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow DM_LOAI_GIAO_DICHRow {
                get {
                    return ((DM_LOAI_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F1_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow PHONG_GIAO_DICHRow {
                get {
                    return ((PHONG_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F4_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F4_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow GIAO_DICH_VIENRow {
                get {
                    return ((GIAO_DICH_VIENRow)(this.GetParentRow(this.Table.ParentRelations["F5_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F5_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow NGAY_GIAO_DICHRow {
                get {
                    return ((NGAY_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F6_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F6_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow QUAY_GIAO_DICHRow {
                get {
                    return ((QUAY_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F3_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F3_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow SO_TIET_KIEMRow {
                get {
                    return ((SO_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F2_PS_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F2_PS_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaDuyetNull() {
                return this.IsNull(this.tablePS_TIET_KIEM.DaDuyetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaDuyetNull() {
                this[this.tablePS_TIET_KIEM.DaDuyetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow[] GetCHI_TIET_PSGDRows() {
                return ((CHI_TIET_PSGDRow[])(base.GetChildRows(this.Table.ChildRelations["F2_CHI_TIET_PSGD"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QUAY_GIAO_DICHRow : System.Data.DataRow {
            
            private QUAY_GIAO_DICHDataTable tableQUAY_GIAO_DICH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUAY_GIAO_DICHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUAY_GIAO_DICH = ((QUAY_GIAO_DICHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaPhongGiaoDich {
                get {
                    return ((string)(this[this.tableQUAY_GIAO_DICH.MaPhongGiaoDichColumn]));
                }
                set {
                    this[this.tableQUAY_GIAO_DICH.MaPhongGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaQuayGiaoDich {
                get {
                    return ((string)(this[this.tableQUAY_GIAO_DICH.MaQuayGiaoDichColumn]));
                }
                set {
                    this[this.tableQUAY_GIAO_DICH.MaQuayGiaoDichColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow PHONG_GIAO_DICHRow {
                get {
                    return ((PHONG_GIAO_DICHRow)(this.GetParentRow(this.Table.ParentRelations["F_QUAY_GIAO_DICH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_QUAY_GIAO_DICH"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F3_PS_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QUYENRow : System.Data.DataRow {
            
            private QUYENDataTable tableQUYEN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QUYENRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUYEN = ((QUYENDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaQuyen {
                get {
                    return ((string)(this[this.tableQUYEN.MaQuyenColumn]));
                }
                set {
                    this[this.tableQUYEN.MaQuyenColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TenQuyen {
                get {
                    return ((string)(this[this.tableQUYEN.TenQuyenColumn]));
                }
                set {
                    this[this.tableQUYEN.TenQuyenColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow[] GetPHAN_QUYENRows() {
                return ((PHAN_QUYENRow[])(base.GetChildRows(this.Table.ChildRelations["F_PHAN_QUYEN"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SO_DU_TIET_KIEMRow : System.Data.DataRow {
            
            private SO_DU_TIET_KIEMDataTable tableSO_DU_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_DU_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSO_DU_TIET_KIEM = ((SO_DU_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTietKiem {
                get {
                    return ((string)(this[this.tableSO_DU_TIET_KIEM.MaLoaiTietKiemColumn]));
                }
                set {
                    this[this.tableSO_DU_TIET_KIEM.MaLoaiTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaSoTietKiem {
                get {
                    return ((string)(this[this.tableSO_DU_TIET_KIEM.MaSoTietKiemColumn]));
                }
                set {
                    this[this.tableSO_DU_TIET_KIEM.MaSoTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayCapNhat {
                get {
                    return ((System.DateTime)(this[this.tableSO_DU_TIET_KIEM.NgayCapNhatColumn]));
                }
                set {
                    this[this.tableSO_DU_TIET_KIEM.NgayCapNhatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoDu {
                get {
                    try {
                        return ((double)(this[this.tableSO_DU_TIET_KIEM.SoDuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoDu\' in table \'SO_DU_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_DU_TIET_KIEM.SoDuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow LOAI_TIET_KIEMRow {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F2_SO_DU_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F2_SO_DU_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow SO_TIET_KIEMRow {
                get {
                    return ((SO_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F1_SO_DU_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_SO_DU_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoDuNull() {
                return this.IsNull(this.tableSO_DU_TIET_KIEM.SoDuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoDuNull() {
                this[this.tableSO_DU_TIET_KIEM.SoDuColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SO_TIET_KIEMRow : System.Data.DataRow {
            
            private SO_TIET_KIEMDataTable tableSO_TIET_KIEM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SO_TIET_KIEMRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSO_TIET_KIEM = ((SO_TIET_KIEMDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaLoaiTietKiem {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.MaLoaiTietKiemColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.MaLoaiTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaSoTietKiem {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.MaSoTietKiemColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.MaSoTietKiemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayMoSo {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayMoSoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayMoSo\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayMoSoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayHieuLuc {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayHieuLucColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayHieuLuc\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayHieuLucColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayDenHan {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayDenHanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayDenHan\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayDenHanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayTinhLaiGanNhat {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayTinhLaiGanNhatColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayTinhLaiGanNhat\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayTinhLaiGanNhatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayTaiKyGui {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayTaiKyGuiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayTaiKyGui\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayTaiKyGuiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LaiDaTra {
                get {
                    try {
                        return ((double)(this[this.tableSO_TIET_KIEM.LaiDaTraColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LaiDaTra\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.LaiDaTraColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LaiNhapVon {
                get {
                    try {
                        return ((double)(this[this.tableSO_TIET_KIEM.LaiNhapVonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LaiNhapVon\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.LaiNhapVonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayNhapVon {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayNhapVonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayNhapVon\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayNhapVonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PhongToa {
                get {
                    try {
                        return ((bool)(this[this.tableSO_TIET_KIEM.PhongToaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PhongToa\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.PhongToaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayTatToan {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableSO_TIET_KIEM.NgayTatToanColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NgayTatToan\' in table \'SO_TIET_KIEM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSO_TIET_KIEM.NgayTatToanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaKH {
                get {
                    return ((string)(this[this.tableSO_TIET_KIEM.MaKHColumn]));
                }
                set {
                    this[this.tableSO_TIET_KIEM.MaKHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow LOAI_TIET_KIEMRow {
                get {
                    return ((LOAI_TIET_KIEMRow)(this.GetParentRow(this.Table.ParentRelations["F_SO_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_SO_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow KHACH_HANGRow {
                get {
                    return ((KHACH_HANGRow)(this.GetParentRow(this.Table.ParentRelations["F1_SO_TIET_KIEM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F1_SO_TIET_KIEM"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayMoSoNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayMoSoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayMoSoNull() {
                this[this.tableSO_TIET_KIEM.NgayMoSoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayHieuLucNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayHieuLucColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayHieuLucNull() {
                this[this.tableSO_TIET_KIEM.NgayHieuLucColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayDenHanNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayDenHanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayDenHanNull() {
                this[this.tableSO_TIET_KIEM.NgayDenHanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayTinhLaiGanNhatNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayTinhLaiGanNhatColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayTinhLaiGanNhatNull() {
                this[this.tableSO_TIET_KIEM.NgayTinhLaiGanNhatColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayTaiKyGuiNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayTaiKyGuiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayTaiKyGuiNull() {
                this[this.tableSO_TIET_KIEM.NgayTaiKyGuiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaiDaTraNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.LaiDaTraColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaiDaTraNull() {
                this[this.tableSO_TIET_KIEM.LaiDaTraColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLaiNhapVonNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.LaiNhapVonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLaiNhapVonNull() {
                this[this.tableSO_TIET_KIEM.LaiNhapVonColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayNhapVonNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayNhapVonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayNhapVonNull() {
                this[this.tableSO_TIET_KIEM.NgayNhapVonColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhongToaNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.PhongToaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhongToaNull() {
                this[this.tableSO_TIET_KIEM.PhongToaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNgayTatToanNull() {
                return this.IsNull(this.tableSO_TIET_KIEM.NgayTatToanColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNgayTatToanNull() {
                this[this.tableSO_TIET_KIEM.NgayTatToanColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow[] GetPS_TIET_KIEMRows() {
                return ((PS_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F2_PS_TIET_KIEM"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow[] GetSO_DU_TIET_KIEMRows() {
                return ((SO_DU_TIET_KIEMRow[])(base.GetChildRows(this.Table.ChildRelations["F1_SO_DU_TIET_KIEM"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAI_KHOANRow : System.Data.DataRow {
            
            private TAI_KHOANDataTable tableTAI_KHOAN;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAI_KHOANRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAI_KHOAN = ((TAI_KHOANDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SoHieuTaiKhoan {
                get {
                    return ((string)(this[this.tableTAI_KHOAN.SoHieuTaiKhoanColumn]));
                }
                set {
                    this[this.tableTAI_KHOAN.SoHieuTaiKhoanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NgayCapNhat {
                get {
                    return ((System.DateTime)(this[this.tableTAI_KHOAN.NgayCapNhatColumn]));
                }
                set {
                    this[this.tableTAI_KHOAN.NgayCapNhatColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoDuDauNgay {
                get {
                    try {
                        return ((double)(this[this.tableTAI_KHOAN.SoDuDauNgayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoDuDauNgay\' in table \'TAI_KHOAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAI_KHOAN.SoDuDauNgayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoPhatSinhNo {
                get {
                    try {
                        return ((double)(this[this.tableTAI_KHOAN.SoPhatSinhNoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoPhatSinhNo\' in table \'TAI_KHOAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAI_KHOAN.SoPhatSinhNoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoPhatSinhCo {
                get {
                    try {
                        return ((double)(this[this.tableTAI_KHOAN.SoPhatSinhCoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SoPhatSinhCo\' in table \'TAI_KHOAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAI_KHOAN.SoPhatSinhCoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tableTAI_KHOAN.Column1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Column1\' in table \'TAI_KHOAN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAI_KHOAN.Column1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow DM_TAI_KHOANRow {
                get {
                    return ((DM_TAI_KHOANRow)(this.GetParentRow(this.Table.ParentRelations["F_TAI_KHOAN"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["F_TAI_KHOAN"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoDuDauNgayNull() {
                return this.IsNull(this.tableTAI_KHOAN.SoDuDauNgayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoDuDauNgayNull() {
                this[this.tableTAI_KHOAN.SoDuDauNgayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoPhatSinhNoNull() {
                return this.IsNull(this.tableTAI_KHOAN.SoPhatSinhNoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoPhatSinhNoNull() {
                this[this.tableTAI_KHOAN.SoPhatSinhNoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoPhatSinhCoNull() {
                return this.IsNull(this.tableTAI_KHOAN.SoPhatSinhCoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoPhatSinhCoNull() {
                this[this.tableTAI_KHOAN.SoPhatSinhCoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tableTAI_KHOAN.Column1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tableTAI_KHOAN.Column1Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHI_TIET_PSGDRowChangeEvent : System.EventArgs {
            
            private CHI_TIET_PSGDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRowChangeEvent(CHI_TIET_PSGDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHI_TIET_PSGDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DM_KY_LAI_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private DM_KY_LAI_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRowChangeEvent(DM_KY_LAI_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_KY_LAI_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DM_LOAI_GIAO_DICHRowChangeEvent : System.EventArgs {
            
            private DM_LOAI_GIAO_DICHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRowChangeEvent(DM_LOAI_GIAO_DICHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_GIAO_DICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DM_LOAI_TIENRowChangeEvent : System.EventArgs {
            
            private DM_LOAI_TIENRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRowChangeEvent(DM_LOAI_TIENRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_LOAI_TIENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DM_TAI_KHOANRowChangeEvent : System.EventArgs {
            
            private DM_TAI_KHOANRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRowChangeEvent(DM_TAI_KHOANRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DM_TAI_KHOANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GIAO_DICH_VIENRowChangeEvent : System.EventArgs {
            
            private GIAO_DICH_VIENRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRowChangeEvent(GIAO_DICH_VIENRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GIAO_DICH_VIENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KHACH_HANGRowChangeEvent : System.EventArgs {
            
            private KHACH_HANGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRowChangeEvent(KHACH_HANGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KHACH_HANGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LAI_SUAT_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private LAI_SUAT_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRowChangeEvent(LAI_SUAT_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LAI_SUAT_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LOAI_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private LOAI_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRowChangeEvent(LOAI_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LOAI_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NGAY_GIAO_DICHRowChangeEvent : System.EventArgs {
            
            private NGAY_GIAO_DICHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRowChangeEvent(NGAY_GIAO_DICHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NGAY_GIAO_DICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NHAN_VIENRowChangeEvent : System.EventArgs {
            
            private NHAN_VIENRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRowChangeEvent(NHAN_VIENRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHAN_VIENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NHOM_NGUOI_DUNGRowChangeEvent : System.EventArgs {
            
            private NHOM_NGUOI_DUNGRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRowChangeEvent(NHOM_NGUOI_DUNGRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NHOM_NGUOI_DUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHAN_NHOMRowChangeEvent : System.EventArgs {
            
            private PHAN_NHOMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRowChangeEvent(PHAN_NHOMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_NHOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHAN_QUYENRowChangeEvent : System.EventArgs {
            
            private PHAN_QUYENRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRowChangeEvent(PHAN_QUYENRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHAN_QUYENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PHONG_GIAO_DICHRowChangeEvent : System.EventArgs {
            
            private PHONG_GIAO_DICHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRowChangeEvent(PHONG_GIAO_DICHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PHONG_GIAO_DICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PS_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private PS_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRowChangeEvent(PS_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PS_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QUAY_GIAO_DICHRowChangeEvent : System.EventArgs {
            
            private QUAY_GIAO_DICHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRowChangeEvent(QUAY_GIAO_DICHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUAY_GIAO_DICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QUYENRowChangeEvent : System.EventArgs {
            
            private QUYENRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRowChangeEvent(QUYENRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QUYENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SO_DU_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private SO_DU_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRowChangeEvent(SO_DU_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_DU_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SO_TIET_KIEMRowChangeEvent : System.EventArgs {
            
            private SO_TIET_KIEMRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRowChangeEvent(SO_TIET_KIEMRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SO_TIET_KIEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAI_KHOANRowChangeEvent : System.EventArgs {
            
            private TAI_KHOANRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRowChangeEvent(TAI_KHOANRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAI_KHOANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QuanLyTienGuiTietKiem.DataSet.DataSet1TableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHI_TIET_PSGDTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CHI_TIET_PSGDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHI_TIET_PSGD";
            tableMapping.ColumnMappings.Add("SoGiaoDich", "SoGiaoDich");
            tableMapping.ColumnMappings.Add("SoButToan", "SoButToan");
            tableMapping.ColumnMappings.Add("NgayGiaoDich", "NgayGiaoDich");
            tableMapping.ColumnMappings.Add("SoHieuTaiKhoanNo", "SoHieuTaiKhoanNo");
            tableMapping.ColumnMappings.Add("SoHieuTaiKhoanCo", "SoHieuTaiKhoanCo");
            tableMapping.ColumnMappings.Add("SoTien", "SoTien");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CHI_TIET_PSGD] WHERE (([SoGiaoDich] = @Original_SoGiaoDich) AND ([SoButToan] = @Original_SoButToan) AND ([NgayGiaoDich] = @Original_NgayGiaoDich) AND ([SoHieuTaiKhoanNo] = @Original_SoHieuTaiKhoanNo) AND ([SoHieuTaiKhoanCo] = @Original_SoHieuTaiKhoanCo) AND ((@IsNull_SoTien = 1 AND [SoTien] IS NULL) OR ([SoTien] = @Original_SoTien)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoanNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoanCo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanCo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoTien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CHI_TIET_PSGD] ([SoGiaoDich], [SoButToan], [NgayGiaoDich], [SoHieuTaiKhoanNo], [SoHieuTaiKhoanCo], [SoTien]) VALUES (@SoGiaoDich, @SoButToan, @NgayGiaoDich, @SoHieuTaiKhoanNo, @SoHieuTaiKhoanCo, @SoTien);
SELECT SoGiaoDich, SoButToan, NgayGiaoDich, SoHieuTaiKhoanNo, SoHieuTaiKhoanCo, SoTien FROM CHI_TIET_PSGD WHERE (NgayGiaoDich = @NgayGiaoDich) AND (SoButToan = @SoButToan) AND (SoGiaoDich = @SoGiaoDich)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoanNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoanCo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanCo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CHI_TIET_PSGD] SET [SoGiaoDich] = @SoGiaoDich, [SoButToan] = @SoButToan, [NgayGiaoDich] = @NgayGiaoDich, [SoHieuTaiKhoanNo] = @SoHieuTaiKhoanNo, [SoHieuTaiKhoanCo] = @SoHieuTaiKhoanCo, [SoTien] = @SoTien WHERE (([SoGiaoDich] = @Original_SoGiaoDich) AND ([SoButToan] = @Original_SoButToan) AND ([NgayGiaoDich] = @Original_NgayGiaoDich) AND ([SoHieuTaiKhoanNo] = @Original_SoHieuTaiKhoanNo) AND ([SoHieuTaiKhoanCo] = @Original_SoHieuTaiKhoanCo) AND ((@IsNull_SoTien = 1 AND [SoTien] IS NULL) OR ([SoTien] = @Original_SoTien)));
SELECT SoGiaoDich, SoButToan, NgayGiaoDich, SoHieuTaiKhoanNo, SoHieuTaiKhoanCo, SoTien FROM CHI_TIET_PSGD WHERE (NgayGiaoDich = @NgayGiaoDich) AND (SoButToan = @SoButToan) AND (SoGiaoDich = @SoGiaoDich)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoanNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoanCo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanCo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoanNo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoanCo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoanCo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoTien", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoTien", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     CHI_TIET_PSGD.*\r\nFROM         CHI_TIET_PSGD";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CHI_TIET_PSGDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CHI_TIET_PSGDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CHI_TIET_PSGDDataTable dataTable = new DataSet1.CHI_TIET_PSGDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.CHI_TIET_PSGDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CHI_TIET_PSGD");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SoGiaoDich, string Original_SoButToan, System.DateTime Original_NgayGiaoDich, string Original_SoHieuTaiKhoanNo, string Original_SoHieuTaiKhoanCo, System.Nullable<double> Original_SoTien) {
            if ((Original_SoGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_SoGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SoGiaoDich));
            }
            if ((Original_SoButToan == null)) {
                throw new System.ArgumentNullException("Original_SoButToan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SoButToan));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_SoHieuTaiKhoanNo == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoanNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SoHieuTaiKhoanNo));
            }
            if ((Original_SoHieuTaiKhoanCo == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoanCo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SoHieuTaiKhoanCo));
            }
            if ((Original_SoTien.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_SoTien.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SoGiaoDich, string SoButToan, System.DateTime NgayGiaoDich, string SoHieuTaiKhoanNo, string SoHieuTaiKhoanCo, System.Nullable<double> SoTien) {
            if ((SoGiaoDich == null)) {
                throw new System.ArgumentNullException("SoGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SoGiaoDich));
            }
            if ((SoButToan == null)) {
                throw new System.ArgumentNullException("SoButToan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SoButToan));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(NgayGiaoDich));
            if ((SoHieuTaiKhoanNo == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoanNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SoHieuTaiKhoanNo));
            }
            if ((SoHieuTaiKhoanCo == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoanCo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SoHieuTaiKhoanCo));
            }
            if ((SoTien.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(SoTien.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SoGiaoDich, string SoButToan, System.DateTime NgayGiaoDich, string SoHieuTaiKhoanNo, string SoHieuTaiKhoanCo, System.Nullable<double> SoTien, string Original_SoGiaoDich, string Original_SoButToan, System.DateTime Original_NgayGiaoDich, string Original_SoHieuTaiKhoanNo, string Original_SoHieuTaiKhoanCo, System.Nullable<double> Original_SoTien) {
            if ((SoGiaoDich == null)) {
                throw new System.ArgumentNullException("SoGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SoGiaoDich));
            }
            if ((SoButToan == null)) {
                throw new System.ArgumentNullException("SoButToan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SoButToan));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(NgayGiaoDich));
            if ((SoHieuTaiKhoanNo == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoanNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SoHieuTaiKhoanNo));
            }
            if ((SoHieuTaiKhoanCo == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoanCo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SoHieuTaiKhoanCo));
            }
            if ((SoTien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(SoTien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_SoGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_SoGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_SoGiaoDich));
            }
            if ((Original_SoButToan == null)) {
                throw new System.ArgumentNullException("Original_SoButToan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SoButToan));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_SoHieuTaiKhoanNo == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoanNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_SoHieuTaiKhoanNo));
            }
            if ((Original_SoHieuTaiKhoanCo == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoanCo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SoHieuTaiKhoanCo));
            }
            if ((Original_SoTien.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_SoTien.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DM_KY_LAI_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DM_KY_LAI_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DM_KY_LAI_TIET_KIEM";
            tableMapping.ColumnMappings.Add("MaKyTinhLai", "MaKyTinhLai");
            tableMapping.ColumnMappings.Add("LoaiKyTinhLai", "LoaiKyTinhLai");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DM_KY_LAI_TIET_KIEM] WHERE (([MaKyTinhLai] = @Original_MaKyTinhLai) " +
                "AND ([LoaiKyTinhLai] = @Original_LoaiKyTinhLai))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiKyTinhLai", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DM_KY_LAI_TIET_KIEM] ([MaKyTinhLai], [LoaiKyTinhLai]) VALUES (@MaKyT" +
                "inhLai, @LoaiKyTinhLai);\r\nSELECT MaKyTinhLai, LoaiKyTinhLai FROM DM_KY_LAI_TIET_" +
                "KIEM WHERE (MaKyTinhLai = @MaKyTinhLai)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiKyTinhLai", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DM_KY_LAI_TIET_KIEM] SET [MaKyTinhLai] = @MaKyTinhLai, [LoaiKyTinhLai] = @LoaiKyTinhLai WHERE (([MaKyTinhLai] = @Original_MaKyTinhLai) AND ([LoaiKyTinhLai] = @Original_LoaiKyTinhLai));
SELECT MaKyTinhLai, LoaiKyTinhLai FROM DM_KY_LAI_TIET_KIEM WHERE (MaKyTinhLai = @MaKyTinhLai)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiKyTinhLai", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiKyTinhLai", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DM_KY_LAI_TIET_KIEM.*\r\nFROM         DM_KY_LAI_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DM_KY_LAI_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DM_KY_LAI_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DM_KY_LAI_TIET_KIEMDataTable dataTable = new DataSet1.DM_KY_LAI_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DM_KY_LAI_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DM_KY_LAI_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaKyTinhLai, string Original_LoaiKyTinhLai) {
            if ((Original_MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_MaKyTinhLai");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaKyTinhLai));
            }
            if ((Original_LoaiKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_LoaiKyTinhLai");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LoaiKyTinhLai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaKyTinhLai, string LoaiKyTinhLai) {
            if ((MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("MaKyTinhLai");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaKyTinhLai));
            }
            if ((LoaiKyTinhLai == null)) {
                throw new System.ArgumentNullException("LoaiKyTinhLai");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LoaiKyTinhLai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaKyTinhLai, string LoaiKyTinhLai, string Original_MaKyTinhLai, string Original_LoaiKyTinhLai) {
            if ((MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("MaKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaKyTinhLai));
            }
            if ((LoaiKyTinhLai == null)) {
                throw new System.ArgumentNullException("LoaiKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LoaiKyTinhLai));
            }
            if ((Original_MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_MaKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaKyTinhLai));
            }
            if ((Original_LoaiKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_LoaiKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_LoaiKyTinhLai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DM_LOAI_GIAO_DICHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DM_LOAI_GIAO_DICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DM_LOAI_GIAO_DICH";
            tableMapping.ColumnMappings.Add("MaLoaiGiaoDich", "MaLoaiGiaoDich");
            tableMapping.ColumnMappings.Add("TenGiaoDich", "TenGiaoDich");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DM_LOAI_GIAO_DICH] WHERE (([MaLoaiGiaoDich] = @Original_MaLoaiGiaoDi" +
                "ch) AND ([TenGiaoDich] = @Original_TenGiaoDich))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenGiaoDich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DM_LOAI_GIAO_DICH] ([MaLoaiGiaoDich], [TenGiaoDich]) VALUES (@MaLoai" +
                "GiaoDich, @TenGiaoDich);\r\nSELECT MaLoaiGiaoDich, TenGiaoDich FROM DM_LOAI_GIAO_D" +
                "ICH WHERE (MaLoaiGiaoDich = @MaLoaiGiaoDich)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenGiaoDich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DM_LOAI_GIAO_DICH] SET [MaLoaiGiaoDich] = @MaLoaiGiaoDich, [TenGiaoDich] = @TenGiaoDich WHERE (([MaLoaiGiaoDich] = @Original_MaLoaiGiaoDich) AND ([TenGiaoDich] = @Original_TenGiaoDich));
SELECT MaLoaiGiaoDich, TenGiaoDich FROM DM_LOAI_GIAO_DICH WHERE (MaLoaiGiaoDich = @MaLoaiGiaoDich)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenGiaoDich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenGiaoDich", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DM_LOAI_GIAO_DICH.*\r\nFROM         DM_LOAI_GIAO_DICH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DM_LOAI_GIAO_DICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DM_LOAI_GIAO_DICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DM_LOAI_GIAO_DICHDataTable dataTable = new DataSet1.DM_LOAI_GIAO_DICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DM_LOAI_GIAO_DICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DM_LOAI_GIAO_DICH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiGiaoDich, string Original_TenGiaoDich) {
            if ((Original_MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiGiaoDich));
            }
            if ((Original_TenGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_TenGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiGiaoDich, string TenGiaoDich) {
            if ((MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("MaLoaiGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiGiaoDich));
            }
            if ((TenGiaoDich == null)) {
                throw new System.ArgumentNullException("TenGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiGiaoDich, string TenGiaoDich, string Original_MaLoaiGiaoDich, string Original_TenGiaoDich) {
            if ((MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("MaLoaiGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiGiaoDich));
            }
            if ((TenGiaoDich == null)) {
                throw new System.ArgumentNullException("TenGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenGiaoDich));
            }
            if ((Original_MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaLoaiGiaoDich));
            }
            if ((Original_TenGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_TenGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TenGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DM_LOAI_TIENTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DM_LOAI_TIENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DM_LOAI_TIEN";
            tableMapping.ColumnMappings.Add("MaLoaiTien", "MaLoaiTien");
            tableMapping.ColumnMappings.Add("LoaiTien", "LoaiTien");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DM_LOAI_TIEN] WHERE (([MaLoaiTien] = @Original_MaLoaiTien) AND ([Loa" +
                "iTien] = @Original_LoaiTien))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DM_LOAI_TIEN] ([MaLoaiTien], [LoaiTien]) VALUES (@MaLoaiTien, @LoaiT" +
                "ien);\r\nSELECT MaLoaiTien, LoaiTien FROM DM_LOAI_TIEN WHERE (MaLoaiTien = @MaLoai" +
                "Tien)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [DM_LOAI_TIEN] SET [MaLoaiTien] = @MaLoaiTien, [LoaiTien] = @LoaiTien WHER" +
                "E (([MaLoaiTien] = @Original_MaLoaiTien) AND ([LoaiTien] = @Original_LoaiTien));" +
                "\r\nSELECT MaLoaiTien, LoaiTien FROM DM_LOAI_TIEN WHERE (MaLoaiTien = @MaLoaiTien)" +
                "";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "LoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DM_LOAI_TIEN.*\r\nFROM         DM_LOAI_TIEN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DM_LOAI_TIENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DM_LOAI_TIENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DM_LOAI_TIENDataTable dataTable = new DataSet1.DM_LOAI_TIENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DM_LOAI_TIENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DM_LOAI_TIEN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTien, string Original_LoaiTien) {
            if ((Original_MaLoaiTien == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTien");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTien));
            }
            if ((Original_LoaiTien == null)) {
                throw new System.ArgumentNullException("Original_LoaiTien");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LoaiTien));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTien, string LoaiTien) {
            if ((MaLoaiTien == null)) {
                throw new System.ArgumentNullException("MaLoaiTien");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTien));
            }
            if ((LoaiTien == null)) {
                throw new System.ArgumentNullException("LoaiTien");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LoaiTien));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiTien, string LoaiTien, string Original_MaLoaiTien, string Original_LoaiTien) {
            if ((MaLoaiTien == null)) {
                throw new System.ArgumentNullException("MaLoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTien));
            }
            if ((LoaiTien == null)) {
                throw new System.ArgumentNullException("LoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LoaiTien));
            }
            if ((Original_MaLoaiTien == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaLoaiTien));
            }
            if ((Original_LoaiTien == null)) {
                throw new System.ArgumentNullException("Original_LoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_LoaiTien));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DM_TAI_KHOANTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DM_TAI_KHOANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DM_TAI_KHOAN";
            tableMapping.ColumnMappings.Add("SoHieuTaiKhoan", "SoHieuTaiKhoan");
            tableMapping.ColumnMappings.Add("TenTaiKhoan", "TenTaiKhoan");
            tableMapping.ColumnMappings.Add("TinhChatSoDu", "TinhChatSoDu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DM_TAI_KHOAN] WHERE (([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan) A" +
                "ND ([TenTaiKhoan] = @Original_TenTaiKhoan) AND ((@IsNull_TinhChatSoDu = 1 AND [T" +
                "inhChatSoDu] IS NULL) OR ([TinhChatSoDu] = @Original_TinhChatSoDu)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenTaiKhoan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TinhChatSoDu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TinhChatSoDu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [DM_TAI_KHOAN] ([SoHieuTaiKhoan], [TenTaiKhoan], [TinhChatSoDu]) VALU" +
                "ES (@SoHieuTaiKhoan, @TenTaiKhoan, @TinhChatSoDu);\r\nSELECT SoHieuTaiKhoan, TenTa" +
                "iKhoan, TinhChatSoDu FROM DM_TAI_KHOAN WHERE (SoHieuTaiKhoan = @SoHieuTaiKhoan)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenTaiKhoan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TinhChatSoDu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DM_TAI_KHOAN] SET [SoHieuTaiKhoan] = @SoHieuTaiKhoan, [TenTaiKhoan] = @TenTaiKhoan, [TinhChatSoDu] = @TinhChatSoDu WHERE (([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan) AND ([TenTaiKhoan] = @Original_TenTaiKhoan) AND ((@IsNull_TinhChatSoDu = 1 AND [TinhChatSoDu] IS NULL) OR ([TinhChatSoDu] = @Original_TinhChatSoDu)));
SELECT SoHieuTaiKhoan, TenTaiKhoan, TinhChatSoDu FROM DM_TAI_KHOAN WHERE (SoHieuTaiKhoan = @SoHieuTaiKhoan)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenTaiKhoan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TinhChatSoDu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenTaiKhoan", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_TinhChatSoDu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TinhChatSoDu", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TinhChatSoDu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     DM_TAI_KHOAN.*\r\nFROM         DM_TAI_KHOAN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.DM_TAI_KHOANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DM_TAI_KHOANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DM_TAI_KHOANDataTable dataTable = new DataSet1.DM_TAI_KHOANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.DM_TAI_KHOANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DM_TAI_KHOAN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SoHieuTaiKhoan, string Original_TenTaiKhoan, string Original_TinhChatSoDu) {
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            if ((Original_TenTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_TenTaiKhoan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenTaiKhoan));
            }
            if ((Original_TinhChatSoDu == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TinhChatSoDu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SoHieuTaiKhoan, string TenTaiKhoan, string TinhChatSoDu) {
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SoHieuTaiKhoan));
            }
            if ((TenTaiKhoan == null)) {
                throw new System.ArgumentNullException("TenTaiKhoan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenTaiKhoan));
            }
            if ((TinhChatSoDu == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TinhChatSoDu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SoHieuTaiKhoan, string TenTaiKhoan, string TinhChatSoDu, string Original_SoHieuTaiKhoan, string Original_TenTaiKhoan, string Original_TinhChatSoDu) {
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SoHieuTaiKhoan));
            }
            if ((TenTaiKhoan == null)) {
                throw new System.ArgumentNullException("TenTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenTaiKhoan));
            }
            if ((TinhChatSoDu == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TinhChatSoDu));
            }
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            if ((Original_TenTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_TenTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TenTaiKhoan));
            }
            if ((Original_TinhChatSoDu == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TinhChatSoDu));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GIAO_DICH_VIENTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GIAO_DICH_VIENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GIAO_DICH_VIEN";
            tableMapping.ColumnMappings.Add("MaNV", "MaNV");
            tableMapping.ColumnMappings.Add("HanMucthu", "HanMucthu");
            tableMapping.ColumnMappings.Add("HanMucChi", "HanMucChi");
            tableMapping.ColumnMappings.Add("HanMucTonQuy", "HanMucTonQuy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [GIAO_DICH_VIEN] WHERE (([MaNV] = @Original_MaNV) AND ((@IsNull_HanMucthu = 1 AND [HanMucthu] IS NULL) OR ([HanMucthu] = @Original_HanMucthu)) AND ((@IsNull_HanMucChi = 1 AND [HanMucChi] IS NULL) OR ([HanMucChi] = @Original_HanMucChi)) AND ((@IsNull_HanMucTonQuy = 1 AND [HanMucTonQuy] IS NULL) OR ([HanMucTonQuy] = @Original_HanMucTonQuy)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucthu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucthu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucChi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucChi", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucTonQuy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucTonQuy", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [GIAO_DICH_VIEN] ([MaNV], [HanMucthu], [HanMucChi], [HanMucTonQuy]) V" +
                "ALUES (@MaNV, @HanMucthu, @HanMucChi, @HanMucTonQuy);\r\nSELECT MaNV, HanMucthu, H" +
                "anMucChi, HanMucTonQuy FROM GIAO_DICH_VIEN WHERE (MaNV = @MaNV)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucthu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucChi", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucTonQuy", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [GIAO_DICH_VIEN] SET [MaNV] = @MaNV, [HanMucthu] = @HanMucthu, [HanMucChi] = @HanMucChi, [HanMucTonQuy] = @HanMucTonQuy WHERE (([MaNV] = @Original_MaNV) AND ((@IsNull_HanMucthu = 1 AND [HanMucthu] IS NULL) OR ([HanMucthu] = @Original_HanMucthu)) AND ((@IsNull_HanMucChi = 1 AND [HanMucChi] IS NULL) OR ([HanMucChi] = @Original_HanMucChi)) AND ((@IsNull_HanMucTonQuy = 1 AND [HanMucTonQuy] IS NULL) OR ([HanMucTonQuy] = @Original_HanMucTonQuy)));
SELECT MaNV, HanMucthu, HanMucChi, HanMucTonQuy FROM GIAO_DICH_VIEN WHERE (MaNV = @MaNV)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucthu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucChi", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HanMucTonQuy", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucthu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucthu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucthu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucChi", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucChi", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_HanMucTonQuy", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HanMucTonQuy", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "HanMucTonQuy", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     GIAO_DICH_VIEN.*\r\nFROM         GIAO_DICH_VIEN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GIAO_DICH_VIENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GIAO_DICH_VIENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.GIAO_DICH_VIENDataTable dataTable = new DataSet1.GIAO_DICH_VIENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.GIAO_DICH_VIENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "GIAO_DICH_VIEN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaNV, System.Nullable<double> Original_HanMucthu, System.Nullable<double> Original_HanMucChi, System.Nullable<double> Original_HanMucTonQuy) {
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaNV));
            }
            if ((Original_HanMucthu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_HanMucthu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_HanMucChi.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_HanMucChi.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_HanMucTonQuy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_HanMucTonQuy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaNV, System.Nullable<double> HanMucthu, System.Nullable<double> HanMucChi, System.Nullable<double> HanMucTonQuy) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((HanMucthu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(HanMucthu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((HanMucChi.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(HanMucChi.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((HanMucTonQuy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(HanMucTonQuy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaNV, System.Nullable<double> HanMucthu, System.Nullable<double> HanMucChi, System.Nullable<double> HanMucTonQuy, string Original_MaNV, System.Nullable<double> Original_HanMucthu, System.Nullable<double> Original_HanMucChi, System.Nullable<double> Original_HanMucTonQuy) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((HanMucthu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(HanMucthu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((HanMucChi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(HanMucChi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((HanMucTonQuy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(HanMucTonQuy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaNV));
            }
            if ((Original_HanMucthu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Original_HanMucthu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_HanMucChi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_HanMucChi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_HanMucTonQuy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_HanMucTonQuy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KHACH_HANGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KHACH_HANGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KHACH_HANG";
            tableMapping.ColumnMappings.Add("MaKH", "MaKH");
            tableMapping.ColumnMappings.Add("HoTen", "HoTen");
            tableMapping.ColumnMappings.Add("CMND", "CMND");
            tableMapping.ColumnMappings.Add("NgayCap", "NgayCap");
            tableMapping.ColumnMappings.Add("NoiCap", "NoiCap");
            tableMapping.ColumnMappings.Add("DiaChi", "DiaChi");
            tableMapping.ColumnMappings.Add("DienThoai", "DienThoai");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [KHACH_HANG] WHERE (([MaKH] = @Original_MaKH) AND ([HoTen] = @Original_HoTen) AND ([CMND] = @Original_CMND) AND ((@IsNull_NgayCap = 1 AND [NgayCap] IS NULL) OR ([NgayCap] = @Original_NgayCap)) AND ([NoiCap] = @Original_NoiCap) AND ([DiaChi] = @Original_DiaChi) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayCap", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NoiCap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NoiCap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [KHACH_HANG] ([MaKH], [HoTen], [CMND], [NgayCap], [NoiCap], [DiaChi], [DienThoai]) VALUES (@MaKH, @HoTen, @CMND, @NgayCap, @NoiCap, @DiaChi, @DienThoai);
SELECT MaKH, HoTen, CMND, NgayCap, NoiCap, DiaChi, DienThoai FROM KHACH_HANG WHERE (MaKH = @MaKH)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NoiCap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NoiCap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [KHACH_HANG] SET [MaKH] = @MaKH, [HoTen] = @HoTen, [CMND] = @CMND, [NgayCap] = @NgayCap, [NoiCap] = @NoiCap, [DiaChi] = @DiaChi, [DienThoai] = @DienThoai WHERE (([MaKH] = @Original_MaKH) AND ([HoTen] = @Original_HoTen) AND ([CMND] = @Original_CMND) AND ((@IsNull_NgayCap = 1 AND [NgayCap] IS NULL) OR ([NgayCap] = @Original_NgayCap)) AND ([NoiCap] = @Original_NoiCap) AND ([DiaChi] = @Original_DiaChi) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)));
SELECT MaKH, HoTen, CMND, NgayCap, NoiCap, DiaChi, DienThoai FROM KHACH_HANG WHERE (MaKH = @MaKH)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@CMND", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NoiCap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NoiCap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_CMND", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "CMND", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayCap", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCap", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NoiCap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "NoiCap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     KHACH_HANG.*\r\nFROM         KHACH_HANG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.KHACH_HANGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.KHACH_HANGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.KHACH_HANGDataTable dataTable = new DataSet1.KHACH_HANGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.KHACH_HANGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "KHACH_HANG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaKH, string Original_HoTen, string Original_CMND, System.Nullable<System.DateTime> Original_NgayCap, string Original_NoiCap, string Original_DiaChi, string Original_DienThoai) {
            if ((Original_MaKH == null)) {
                throw new System.ArgumentNullException("Original_MaKH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaKH));
            }
            if ((Original_HoTen == null)) {
                throw new System.ArgumentNullException("Original_HoTen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_HoTen));
            }
            if ((Original_CMND == null)) {
                throw new System.ArgumentNullException("Original_CMND");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CMND));
            }
            if ((Original_NgayCap.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_NgayCap.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_NoiCap == null)) {
                throw new System.ArgumentNullException("Original_NoiCap");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_NoiCap));
            }
            if ((Original_DiaChi == null)) {
                throw new System.ArgumentNullException("Original_DiaChi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaKH, string HoTen, string CMND, System.Nullable<System.DateTime> NgayCap, string NoiCap, string DiaChi, string DienThoai) {
            if ((MaKH == null)) {
                throw new System.ArgumentNullException("MaKH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaKH));
            }
            if ((HoTen == null)) {
                throw new System.ArgumentNullException("HoTen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HoTen));
            }
            if ((CMND == null)) {
                throw new System.ArgumentNullException("CMND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CMND));
            }
            if ((NgayCap.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(NgayCap.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NoiCap == null)) {
                throw new System.ArgumentNullException("NoiCap");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NoiCap));
            }
            if ((DiaChi == null)) {
                throw new System.ArgumentNullException("DiaChi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DiaChi));
            }
            if ((DienThoai == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaKH, string HoTen, string CMND, System.Nullable<System.DateTime> NgayCap, string NoiCap, string DiaChi, string DienThoai, string Original_MaKH, string Original_HoTen, string Original_CMND, System.Nullable<System.DateTime> Original_NgayCap, string Original_NoiCap, string Original_DiaChi, string Original_DienThoai) {
            if ((MaKH == null)) {
                throw new System.ArgumentNullException("MaKH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaKH));
            }
            if ((HoTen == null)) {
                throw new System.ArgumentNullException("HoTen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HoTen));
            }
            if ((CMND == null)) {
                throw new System.ArgumentNullException("CMND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CMND));
            }
            if ((NgayCap.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(NgayCap.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NoiCap == null)) {
                throw new System.ArgumentNullException("NoiCap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NoiCap));
            }
            if ((DiaChi == null)) {
                throw new System.ArgumentNullException("DiaChi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DiaChi));
            }
            if ((DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DienThoai));
            }
            if ((Original_MaKH == null)) {
                throw new System.ArgumentNullException("Original_MaKH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaKH));
            }
            if ((Original_HoTen == null)) {
                throw new System.ArgumentNullException("Original_HoTen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_HoTen));
            }
            if ((Original_CMND == null)) {
                throw new System.ArgumentNullException("Original_CMND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_CMND));
            }
            if ((Original_NgayCap.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_NgayCap.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_NoiCap == null)) {
                throw new System.ArgumentNullException("Original_NoiCap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NoiCap));
            }
            if ((Original_DiaChi == null)) {
                throw new System.ArgumentNullException("Original_DiaChi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LAI_SUAT_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LAI_SUAT_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LAI_SUAT_TIET_KIEM";
            tableMapping.ColumnMappings.Add("MaLoaiTietKiem", "MaLoaiTietKiem");
            tableMapping.ColumnMappings.Add("Ngay", "Ngay");
            tableMapping.ColumnMappings.Add("MucLaiSuat", "MucLaiSuat");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LAI_SUAT_TIET_KIEM] WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietK" +
                "iem) AND ([Ngay] = @Original_Ngay) AND ((@IsNull_MucLaiSuat = 1 AND [MucLaiSuat]" +
                " IS NULL) OR ([MucLaiSuat] = @Original_MucLaiSuat)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Ngay", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Ngay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MucLaiSuat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MucLaiSuat", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LAI_SUAT_TIET_KIEM] ([MaLoaiTietKiem], [Ngay], [MucLaiSuat]) VALUES " +
                "(@MaLoaiTietKiem, @Ngay, @MucLaiSuat);\r\nSELECT MaLoaiTietKiem, Ngay, MucLaiSuat " +
                "FROM LAI_SUAT_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem) AND (Ngay = @Ng" +
                "ay)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Ngay", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Ngay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MucLaiSuat", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LAI_SUAT_TIET_KIEM] SET [MaLoaiTietKiem] = @MaLoaiTietKiem, [Ngay] = @Ngay, [MucLaiSuat] = @MucLaiSuat WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([Ngay] = @Original_Ngay) AND ((@IsNull_MucLaiSuat = 1 AND [MucLaiSuat] IS NULL) OR ([MucLaiSuat] = @Original_MucLaiSuat)));
SELECT MaLoaiTietKiem, Ngay, MucLaiSuat FROM LAI_SUAT_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem) AND (Ngay = @Ngay)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Ngay", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Ngay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MucLaiSuat", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_Ngay", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "Ngay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_MucLaiSuat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MucLaiSuat", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "MucLaiSuat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     LAI_SUAT_TIET_KIEM.*\r\nFROM         LAI_SUAT_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.LAI_SUAT_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.LAI_SUAT_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.LAI_SUAT_TIET_KIEMDataTable dataTable = new DataSet1.LAI_SUAT_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.LAI_SUAT_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LAI_SUAT_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTietKiem, System.DateTime Original_Ngay, System.Nullable<double> Original_MucLaiSuat) {
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTietKiem));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Ngay));
            if ((Original_MucLaiSuat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_MucLaiSuat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTietKiem, System.DateTime Ngay, System.Nullable<double> MucLaiSuat) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Ngay));
            if ((MucLaiSuat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(MucLaiSuat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiTietKiem, System.DateTime Ngay, System.Nullable<double> MucLaiSuat, string Original_MaLoaiTietKiem, System.DateTime Original_Ngay, System.Nullable<double> Original_MucLaiSuat) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Ngay));
            if ((MucLaiSuat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(MucLaiSuat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaLoaiTietKiem));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_Ngay));
            if ((Original_MucLaiSuat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Original_MucLaiSuat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOAI_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LOAI_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOAI_TIET_KIEM";
            tableMapping.ColumnMappings.Add("MaLoaiTietKiem", "MaLoaiTietKiem");
            tableMapping.ColumnMappings.Add("TenLoaiTietKiem", "TenLoaiTietKiem");
            tableMapping.ColumnMappings.Add("KyHan", "KyHan");
            tableMapping.ColumnMappings.Add("DangHuyDong", "DangHuyDong");
            tableMapping.ColumnMappings.Add("MaLoaiTien", "MaLoaiTien");
            tableMapping.ColumnMappings.Add("MaKyTinhLai", "MaKyTinhLai");
            tableMapping.ColumnMappings.Add("SoHieuTaiKhoan", "SoHieuTaiKhoan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LOAI_TIET_KIEM] WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([TenLoaiTietKiem] = @Original_TenLoaiTietKiem) AND ((@IsNull_KyHan = 1 AND [KyHan] IS NULL) OR ([KyHan] = @Original_KyHan)) AND ((@IsNull_DangHuyDong = 1 AND [DangHuyDong] IS NULL) OR ([DangHuyDong] = @Original_DangHuyDong)) AND ([MaLoaiTien] = @Original_MaLoaiTien) AND ([MaKyTinhLai] = @Original_MaKyTinhLai) AND ([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiTietKiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DangHuyDong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DangHuyDong", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LOAI_TIET_KIEM] ([MaLoaiTietKiem], [TenLoaiTietKiem], [KyHan], [DangHuyDong], [MaLoaiTien], [MaKyTinhLai], [SoHieuTaiKhoan]) VALUES (@MaLoaiTietKiem, @TenLoaiTietKiem, @KyHan, @DangHuyDong, @MaLoaiTien, @MaKyTinhLai, @SoHieuTaiKhoan);
SELECT MaLoaiTietKiem, TenLoaiTietKiem, KyHan, DangHuyDong, MaLoaiTien, MaKyTinhLai, SoHieuTaiKhoan FROM LOAI_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiTietKiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DangHuyDong", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LOAI_TIET_KIEM] SET [MaLoaiTietKiem] = @MaLoaiTietKiem, [TenLoaiTietKiem] = @TenLoaiTietKiem, [KyHan] = @KyHan, [DangHuyDong] = @DangHuyDong, [MaLoaiTien] = @MaLoaiTien, [MaKyTinhLai] = @MaKyTinhLai, [SoHieuTaiKhoan] = @SoHieuTaiKhoan WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([TenLoaiTietKiem] = @Original_TenLoaiTietKiem) AND ((@IsNull_KyHan = 1 AND [KyHan] IS NULL) OR ([KyHan] = @Original_KyHan)) AND ((@IsNull_DangHuyDong = 1 AND [DangHuyDong] IS NULL) OR ([DangHuyDong] = @Original_DangHuyDong)) AND ([MaLoaiTien] = @Original_MaLoaiTien) AND ([MaKyTinhLai] = @Original_MaKyTinhLai) AND ([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan));
SELECT MaLoaiTietKiem, TenLoaiTietKiem, KyHan, DangHuyDong, MaLoaiTien, MaKyTinhLai, SoHieuTaiKhoan FROM LOAI_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenLoaiTietKiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DangHuyDong", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenLoaiTietKiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_KyHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "KyHan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DangHuyDong", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DangHuyDong", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DangHuyDong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTien", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTien", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKyTinhLai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKyTinhLai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     LOAI_TIET_KIEM.*\r\nFROM         LOAI_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.LOAI_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.LOAI_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.LOAI_TIET_KIEMDataTable dataTable = new DataSet1.LOAI_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.LOAI_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LOAI_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTietKiem, string Original_TenLoaiTietKiem, System.Nullable<int> Original_KyHan, System.Nullable<bool> Original_DangHuyDong, string Original_MaLoaiTien, string Original_MaKyTinhLai, string Original_SoHieuTaiKhoan) {
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_TenLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_TenLoaiTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenLoaiTietKiem));
            }
            if ((Original_KyHan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_KyHan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_DangHuyDong.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_DangHuyDong.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_MaLoaiTien == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTien");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MaLoaiTien));
            }
            if ((Original_MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_MaKyTinhLai");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MaKyTinhLai));
            }
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTietKiem, string TenLoaiTietKiem, System.Nullable<int> KyHan, System.Nullable<bool> DangHuyDong, string MaLoaiTien, string MaKyTinhLai, string SoHieuTaiKhoan) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((TenLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("TenLoaiTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenLoaiTietKiem));
            }
            if ((KyHan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(KyHan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DangHuyDong.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(DangHuyDong.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MaLoaiTien == null)) {
                throw new System.ArgumentNullException("MaLoaiTien");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MaLoaiTien));
            }
            if ((MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("MaKyTinhLai");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MaKyTinhLai));
            }
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SoHieuTaiKhoan));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiTietKiem, string TenLoaiTietKiem, System.Nullable<int> KyHan, System.Nullable<bool> DangHuyDong, string MaLoaiTien, string MaKyTinhLai, string SoHieuTaiKhoan, string Original_MaLoaiTietKiem, string Original_TenLoaiTietKiem, System.Nullable<int> Original_KyHan, System.Nullable<bool> Original_DangHuyDong, string Original_MaLoaiTien, string Original_MaKyTinhLai, string Original_SoHieuTaiKhoan) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((TenLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("TenLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenLoaiTietKiem));
            }
            if ((KyHan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(KyHan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DangHuyDong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(DangHuyDong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((MaLoaiTien == null)) {
                throw new System.ArgumentNullException("MaLoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MaLoaiTien));
            }
            if ((MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("MaKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MaKyTinhLai));
            }
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SoHieuTaiKhoan));
            }
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_TenLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_TenLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TenLoaiTietKiem));
            }
            if ((Original_KyHan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_KyHan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_DangHuyDong.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_DangHuyDong.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_MaLoaiTien == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTien");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MaLoaiTien));
            }
            if ((Original_MaKyTinhLai == null)) {
                throw new System.ArgumentNullException("Original_MaKyTinhLai");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MaKyTinhLai));
            }
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NGAY_GIAO_DICHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NGAY_GIAO_DICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NGAY_GIAO_DICH";
            tableMapping.ColumnMappings.Add("NgayGiaoDich", "NgayGiaoDich");
            tableMapping.ColumnMappings.Add("NgatGiaoDich", "NgatGiaoDich");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NGAY_GIAO_DICH] WHERE (([NgayGiaoDich] = @Original_NgayGiaoDich) AND" +
                " ((@IsNull_NgatGiaoDich = 1 AND [NgatGiaoDich] IS NULL) OR ([NgatGiaoDich] = @Or" +
                "iginal_NgatGiaoDich)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgatGiaoDich", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgatGiaoDich", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [NGAY_GIAO_DICH] ([NgayGiaoDich], [NgatGiaoDich]) VALUES (@NgayGiaoDi" +
                "ch, @NgatGiaoDich);\r\nSELECT NgayGiaoDich, NgatGiaoDich FROM NGAY_GIAO_DICH WHERE" +
                " (NgayGiaoDich = @NgayGiaoDich)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgatGiaoDich", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [NGAY_GIAO_DICH] SET [NgayGiaoDich] = @NgayGiaoDich, [NgatGiaoDich] = @NgatGiaoDich WHERE (([NgayGiaoDich] = @Original_NgayGiaoDich) AND ((@IsNull_NgatGiaoDich = 1 AND [NgatGiaoDich] IS NULL) OR ([NgatGiaoDich] = @Original_NgatGiaoDich)));
SELECT NgayGiaoDich, NgatGiaoDich FROM NGAY_GIAO_DICH WHERE (NgayGiaoDich = @NgayGiaoDich)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgatGiaoDich", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgatGiaoDich", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgatGiaoDich", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "NgatGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     NGAY_GIAO_DICH.*\r\nFROM         NGAY_GIAO_DICH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NGAY_GIAO_DICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NGAY_GIAO_DICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NGAY_GIAO_DICHDataTable dataTable = new DataSet1.NGAY_GIAO_DICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NGAY_GIAO_DICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NGAY_GIAO_DICH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_NgayGiaoDich, System.Nullable<bool> Original_NgatGiaoDich) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_NgatGiaoDich.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_NgatGiaoDich.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime NgayGiaoDich, System.Nullable<bool> NgatGiaoDich) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(NgayGiaoDich));
            if ((NgatGiaoDich.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(NgatGiaoDich.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime NgayGiaoDich, System.Nullable<bool> NgatGiaoDich, System.DateTime Original_NgayGiaoDich, System.Nullable<bool> Original_NgatGiaoDich) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(NgayGiaoDich));
            if ((NgatGiaoDich.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(NgatGiaoDich.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_NgatGiaoDich.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_NgatGiaoDich.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NHAN_VIENTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NHAN_VIENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NHAN_VIEN";
            tableMapping.ColumnMappings.Add("MaNV", "MaNV");
            tableMapping.ColumnMappings.Add("HoTen", "HoTen");
            tableMapping.ColumnMappings.Add("NgaySinh", "NgaySinh");
            tableMapping.ColumnMappings.Add("DiaChi", "DiaChi");
            tableMapping.ColumnMappings.Add("DienThoai", "DienThoai");
            tableMapping.ColumnMappings.Add("MaPhongGiaoDich", "MaPhongGiaoDich");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [NHAN_VIEN] WHERE (([MaNV] = @Original_MaNV) AND ([HoTen] = @Original_HoTen) AND ((@IsNull_NgaySinh = 1 AND [NgaySinh] IS NULL) OR ([NgaySinh] = @Original_NgaySinh)) AND ([DiaChi] = @Original_DiaChi) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)) AND ([MaPhongGiaoDich] = @Original_MaPhongGiaoDich))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgaySinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgaySinh", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [NHAN_VIEN] ([MaNV], [HoTen], [NgaySinh], [DiaChi], [DienThoai], [MaPhongGiaoDich]) VALUES (@MaNV, @HoTen, @NgaySinh, @DiaChi, @DienThoai, @MaPhongGiaoDich);
SELECT MaNV, HoTen, NgaySinh, DiaChi, DienThoai, MaPhongGiaoDich FROM NHAN_VIEN WHERE (MaNV = @MaNV)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgaySinh", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [NHAN_VIEN] SET [MaNV] = @MaNV, [HoTen] = @HoTen, [NgaySinh] = @NgaySinh, [DiaChi] = @DiaChi, [DienThoai] = @DienThoai, [MaPhongGiaoDich] = @MaPhongGiaoDich WHERE (([MaNV] = @Original_MaNV) AND ([HoTen] = @Original_HoTen) AND ((@IsNull_NgaySinh = 1 AND [NgaySinh] IS NULL) OR ([NgaySinh] = @Original_NgaySinh)) AND ([DiaChi] = @Original_DiaChi) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)) AND ([MaPhongGiaoDich] = @Original_MaPhongGiaoDich));
SELECT MaNV, HoTen, NgaySinh, DiaChi, DienThoai, MaPhongGiaoDich FROM NHAN_VIEN WHERE (MaNV = @MaNV)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgaySinh", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_HoTen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "HoTen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgaySinh", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgaySinh", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgaySinh", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaChi", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaChi", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     NHAN_VIEN.*\r\nFROM         NHAN_VIEN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NHAN_VIENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NHAN_VIENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NHAN_VIENDataTable dataTable = new DataSet1.NHAN_VIENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NHAN_VIENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NHAN_VIEN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaNV, string Original_HoTen, System.Nullable<System.DateTime> Original_NgaySinh, string Original_DiaChi, string Original_DienThoai, string Original_MaPhongGiaoDich) {
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaNV));
            }
            if ((Original_HoTen == null)) {
                throw new System.ArgumentNullException("Original_HoTen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_HoTen));
            }
            if ((Original_NgaySinh.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_NgaySinh.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_DiaChi == null)) {
                throw new System.ArgumentNullException("Original_DiaChi");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DienThoai));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MaPhongGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaNV, string HoTen, System.Nullable<System.DateTime> NgaySinh, string DiaChi, string DienThoai, string MaPhongGiaoDich) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((HoTen == null)) {
                throw new System.ArgumentNullException("HoTen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HoTen));
            }
            if ((NgaySinh.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(NgaySinh.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DiaChi == null)) {
                throw new System.ArgumentNullException("DiaChi");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DiaChi));
            }
            if ((DienThoai == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DienThoai));
            }
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MaPhongGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaNV, string HoTen, System.Nullable<System.DateTime> NgaySinh, string DiaChi, string DienThoai, string MaPhongGiaoDich, string Original_MaNV, string Original_HoTen, System.Nullable<System.DateTime> Original_NgaySinh, string Original_DiaChi, string Original_DienThoai, string Original_MaPhongGiaoDich) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((HoTen == null)) {
                throw new System.ArgumentNullException("HoTen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HoTen));
            }
            if ((NgaySinh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(NgaySinh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((DiaChi == null)) {
                throw new System.ArgumentNullException("DiaChi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DiaChi));
            }
            if ((DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DienThoai));
            }
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MaPhongGiaoDich));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaNV));
            }
            if ((Original_HoTen == null)) {
                throw new System.ArgumentNullException("Original_HoTen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_HoTen));
            }
            if ((Original_NgaySinh.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_NgaySinh.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_DiaChi == null)) {
                throw new System.ArgumentNullException("Original_DiaChi");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_DiaChi));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DienThoai));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MaPhongGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NHOM_NGUOI_DUNGTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NHOM_NGUOI_DUNGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NHOM_NGUOI_DUNG";
            tableMapping.ColumnMappings.Add("MaNhomNguoiDung", "MaNhomNguoiDung");
            tableMapping.ColumnMappings.Add("TenNhomNguoiDung", "TenNhomNguoiDung");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [NHOM_NGUOI_DUNG] WHERE (([MaNhomNguoiDung] = @Original_MaNhomNguoiDu" +
                "ng) AND ([TenNhomNguoiDung] = @Original_TenNhomNguoiDung))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenNhomNguoiDung", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [NHOM_NGUOI_DUNG] ([MaNhomNguoiDung], [TenNhomNguoiDung]) VALUES (@Ma" +
                "NhomNguoiDung, @TenNhomNguoiDung);\r\nSELECT MaNhomNguoiDung, TenNhomNguoiDung FRO" +
                "M NHOM_NGUOI_DUNG WHERE (MaNhomNguoiDung = @MaNhomNguoiDung)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenNhomNguoiDung", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [NHOM_NGUOI_DUNG] SET [MaNhomNguoiDung] = @MaNhomNguoiDung, [TenNhomNguoiDung] = @TenNhomNguoiDung WHERE (([MaNhomNguoiDung] = @Original_MaNhomNguoiDung) AND ([TenNhomNguoiDung] = @Original_TenNhomNguoiDung));
SELECT MaNhomNguoiDung, TenNhomNguoiDung FROM NHOM_NGUOI_DUNG WHERE (MaNhomNguoiDung = @MaNhomNguoiDung)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenNhomNguoiDung", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenNhomNguoiDung", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     NHOM_NGUOI_DUNG.*\r\nFROM         NHOM_NGUOI_DUNG";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NHOM_NGUOI_DUNGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NHOM_NGUOI_DUNGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NHOM_NGUOI_DUNGDataTable dataTable = new DataSet1.NHOM_NGUOI_DUNGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NHOM_NGUOI_DUNGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NHOM_NGUOI_DUNG");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaNhomNguoiDung, string Original_TenNhomNguoiDung) {
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaNhomNguoiDung));
            }
            if ((Original_TenNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_TenNhomNguoiDung");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaNhomNguoiDung, string TenNhomNguoiDung) {
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaNhomNguoiDung));
            }
            if ((TenNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("TenNhomNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaNhomNguoiDung, string TenNhomNguoiDung, string Original_MaNhomNguoiDung, string Original_TenNhomNguoiDung) {
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaNhomNguoiDung));
            }
            if ((TenNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("TenNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenNhomNguoiDung));
            }
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaNhomNguoiDung));
            }
            if ((Original_TenNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_TenNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TenNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHAN_NHOMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHAN_NHOMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHAN_NHOM";
            tableMapping.ColumnMappings.Add("MaNV", "MaNV");
            tableMapping.ColumnMappings.Add("MaNhomNguoiDung", "MaNhomNguoiDung");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PHAN_NHOM] WHERE (([MaNV] = @Original_MaNV) AND ([MaNhomNguoiDung] =" +
                " @Original_MaNhomNguoiDung))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [PHAN_NHOM] ([MaNV], [MaNhomNguoiDung]) VALUES (@MaNV, @MaNhomNguoiDu" +
                "ng);\r\nSELECT MaNV, MaNhomNguoiDung FROM PHAN_NHOM WHERE (MaNV = @MaNV) AND (MaNh" +
                "omNguoiDung = @MaNhomNguoiDung)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PHAN_NHOM] SET [MaNV] = @MaNV, [MaNhomNguoiDung] = @MaNhomNguoiDung WHERE (([MaNV] = @Original_MaNV) AND ([MaNhomNguoiDung] = @Original_MaNhomNguoiDung));
SELECT MaNV, MaNhomNguoiDung FROM PHAN_NHOM WHERE (MaNV = @MaNV) AND (MaNhomNguoiDung = @MaNhomNguoiDung)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PHAN_NHOM.*\r\nFROM         PHAN_NHOM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PHAN_NHOMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PHAN_NHOMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PHAN_NHOMDataTable dataTable = new DataSet1.PHAN_NHOMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PHAN_NHOMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PHAN_NHOM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaNV, string Original_MaNhomNguoiDung) {
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaNV));
            }
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaNV, string MaNhomNguoiDung) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaNV, string MaNhomNguoiDung, string Original_MaNV, string Original_MaNhomNguoiDung) {
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaNV));
            }
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaNhomNguoiDung));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaNV));
            }
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaNhomNguoiDung));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHAN_QUYENTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHAN_QUYENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHAN_QUYEN";
            tableMapping.ColumnMappings.Add("MaQuyen", "MaQuyen");
            tableMapping.ColumnMappings.Add("MaNhomNguoiDung", "MaNhomNguoiDung");
            tableMapping.ColumnMappings.Add("MaNV", "MaNV");
            tableMapping.ColumnMappings.Add("MatKhau", "MatKhau");
            tableMapping.ColumnMappings.Add("TenDangNhap", "TenDangNhap");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PHAN_QUYEN] WHERE (([MaQuyen] = @Original_MaQuyen) AND ([MaNhomNguoi" +
                "Dung] = @Original_MaNhomNguoiDung) AND ([MaNV] = @Original_MaNV) AND ([MatKhau] " +
                "= @Original_MatKhau) AND ([TenDangNhap] = @Original_TenDangNhap))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MatKhau", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MatKhau", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenDangNhap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDangNhap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [PHAN_QUYEN] ([MaQuyen], [MaNhomNguoiDung], [MaNV], [MatKhau], [TenDangNhap]) VALUES (@MaQuyen, @MaNhomNguoiDung, @MaNV, @MatKhau, @TenDangNhap);
SELECT MaQuyen, MaNhomNguoiDung, MaNV, MatKhau, TenDangNhap FROM PHAN_QUYEN WHERE (MaNhomNguoiDung = @MaNhomNguoiDung) AND (MaQuyen = @MaQuyen)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MatKhau", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MatKhau", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenDangNhap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDangNhap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PHAN_QUYEN] SET [MaQuyen] = @MaQuyen, [MaNhomNguoiDung] = @MaNhomNguoiDung, [MaNV] = @MaNV, [MatKhau] = @MatKhau, [TenDangNhap] = @TenDangNhap WHERE (([MaQuyen] = @Original_MaQuyen) AND ([MaNhomNguoiDung] = @Original_MaNhomNguoiDung) AND ([MaNV] = @Original_MaNV) AND ([MatKhau] = @Original_MatKhau) AND ([TenDangNhap] = @Original_TenDangNhap));
SELECT MaQuyen, MaNhomNguoiDung, MaNV, MatKhau, TenDangNhap FROM PHAN_QUYEN WHERE (MaNhomNguoiDung = @MaNhomNguoiDung) AND (MaQuyen = @MaQuyen)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MatKhau", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MatKhau", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenDangNhap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDangNhap", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNhomNguoiDung", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNhomNguoiDung", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MatKhau", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MatKhau", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenDangNhap", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenDangNhap", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PHAN_QUYEN.*\r\nFROM         PHAN_QUYEN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PHAN_QUYENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PHAN_QUYENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PHAN_QUYENDataTable dataTable = new DataSet1.PHAN_QUYENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PHAN_QUYENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PHAN_QUYEN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaQuyen, string Original_MaNhomNguoiDung, string Original_MaNV, string Original_MatKhau, string Original_TenDangNhap) {
            if ((Original_MaQuyen == null)) {
                throw new System.ArgumentNullException("Original_MaQuyen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaQuyen));
            }
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaNhomNguoiDung));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MaNV));
            }
            if ((Original_MatKhau == null)) {
                throw new System.ArgumentNullException("Original_MatKhau");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_MatKhau));
            }
            if ((Original_TenDangNhap == null)) {
                throw new System.ArgumentNullException("Original_TenDangNhap");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TenDangNhap));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaQuyen, string MaNhomNguoiDung, string MaNV, string MatKhau, string TenDangNhap) {
            if ((MaQuyen == null)) {
                throw new System.ArgumentNullException("MaQuyen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaQuyen));
            }
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaNhomNguoiDung));
            }
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MaNV));
            }
            if ((MatKhau == null)) {
                throw new System.ArgumentNullException("MatKhau");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MatKhau));
            }
            if ((TenDangNhap == null)) {
                throw new System.ArgumentNullException("TenDangNhap");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TenDangNhap));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaQuyen, string MaNhomNguoiDung, string MaNV, string MatKhau, string TenDangNhap, string Original_MaQuyen, string Original_MaNhomNguoiDung, string Original_MaNV, string Original_MatKhau, string Original_TenDangNhap) {
            if ((MaQuyen == null)) {
                throw new System.ArgumentNullException("MaQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaQuyen));
            }
            if ((MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaNhomNguoiDung));
            }
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MaNV));
            }
            if ((MatKhau == null)) {
                throw new System.ArgumentNullException("MatKhau");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MatKhau));
            }
            if ((TenDangNhap == null)) {
                throw new System.ArgumentNullException("TenDangNhap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TenDangNhap));
            }
            if ((Original_MaQuyen == null)) {
                throw new System.ArgumentNullException("Original_MaQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaQuyen));
            }
            if ((Original_MaNhomNguoiDung == null)) {
                throw new System.ArgumentNullException("Original_MaNhomNguoiDung");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_MaNhomNguoiDung));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_MaNV));
            }
            if ((Original_MatKhau == null)) {
                throw new System.ArgumentNullException("Original_MatKhau");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_MatKhau));
            }
            if ((Original_TenDangNhap == null)) {
                throw new System.ArgumentNullException("Original_TenDangNhap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TenDangNhap));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PHONG_GIAO_DICHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PHONG_GIAO_DICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PHONG_GIAO_DICH";
            tableMapping.ColumnMappings.Add("MaPhongGiaoDich", "MaPhongGiaoDich");
            tableMapping.ColumnMappings.Add("TenPhong", "TenPhong");
            tableMapping.ColumnMappings.Add("DiaDiem", "DiaDiem");
            tableMapping.ColumnMappings.Add("DienThoai", "DienThoai");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [PHONG_GIAO_DICH] WHERE (([MaPhongGiaoDich] = @Original_MaPhongGiaoDi" +
                "ch) AND ([TenPhong] = @Original_TenPhong) AND ([DiaDiem] = @Original_DiaDiem) AN" +
                "D ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_D" +
                "ienThoai)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaDiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaDiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [PHONG_GIAO_DICH] ([MaPhongGiaoDich], [TenPhong], [DiaDiem], [DienThoai]) VALUES (@MaPhongGiaoDich, @TenPhong, @DiaDiem, @DienThoai);
SELECT MaPhongGiaoDich, TenPhong, DiaDiem, DienThoai FROM PHONG_GIAO_DICH WHERE (MaPhongGiaoDich = @MaPhongGiaoDich)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaDiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaDiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PHONG_GIAO_DICH] SET [MaPhongGiaoDich] = @MaPhongGiaoDich, [TenPhong] = @TenPhong, [DiaDiem] = @DiaDiem, [DienThoai] = @DienThoai WHERE (([MaPhongGiaoDich] = @Original_MaPhongGiaoDich) AND ([TenPhong] = @Original_TenPhong) AND ([DiaDiem] = @Original_DiaDiem) AND ((@IsNull_DienThoai = 1 AND [DienThoai] IS NULL) OR ([DienThoai] = @Original_DienThoai)));
SELECT MaPhongGiaoDich, TenPhong, DiaDiem, DienThoai FROM PHONG_GIAO_DICH WHERE (MaPhongGiaoDich = @MaPhongGiaoDich)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenPhong", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DiaDiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaDiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenPhong", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenPhong", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DiaDiem", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DiaDiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DienThoai", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DienThoai", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "DienThoai", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PHONG_GIAO_DICH.*\r\nFROM         PHONG_GIAO_DICH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PHONG_GIAO_DICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PHONG_GIAO_DICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PHONG_GIAO_DICHDataTable dataTable = new DataSet1.PHONG_GIAO_DICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PHONG_GIAO_DICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PHONG_GIAO_DICH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaPhongGiaoDich, string Original_TenPhong, string Original_DiaDiem, string Original_DienThoai) {
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_TenPhong == null)) {
                throw new System.ArgumentNullException("Original_TenPhong");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenPhong));
            }
            if ((Original_DiaDiem == null)) {
                throw new System.ArgumentNullException("Original_DiaDiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DiaDiem));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaPhongGiaoDich, string TenPhong, string DiaDiem, string DienThoai) {
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaPhongGiaoDich));
            }
            if ((TenPhong == null)) {
                throw new System.ArgumentNullException("TenPhong");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenPhong));
            }
            if ((DiaDiem == null)) {
                throw new System.ArgumentNullException("DiaDiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DiaDiem));
            }
            if ((DienThoai == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaPhongGiaoDich, string TenPhong, string DiaDiem, string DienThoai, string Original_MaPhongGiaoDich, string Original_TenPhong, string Original_DiaDiem, string Original_DienThoai) {
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaPhongGiaoDich));
            }
            if ((TenPhong == null)) {
                throw new System.ArgumentNullException("TenPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenPhong));
            }
            if ((DiaDiem == null)) {
                throw new System.ArgumentNullException("DiaDiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DiaDiem));
            }
            if ((DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DienThoai));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_TenPhong == null)) {
                throw new System.ArgumentNullException("Original_TenPhong");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_TenPhong));
            }
            if ((Original_DiaDiem == null)) {
                throw new System.ArgumentNullException("Original_DiaDiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_DiaDiem));
            }
            if ((Original_DienThoai == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_DienThoai));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PS_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PS_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PS_TIET_KIEM";
            tableMapping.ColumnMappings.Add("SoButToan", "SoButToan");
            tableMapping.ColumnMappings.Add("NgayGiaoDich", "NgayGiaoDich");
            tableMapping.ColumnMappings.Add("DaDuyet", "DaDuyet");
            tableMapping.ColumnMappings.Add("MaSoTietKiem", "MaSoTietKiem");
            tableMapping.ColumnMappings.Add("MaLoaiGiaoDich", "MaLoaiGiaoDich");
            tableMapping.ColumnMappings.Add("MaQuayGiaoDich", "MaQuayGiaoDich");
            tableMapping.ColumnMappings.Add("MaPhongGiaoDich", "MaPhongGiaoDich");
            tableMapping.ColumnMappings.Add("MaNV", "MaNV");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [PS_TIET_KIEM] WHERE (([SoButToan] = @Original_SoButToan) AND ([NgayGiaoDich] = @Original_NgayGiaoDich) AND ((@IsNull_DaDuyet = 1 AND [DaDuyet] IS NULL) OR ([DaDuyet] = @Original_DaDuyet)) AND ([MaSoTietKiem] = @Original_MaSoTietKiem) AND ([MaLoaiGiaoDich] = @Original_MaLoaiGiaoDich) AND ([MaQuayGiaoDich] = @Original_MaQuayGiaoDich) AND ([MaPhongGiaoDich] = @Original_MaPhongGiaoDich) AND ([MaNV] = @Original_MaNV))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DaDuyet", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DaDuyet", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [PS_TIET_KIEM] ([SoButToan], [NgayGiaoDich], [DaDuyet], [MaSoTietKiem], [MaLoaiGiaoDich], [MaQuayGiaoDich], [MaPhongGiaoDich], [MaNV]) VALUES (@SoButToan, @NgayGiaoDich, @DaDuyet, @MaSoTietKiem, @MaLoaiGiaoDich, @MaQuayGiaoDich, @MaPhongGiaoDich, @MaNV);
SELECT SoButToan, NgayGiaoDich, DaDuyet, MaSoTietKiem, MaLoaiGiaoDich, MaQuayGiaoDich, MaPhongGiaoDich, MaNV FROM PS_TIET_KIEM WHERE (NgayGiaoDich = @NgayGiaoDich) AND (SoButToan = @SoButToan)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DaDuyet", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [PS_TIET_KIEM] SET [SoButToan] = @SoButToan, [NgayGiaoDich] = @NgayGiaoDich, [DaDuyet] = @DaDuyet, [MaSoTietKiem] = @MaSoTietKiem, [MaLoaiGiaoDich] = @MaLoaiGiaoDich, [MaQuayGiaoDich] = @MaQuayGiaoDich, [MaPhongGiaoDich] = @MaPhongGiaoDich, [MaNV] = @MaNV WHERE (([SoButToan] = @Original_SoButToan) AND ([NgayGiaoDich] = @Original_NgayGiaoDich) AND ((@IsNull_DaDuyet = 1 AND [DaDuyet] IS NULL) OR ([DaDuyet] = @Original_DaDuyet)) AND ([MaSoTietKiem] = @Original_MaSoTietKiem) AND ([MaLoaiGiaoDich] = @Original_MaLoaiGiaoDich) AND ([MaQuayGiaoDich] = @Original_MaQuayGiaoDich) AND ([MaPhongGiaoDich] = @Original_MaPhongGiaoDich) AND ([MaNV] = @Original_MaNV));
SELECT SoButToan, NgayGiaoDich, DaDuyet, MaSoTietKiem, MaLoaiGiaoDich, MaQuayGiaoDich, MaPhongGiaoDich, MaNV FROM PS_TIET_KIEM WHERE (NgayGiaoDich = @NgayGiaoDich) AND (SoButToan = @SoButToan)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DaDuyet", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoButToan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoButToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayGiaoDich", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_DaDuyet", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_DaDuyet", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "DaDuyet", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaNV", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaNV", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     PS_TIET_KIEM.*\r\nFROM         PS_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PS_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PS_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PS_TIET_KIEMDataTable dataTable = new DataSet1.PS_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PS_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PS_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SoButToan, System.DateTime Original_NgayGiaoDich, System.Nullable<bool> Original_DaDuyet, string Original_MaSoTietKiem, string Original_MaLoaiGiaoDich, string Original_MaQuayGiaoDich, string Original_MaPhongGiaoDich, string Original_MaNV) {
            if ((Original_SoButToan == null)) {
                throw new System.ArgumentNullException("Original_SoButToan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SoButToan));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_DaDuyet.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_DaDuyet.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_MaSoTietKiem));
            }
            if ((Original_MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_MaLoaiGiaoDich));
            }
            if ((Original_MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaQuayGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MaQuayGiaoDich));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_MaNV));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SoButToan, System.DateTime NgayGiaoDich, System.Nullable<bool> DaDuyet, string MaSoTietKiem, string MaLoaiGiaoDich, string MaQuayGiaoDich, string MaPhongGiaoDich, string MaNV) {
            if ((SoButToan == null)) {
                throw new System.ArgumentNullException("SoButToan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SoButToan));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(NgayGiaoDich));
            if ((DaDuyet.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(DaDuyet.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MaSoTietKiem));
            }
            if ((MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("MaLoaiGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MaLoaiGiaoDich));
            }
            if ((MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("MaQuayGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MaQuayGiaoDich));
            }
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MaPhongGiaoDich));
            }
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MaNV));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SoButToan, 
                    System.DateTime NgayGiaoDich, 
                    System.Nullable<bool> DaDuyet, 
                    string MaSoTietKiem, 
                    string MaLoaiGiaoDich, 
                    string MaQuayGiaoDich, 
                    string MaPhongGiaoDich, 
                    string MaNV, 
                    string Original_SoButToan, 
                    System.DateTime Original_NgayGiaoDich, 
                    System.Nullable<bool> Original_DaDuyet, 
                    string Original_MaSoTietKiem, 
                    string Original_MaLoaiGiaoDich, 
                    string Original_MaQuayGiaoDich, 
                    string Original_MaPhongGiaoDich, 
                    string Original_MaNV) {
            if ((SoButToan == null)) {
                throw new System.ArgumentNullException("SoButToan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SoButToan));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(NgayGiaoDich));
            if ((DaDuyet.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(DaDuyet.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MaSoTietKiem));
            }
            if ((MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("MaLoaiGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MaLoaiGiaoDich));
            }
            if ((MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("MaQuayGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MaQuayGiaoDich));
            }
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MaPhongGiaoDich));
            }
            if ((MaNV == null)) {
                throw new System.ArgumentNullException("MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MaNV));
            }
            if ((Original_SoButToan == null)) {
                throw new System.ArgumentNullException("Original_SoButToan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SoButToan));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_NgayGiaoDich));
            if ((Original_DaDuyet.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_DaDuyet.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MaSoTietKiem));
            }
            if ((Original_MaLoaiGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MaLoaiGiaoDich));
            }
            if ((Original_MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaQuayGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MaQuayGiaoDich));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_MaNV == null)) {
                throw new System.ArgumentNullException("Original_MaNV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_MaNV));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUAY_GIAO_DICHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QUAY_GIAO_DICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUAY_GIAO_DICH";
            tableMapping.ColumnMappings.Add("MaPhongGiaoDich", "MaPhongGiaoDich");
            tableMapping.ColumnMappings.Add("MaQuayGiaoDich", "MaQuayGiaoDich");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [QUAY_GIAO_DICH] WHERE (([MaPhongGiaoDich] = @Original_MaPhongGiaoDic" +
                "h) AND ([MaQuayGiaoDich] = @Original_MaQuayGiaoDich))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [QUAY_GIAO_DICH] ([MaPhongGiaoDich], [MaQuayGiaoDich]) VALUES (@MaPho" +
                "ngGiaoDich, @MaQuayGiaoDich);\r\nSELECT MaPhongGiaoDich, MaQuayGiaoDich FROM QUAY_" +
                "GIAO_DICH WHERE (MaQuayGiaoDich = @MaQuayGiaoDich)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [QUAY_GIAO_DICH] SET [MaPhongGiaoDich] = @MaPhongGiaoDich, [MaQuayGiaoDich] = @MaQuayGiaoDich WHERE (([MaPhongGiaoDich] = @Original_MaPhongGiaoDich) AND ([MaQuayGiaoDich] = @Original_MaQuayGiaoDich));
SELECT MaPhongGiaoDich, MaQuayGiaoDich FROM QUAY_GIAO_DICH WHERE (MaQuayGiaoDich = @MaQuayGiaoDich)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaPhongGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaPhongGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuayGiaoDich", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuayGiaoDich", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     QUAY_GIAO_DICH.*\r\nFROM         QUAY_GIAO_DICH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.QUAY_GIAO_DICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.QUAY_GIAO_DICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.QUAY_GIAO_DICHDataTable dataTable = new DataSet1.QUAY_GIAO_DICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.QUAY_GIAO_DICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "QUAY_GIAO_DICH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaPhongGiaoDich, string Original_MaQuayGiaoDich) {
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaQuayGiaoDich");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaQuayGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaPhongGiaoDich, string MaQuayGiaoDich) {
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaPhongGiaoDich));
            }
            if ((MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("MaQuayGiaoDich");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaQuayGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaPhongGiaoDich, string MaQuayGiaoDich, string Original_MaPhongGiaoDich, string Original_MaQuayGiaoDich) {
            if ((MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaPhongGiaoDich));
            }
            if ((MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("MaQuayGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaQuayGiaoDich));
            }
            if ((Original_MaPhongGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaPhongGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaPhongGiaoDich));
            }
            if ((Original_MaQuayGiaoDich == null)) {
                throw new System.ArgumentNullException("Original_MaQuayGiaoDich");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_MaQuayGiaoDich));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUYENTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QUYENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUYEN";
            tableMapping.ColumnMappings.Add("MaQuyen", "MaQuyen");
            tableMapping.ColumnMappings.Add("TenQuyen", "TenQuyen");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [QUYEN] WHERE (([MaQuyen] = @Original_MaQuyen) AND ([TenQuyen] = @Ori" +
                "ginal_TenQuyen))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenQuyen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [QUYEN] ([MaQuyen], [TenQuyen]) VALUES (@MaQuyen, @TenQuyen);\r\nSELECT" +
                " MaQuyen, TenQuyen FROM QUYEN WHERE (MaQuyen = @MaQuyen)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenQuyen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [QUYEN] SET [MaQuyen] = @MaQuyen, [TenQuyen] = @TenQuyen WHERE (([MaQuyen]" +
                " = @Original_MaQuyen) AND ([TenQuyen] = @Original_TenQuyen));\r\nSELECT MaQuyen, T" +
                "enQuyen FROM QUYEN WHERE (MaQuyen = @MaQuyen)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TenQuyen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenQuyen", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaQuyen", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_TenQuyen", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "TenQuyen", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     QUYEN.*\r\nFROM         QUYEN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.QUYENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.QUYENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.QUYENDataTable dataTable = new DataSet1.QUYENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.QUYENDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "QUYEN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaQuyen, string Original_TenQuyen) {
            if ((Original_MaQuyen == null)) {
                throw new System.ArgumentNullException("Original_MaQuyen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaQuyen));
            }
            if ((Original_TenQuyen == null)) {
                throw new System.ArgumentNullException("Original_TenQuyen");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TenQuyen));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaQuyen, string TenQuyen) {
            if ((MaQuyen == null)) {
                throw new System.ArgumentNullException("MaQuyen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaQuyen));
            }
            if ((TenQuyen == null)) {
                throw new System.ArgumentNullException("TenQuyen");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TenQuyen));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaQuyen, string TenQuyen, string Original_MaQuyen, string Original_TenQuyen) {
            if ((MaQuyen == null)) {
                throw new System.ArgumentNullException("MaQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaQuyen));
            }
            if ((TenQuyen == null)) {
                throw new System.ArgumentNullException("TenQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TenQuyen));
            }
            if ((Original_MaQuyen == null)) {
                throw new System.ArgumentNullException("Original_MaQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_MaQuyen));
            }
            if ((Original_TenQuyen == null)) {
                throw new System.ArgumentNullException("Original_TenQuyen");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TenQuyen));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SO_DU_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SO_DU_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SO_DU_TIET_KIEM";
            tableMapping.ColumnMappings.Add("MaLoaiTietKiem", "MaLoaiTietKiem");
            tableMapping.ColumnMappings.Add("MaSoTietKiem", "MaSoTietKiem");
            tableMapping.ColumnMappings.Add("NgayCapNhat", "NgayCapNhat");
            tableMapping.ColumnMappings.Add("SoDu", "SoDu");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SO_DU_TIET_KIEM] WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem" +
                ") AND ([MaSoTietKiem] = @Original_MaSoTietKiem) AND ([NgayCapNhat] = @Original_N" +
                "gayCapNhat) AND ((@IsNull_SoDu = 1 AND [SoDu] IS NULL) OR ([SoDu] = @Original_So" +
                "Du)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SO_DU_TIET_KIEM] ([MaLoaiTietKiem], [MaSoTietKiem], [NgayCapNhat], [SoDu]) VALUES (@MaLoaiTietKiem, @MaSoTietKiem, @NgayCapNhat, @SoDu);
SELECT MaLoaiTietKiem, MaSoTietKiem, NgayCapNhat, SoDu FROM SO_DU_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem) AND (MaSoTietKiem = @MaSoTietKiem) AND (NgayCapNhat = @NgayCapNhat)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SO_DU_TIET_KIEM] SET [MaLoaiTietKiem] = @MaLoaiTietKiem, [MaSoTietKiem] = @MaSoTietKiem, [NgayCapNhat] = @NgayCapNhat, [SoDu] = @SoDu WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([MaSoTietKiem] = @Original_MaSoTietKiem) AND ([NgayCapNhat] = @Original_NgayCapNhat) AND ((@IsNull_SoDu = 1 AND [SoDu] IS NULL) OR ([SoDu] = @Original_SoDu)));
SELECT MaLoaiTietKiem, MaSoTietKiem, NgayCapNhat, SoDu FROM SO_DU_TIET_KIEM WHERE (MaLoaiTietKiem = @MaLoaiTietKiem) AND (MaSoTietKiem = @MaSoTietKiem) AND (NgayCapNhat = @NgayCapNhat)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDu", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDu", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDu", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SO_DU_TIET_KIEM.*\r\nFROM         SO_DU_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SO_DU_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SO_DU_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SO_DU_TIET_KIEMDataTable dataTable = new DataSet1.SO_DU_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SO_DU_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SO_DU_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTietKiem, string Original_MaSoTietKiem, System.DateTime Original_NgayCapNhat, System.Nullable<double> Original_SoDu) {
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaSoTietKiem));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_NgayCapNhat));
            if ((Original_SoDu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_SoDu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTietKiem, string MaSoTietKiem, System.DateTime NgayCapNhat, System.Nullable<double> SoDu) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaSoTietKiem));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(NgayCapNhat));
            if ((SoDu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(SoDu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MaLoaiTietKiem, string MaSoTietKiem, System.DateTime NgayCapNhat, System.Nullable<double> SoDu, string Original_MaLoaiTietKiem, string Original_MaSoTietKiem, System.DateTime Original_NgayCapNhat, System.Nullable<double> Original_SoDu) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaSoTietKiem));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(NgayCapNhat));
            if ((SoDu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(SoDu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_MaSoTietKiem));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_NgayCapNhat));
            if ((Original_SoDu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_SoDu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SO_TIET_KIEMTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SO_TIET_KIEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SO_TIET_KIEM";
            tableMapping.ColumnMappings.Add("MaLoaiTietKiem", "MaLoaiTietKiem");
            tableMapping.ColumnMappings.Add("MaSoTietKiem", "MaSoTietKiem");
            tableMapping.ColumnMappings.Add("NgayMoSo", "NgayMoSo");
            tableMapping.ColumnMappings.Add("NgayHieuLuc", "NgayHieuLuc");
            tableMapping.ColumnMappings.Add("NgayDenHan", "NgayDenHan");
            tableMapping.ColumnMappings.Add("NgayTinhLaiGanNhat", "NgayTinhLaiGanNhat");
            tableMapping.ColumnMappings.Add("NgayTaiKyGui", "NgayTaiKyGui");
            tableMapping.ColumnMappings.Add("LaiDaTra", "LaiDaTra");
            tableMapping.ColumnMappings.Add("LaiNhapVon", "LaiNhapVon");
            tableMapping.ColumnMappings.Add("NgayNhapVon", "NgayNhapVon");
            tableMapping.ColumnMappings.Add("PhongToa", "PhongToa");
            tableMapping.ColumnMappings.Add("NgayTatToan", "NgayTatToan");
            tableMapping.ColumnMappings.Add("MaKH", "MaKH");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SO_TIET_KIEM] WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([MaSoTietKiem] = @Original_MaSoTietKiem) AND ((@IsNull_NgayMoSo = 1 AND [NgayMoSo] IS NULL) OR ([NgayMoSo] = @Original_NgayMoSo)) AND ((@IsNull_NgayHieuLuc = 1 AND [NgayHieuLuc] IS NULL) OR ([NgayHieuLuc] = @Original_NgayHieuLuc)) AND ((@IsNull_NgayDenHan = 1 AND [NgayDenHan] IS NULL) OR ([NgayDenHan] = @Original_NgayDenHan)) AND ((@IsNull_NgayTinhLaiGanNhat = 1 AND [NgayTinhLaiGanNhat] IS NULL) OR ([NgayTinhLaiGanNhat] = @Original_NgayTinhLaiGanNhat)) AND ((@IsNull_NgayTaiKyGui = 1 AND [NgayTaiKyGui] IS NULL) OR ([NgayTaiKyGui] = @Original_NgayTaiKyGui)) AND ((@IsNull_LaiDaTra = 1 AND [LaiDaTra] IS NULL) OR ([LaiDaTra] = @Original_LaiDaTra)) AND ((@IsNull_LaiNhapVon = 1 AND [LaiNhapVon] IS NULL) OR ([LaiNhapVon] = @Original_LaiNhapVon)) AND ((@IsNull_NgayNhapVon = 1 AND [NgayNhapVon] IS NULL) OR ([NgayNhapVon] = @Original_NgayNhapVon)) AND ((@IsNull_PhongToa = 1 AND [PhongToa] IS NULL) OR ([PhongToa] = @Original_PhongToa)) AND ((@IsNull_NgayTatToan = 1 AND [NgayTatToan] IS NULL) OR ([NgayTatToan] = @Original_NgayTatToan)) AND ([MaKH] = @Original_MaKH))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayMoSo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayMoSo", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayHieuLuc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayHieuLuc", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayDenHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayDenHan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTinhLaiGanNhat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTinhLaiGanNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTaiKyGui", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTaiKyGui", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LaiDaTra", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LaiDaTra", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LaiNhapVon", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LaiNhapVon", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhapVon", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhapVon", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PhongToa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PhongToa", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTatToan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTatToan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SO_TIET_KIEM] ([MaLoaiTietKiem], [MaSoTietKiem], [NgayMoSo], [NgayHieuLuc], [NgayDenHan], [NgayTinhLaiGanNhat], [NgayTaiKyGui], [LaiDaTra], [LaiNhapVon], [NgayNhapVon], [PhongToa], [NgayTatToan], [MaKH]) VALUES (@MaLoaiTietKiem, @MaSoTietKiem, @NgayMoSo, @NgayHieuLuc, @NgayDenHan, @NgayTinhLaiGanNhat, @NgayTaiKyGui, @LaiDaTra, @LaiNhapVon, @NgayNhapVon, @PhongToa, @NgayTatToan, @MaKH);
SELECT MaLoaiTietKiem, MaSoTietKiem, NgayMoSo, NgayHieuLuc, NgayDenHan, NgayTinhLaiGanNhat, NgayTaiKyGui, LaiDaTra, LaiNhapVon, NgayNhapVon, PhongToa, NgayTatToan, MaKH FROM SO_TIET_KIEM WHERE (MaSoTietKiem = @MaSoTietKiem)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayMoSo", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayHieuLuc", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayDenHan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTinhLaiGanNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTaiKyGui", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LaiDaTra", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LaiNhapVon", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhapVon", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhongToa", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTatToan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SO_TIET_KIEM] SET [MaLoaiTietKiem] = @MaLoaiTietKiem, [MaSoTietKiem] = @M" +
                "aSoTietKiem, [NgayMoSo] = @NgayMoSo, [NgayHieuLuc] = @NgayHieuLuc, [NgayDenHan] " +
                "= @NgayDenHan, [NgayTinhLaiGanNhat] = @NgayTinhLaiGanNhat, [NgayTaiKyGui] = @Nga" +
                "yTaiKyGui, [LaiDaTra] = @LaiDaTra, [LaiNhapVon] = @LaiNhapVon, [NgayNhapVon] = @" +
                "NgayNhapVon, [PhongToa] = @PhongToa, [NgayTatToan] = @NgayTatToan, [MaKH] = @MaK" +
                "H WHERE (([MaLoaiTietKiem] = @Original_MaLoaiTietKiem) AND ([MaSoTietKiem] = @Or" +
                "iginal_MaSoTietKiem) AND ((@IsNull_NgayMoSo = 1 AND [NgayMoSo] IS NULL) OR ([Nga" +
                "yMoSo] = @Original_NgayMoSo)) AND ((@IsNull_NgayHieuLuc = 1 AND [NgayHieuLuc] IS" +
                " NULL) OR ([NgayHieuLuc] = @Original_NgayHieuLuc)) AND ((@IsNull_NgayDenHan = 1 " +
                "AND [NgayDenHan] IS NULL) OR ([NgayDenHan] = @Original_NgayDenHan)) AND ((@IsNul" +
                "l_NgayTinhLaiGanNhat = 1 AND [NgayTinhLaiGanNhat] IS NULL) OR ([NgayTinhLaiGanNh" +
                "at] = @Original_NgayTinhLaiGanNhat)) AND ((@IsNull_NgayTaiKyGui = 1 AND [NgayTai" +
                "KyGui] IS NULL) OR ([NgayTaiKyGui] = @Original_NgayTaiKyGui)) AND ((@IsNull_LaiD" +
                "aTra = 1 AND [LaiDaTra] IS NULL) OR ([LaiDaTra] = @Original_LaiDaTra)) AND ((@Is" +
                "Null_LaiNhapVon = 1 AND [LaiNhapVon] IS NULL) OR ([LaiNhapVon] = @Original_LaiNh" +
                "apVon)) AND ((@IsNull_NgayNhapVon = 1 AND [NgayNhapVon] IS NULL) OR ([NgayNhapVo" +
                "n] = @Original_NgayNhapVon)) AND ((@IsNull_PhongToa = 1 AND [PhongToa] IS NULL) " +
                "OR ([PhongToa] = @Original_PhongToa)) AND ((@IsNull_NgayTatToan = 1 AND [NgayTat" +
                "Toan] IS NULL) OR ([NgayTatToan] = @Original_NgayTatToan)) AND ([MaKH] = @Origin" +
                "al_MaKH));\r\nSELECT MaLoaiTietKiem, MaSoTietKiem, NgayMoSo, NgayHieuLuc, NgayDenH" +
                "an, NgayTinhLaiGanNhat, NgayTaiKyGui, LaiDaTra, LaiNhapVon, NgayNhapVon, PhongTo" +
                "a, NgayTatToan, MaKH FROM SO_TIET_KIEM WHERE (MaSoTietKiem = @MaSoTietKiem)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayMoSo", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayHieuLuc", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayDenHan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTinhLaiGanNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTaiKyGui", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LaiDaTra", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LaiNhapVon", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayNhapVon", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PhongToa", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayTatToan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaLoaiTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaLoaiTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaSoTietKiem", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaSoTietKiem", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayMoSo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayMoSo", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayMoSo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayHieuLuc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayHieuLuc", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayHieuLuc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayDenHan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayDenHan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayDenHan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTinhLaiGanNhat", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTinhLaiGanNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTinhLaiGanNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTaiKyGui", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTaiKyGui", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTaiKyGui", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LaiDaTra", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LaiDaTra", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiDaTra", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_LaiNhapVon", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_LaiNhapVon", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "LaiNhapVon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayNhapVon", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayNhapVon", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayNhapVon", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_PhongToa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_PhongToa", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "PhongToa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_NgayTatToan", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayTatToan", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayTatToan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_MaKH", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "MaKH", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SO_TIET_KIEM.*\r\nFROM         SO_TIET_KIEM";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SO_TIET_KIEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SO_TIET_KIEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SO_TIET_KIEMDataTable dataTable = new DataSet1.SO_TIET_KIEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SO_TIET_KIEMDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SO_TIET_KIEM");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MaLoaiTietKiem, string Original_MaSoTietKiem, System.Nullable<System.DateTime> Original_NgayMoSo, System.Nullable<System.DateTime> Original_NgayHieuLuc, System.Nullable<System.DateTime> Original_NgayDenHan, System.Nullable<System.DateTime> Original_NgayTinhLaiGanNhat, System.Nullable<System.DateTime> Original_NgayTaiKyGui, System.Nullable<double> Original_LaiDaTra, System.Nullable<double> Original_LaiNhapVon, System.Nullable<System.DateTime> Original_NgayNhapVon, System.Nullable<bool> Original_PhongToa, System.Nullable<System.DateTime> Original_NgayTatToan, string Original_MaKH) {
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MaSoTietKiem));
            }
            if ((Original_NgayMoSo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_NgayMoSo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_NgayHieuLuc.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_NgayHieuLuc.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_NgayDenHan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_NgayDenHan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_NgayTinhLaiGanNhat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_NgayTinhLaiGanNhat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_NgayTaiKyGui.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_NgayTaiKyGui.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_LaiDaTra.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_LaiDaTra.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_LaiNhapVon.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_LaiNhapVon.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_NgayNhapVon.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((System.DateTime)(Original_NgayNhapVon.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_PhongToa.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_PhongToa.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((Original_NgayTatToan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_NgayTatToan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = System.DBNull.Value;
            }
            if ((Original_MaKH == null)) {
                throw new System.ArgumentNullException("Original_MaKH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_MaKH));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MaLoaiTietKiem, string MaSoTietKiem, System.Nullable<System.DateTime> NgayMoSo, System.Nullable<System.DateTime> NgayHieuLuc, System.Nullable<System.DateTime> NgayDenHan, System.Nullable<System.DateTime> NgayTinhLaiGanNhat, System.Nullable<System.DateTime> NgayTaiKyGui, System.Nullable<double> LaiDaTra, System.Nullable<double> LaiNhapVon, System.Nullable<System.DateTime> NgayNhapVon, System.Nullable<bool> PhongToa, System.Nullable<System.DateTime> NgayTatToan, string MaKH) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MaSoTietKiem));
            }
            if ((NgayMoSo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(NgayMoSo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((NgayHieuLuc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(NgayHieuLuc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NgayDenHan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(NgayDenHan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((NgayTinhLaiGanNhat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(NgayTinhLaiGanNhat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NgayTaiKyGui.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(NgayTaiKyGui.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((LaiDaTra.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(LaiDaTra.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((LaiNhapVon.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(LaiNhapVon.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((NgayNhapVon.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(NgayNhapVon.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((PhongToa.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(PhongToa.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((NgayTatToan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(NgayTatToan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((MaKH == null)) {
                throw new System.ArgumentNullException("MaKH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(MaKH));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MaLoaiTietKiem, 
                    string MaSoTietKiem, 
                    System.Nullable<System.DateTime> NgayMoSo, 
                    System.Nullable<System.DateTime> NgayHieuLuc, 
                    System.Nullable<System.DateTime> NgayDenHan, 
                    System.Nullable<System.DateTime> NgayTinhLaiGanNhat, 
                    System.Nullable<System.DateTime> NgayTaiKyGui, 
                    System.Nullable<double> LaiDaTra, 
                    System.Nullable<double> LaiNhapVon, 
                    System.Nullable<System.DateTime> NgayNhapVon, 
                    System.Nullable<bool> PhongToa, 
                    System.Nullable<System.DateTime> NgayTatToan, 
                    string MaKH, 
                    string Original_MaLoaiTietKiem, 
                    string Original_MaSoTietKiem, 
                    System.Nullable<System.DateTime> Original_NgayMoSo, 
                    System.Nullable<System.DateTime> Original_NgayHieuLuc, 
                    System.Nullable<System.DateTime> Original_NgayDenHan, 
                    System.Nullable<System.DateTime> Original_NgayTinhLaiGanNhat, 
                    System.Nullable<System.DateTime> Original_NgayTaiKyGui, 
                    System.Nullable<double> Original_LaiDaTra, 
                    System.Nullable<double> Original_LaiNhapVon, 
                    System.Nullable<System.DateTime> Original_NgayNhapVon, 
                    System.Nullable<bool> Original_PhongToa, 
                    System.Nullable<System.DateTime> Original_NgayTatToan, 
                    string Original_MaKH) {
            if ((MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MaLoaiTietKiem));
            }
            if ((MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MaSoTietKiem));
            }
            if ((NgayMoSo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(NgayMoSo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((NgayHieuLuc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(NgayHieuLuc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((NgayDenHan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(NgayDenHan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((NgayTinhLaiGanNhat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(NgayTinhLaiGanNhat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((NgayTaiKyGui.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(NgayTaiKyGui.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((LaiDaTra.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(LaiDaTra.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((LaiNhapVon.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(LaiNhapVon.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((NgayNhapVon.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(NgayNhapVon.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((PhongToa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(PhongToa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((NgayTatToan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(NgayTatToan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((MaKH == null)) {
                throw new System.ArgumentNullException("MaKH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(MaKH));
            }
            if ((Original_MaLoaiTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaLoaiTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MaLoaiTietKiem));
            }
            if ((Original_MaSoTietKiem == null)) {
                throw new System.ArgumentNullException("Original_MaSoTietKiem");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MaSoTietKiem));
            }
            if ((Original_NgayMoSo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_NgayMoSo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_NgayHieuLuc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_NgayHieuLuc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_NgayDenHan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_NgayDenHan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_NgayTinhLaiGanNhat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_NgayTinhLaiGanNhat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_NgayTaiKyGui.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(Original_NgayTaiKyGui.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_LaiDaTra.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Original_LaiDaTra.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_LaiNhapVon.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Original_LaiNhapVon.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_NgayNhapVon.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_NgayNhapVon.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_PhongToa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_PhongToa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_NgayTatToan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_NgayTatToan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_MaKH == null)) {
                throw new System.ArgumentNullException("Original_MaKH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_MaKH));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TAI_KHOANTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TAI_KHOANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TAI_KHOAN";
            tableMapping.ColumnMappings.Add("SoHieuTaiKhoan", "SoHieuTaiKhoan");
            tableMapping.ColumnMappings.Add("NgayCapNhat", "NgayCapNhat");
            tableMapping.ColumnMappings.Add("SoDuDauNgay", "SoDuDauNgay");
            tableMapping.ColumnMappings.Add("SoPhatSinhNo", "SoPhatSinhNo");
            tableMapping.ColumnMappings.Add("SoPhatSinhCo", "SoPhatSinhCo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TAI_KHOAN] WHERE (([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan) AND ([NgayCapNhat] = @Original_NgayCapNhat) AND ((@IsNull_SoDuDauNgay = 1 AND [SoDuDauNgay] IS NULL) OR ([SoDuDauNgay] = @Original_SoDuDauNgay)) AND ((@IsNull_SoPhatSinhNo = 1 AND [SoPhatSinhNo] IS NULL) OR ([SoPhatSinhNo] = @Original_SoPhatSinhNo)) AND ((@IsNull_SoPhatSinhCo = 1 AND [SoPhatSinhCo] IS NULL) OR ([SoPhatSinhCo] = @Original_SoPhatSinhCo)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDuDauNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDuDauNgay", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoPhatSinhNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoPhatSinhNo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoPhatSinhCo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoPhatSinhCo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TAI_KHOAN] ([SoHieuTaiKhoan], [NgayCapNhat], [SoDuDauNgay], [SoPhatSinhNo], [SoPhatSinhCo]) VALUES (@SoHieuTaiKhoan, @NgayCapNhat, @SoDuDauNgay, @SoPhatSinhNo, @SoPhatSinhCo);
SELECT SoHieuTaiKhoan, NgayCapNhat, SoDuDauNgay, SoPhatSinhNo, SoPhatSinhCo FROM TAI_KHOAN WHERE (NgayCapNhat = @NgayCapNhat) AND (SoHieuTaiKhoan = @SoHieuTaiKhoan)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDuDauNgay", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoPhatSinhNo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoPhatSinhCo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TAI_KHOAN] SET [SoHieuTaiKhoan] = @SoHieuTaiKhoan, [NgayCapNhat] = @NgayCapNhat, [SoDuDauNgay] = @SoDuDauNgay, [SoPhatSinhNo] = @SoPhatSinhNo, [SoPhatSinhCo] = @SoPhatSinhCo WHERE (([SoHieuTaiKhoan] = @Original_SoHieuTaiKhoan) AND ([NgayCapNhat] = @Original_NgayCapNhat) AND ((@IsNull_SoDuDauNgay = 1 AND [SoDuDauNgay] IS NULL) OR ([SoDuDauNgay] = @Original_SoDuDauNgay)) AND ((@IsNull_SoPhatSinhNo = 1 AND [SoPhatSinhNo] IS NULL) OR ([SoPhatSinhNo] = @Original_SoPhatSinhNo)) AND ((@IsNull_SoPhatSinhCo = 1 AND [SoPhatSinhCo] IS NULL) OR ([SoPhatSinhCo] = @Original_SoPhatSinhCo)));
SELECT SoHieuTaiKhoan, NgayCapNhat, SoDuDauNgay, SoPhatSinhNo, SoPhatSinhCo FROM TAI_KHOAN WHERE (NgayCapNhat = @NgayCapNhat) AND (SoHieuTaiKhoan = @SoHieuTaiKhoan)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoDuDauNgay", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoPhatSinhNo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SoPhatSinhCo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoHieuTaiKhoan", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "SoHieuTaiKhoan", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_NgayCapNhat", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "NgayCapNhat", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoDuDauNgay", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoDuDauNgay", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoDuDauNgay", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoPhatSinhNo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoPhatSinhNo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhNo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_SoPhatSinhCo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_SoPhatSinhCo", System.Data.SqlDbType.Float, 0, System.Data.ParameterDirection.Input, 0, 0, "SoPhatSinhCo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QuanLyTienGuiTietKiem.Properties.Settings.Default.ConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     TAI_KHOAN.*\r\nFROM         TAI_KHOAN";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     TAI_KHOAN.*\r\nFROM         TAI_KHOAN";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int ThemTaiKhoan__(DataSet1.TAI_KHOANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.TAI_KHOANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.TAI_KHOANDataTable dataTable = new DataSet1.TAI_KHOANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int XoaTaiKhoan__(DataSet1.TAI_KHOANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.TAI_KHOANDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DataSet1.TAI_KHOANDataTable dataTable = new DataSet1.TAI_KHOANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.TAI_KHOANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TAI_KHOAN");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SoHieuTaiKhoan, System.DateTime Original_NgayCapNhat, System.Nullable<double> Original_SoDuDauNgay, System.Nullable<double> Original_SoPhatSinhNo, System.Nullable<double> Original_SoPhatSinhCo) {
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_NgayCapNhat));
            if ((Original_SoDuDauNgay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_SoDuDauNgay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((Original_SoPhatSinhNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_SoPhatSinhNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_SoPhatSinhCo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_SoPhatSinhCo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SoHieuTaiKhoan, System.DateTime NgayCapNhat, System.Nullable<double> SoDuDauNgay, System.Nullable<double> SoPhatSinhNo, System.Nullable<double> SoPhatSinhCo) {
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SoHieuTaiKhoan));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(NgayCapNhat));
            if ((SoDuDauNgay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(SoDuDauNgay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SoPhatSinhNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(SoPhatSinhNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SoPhatSinhCo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(SoPhatSinhCo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SoHieuTaiKhoan, System.DateTime NgayCapNhat, System.Nullable<double> SoDuDauNgay, System.Nullable<double> SoPhatSinhNo, System.Nullable<double> SoPhatSinhCo, string Original_SoHieuTaiKhoan, System.DateTime Original_NgayCapNhat, System.Nullable<double> Original_SoDuDauNgay, System.Nullable<double> Original_SoPhatSinhNo, System.Nullable<double> Original_SoPhatSinhCo) {
            if ((SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SoHieuTaiKhoan));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(NgayCapNhat));
            if ((SoDuDauNgay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(SoDuDauNgay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((SoPhatSinhNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(SoPhatSinhNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((SoPhatSinhCo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(SoPhatSinhCo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_SoHieuTaiKhoan == null)) {
                throw new System.ArgumentNullException("Original_SoHieuTaiKhoan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SoHieuTaiKhoan));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_NgayCapNhat));
            if ((Original_SoDuDauNgay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_SoDuDauNgay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_SoPhatSinhNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_SoPhatSinhNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_SoPhatSinhCo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_SoPhatSinhCo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591